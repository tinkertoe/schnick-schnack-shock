function t(t,e,n,r){Object.defineProperty(t,e,{get:n,set:r,enumerable:!0,configurable:!0})}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function n(t,e){return Object.keys(e).forEach((function(n){"default"===n||"__esModule"===n||t.hasOwnProperty(n)||Object.defineProperty(t,n,{enumerable:!0,get:function(){return e[n]}})})),t}var r={},s={},a=e.parcelRequire13b0;null==a&&((a=function(t){if(t in r)return r[t].exports;if(t in s){var e=s[t];delete s[t];var n={id:t,exports:{}};return r[t]=n,e.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+t+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(t,e){s[t]=e},e.parcelRequire13b0=a);var i={};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object.defineProperty(i,"__esModule",{value:!0});var o={},l=o&&o.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,a){function i(t){try{l(r.next(t))}catch(t){a(t)}}function o(t){try{l(r.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}l((r=r.apply(t,e||[])).next())}))},u=o&&o.__generator||function(t,e){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(s=i.trys,(s=s.length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a};Object.defineProperty(o,"__esModule",{value:!0}),o.loadFromFiles=o.load=o.loadTruncatedMobileNet=o.CustomMobileNet=o.getTopKClasses=o.IMAGE_SIZE=void 0;var h={};t(h,"copyModel",(()=>os)),t(h,"listModels",(()=>as)),t(h,"moveModel",(()=>ls)),t(h,"removeModel",(()=>is)),t(h,"browserFiles",(()=>Wr)),t(h,"browserHTTPRequest",(()=>Jr)),t(h,"concatenateArrayBuffers",(()=>Ar)),t(h,"decodeWeights",(()=>Tr)),t(h,"encodeWeights",(()=>Nr)),t(h,"fromMemory",(()=>ts)),t(h,"getLoadHandlers",(()=>zr)),t(h,"getModelArtifactsForJSON",(()=>Cr)),t(h,"getModelArtifactsInfoForJSON",(()=>Rr)),t(h,"getSaveHandlers",(()=>Lr)),t(h,"http",(()=>Zr)),t(h,"isHTTPScheme",(()=>Kr)),t(h,"loadWeights",(()=>jr)),t(h,"registerLoadRouter",(()=>Mr)),t(h,"registerSaveRouter",(()=>Fr)),t(h,"weightsLoaderFactory",(()=>qr)),t(h,"withSaveHandler",(()=>es));var c={};function p(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,g(t,e,n)}function d(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n=t.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,g(t,n,r),g(e,n,r)}function f(t,e,n){return Math.max(t,Math.min(e,n))}function m(t){return t%2==0?t:t+1}function g(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function y(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function b(t,e){const n=Math.random();return e*n+(1-n)*t}function w(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n}function x(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function v(t,e,n=""){x(k(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function S(t){x(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function N(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||P(t)&&!n)for(let r=0;r<t.length;++r)N(t[r],e,n);else e.push(t);return e}function T(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function E(t){return 0===t.length}function k(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function I(t){return t%1==0}function A(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function $(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function _(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return p(e),e}function C(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function R(t,e=(t=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(t())return void r();a++;const o=e(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function D(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function O(t,e){const n=e.length;return x((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),x(t.every((t=>I(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function F(t,e){const n=[],r=[],s=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||s?null:O(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function M(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function L(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function z(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function B(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function U(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function P(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}function W(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function V(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function G(t){return"string"==typeof t||t instanceof String}function j(t){return"boolean"==typeof t}function q(t){return"number"==typeof t}function H(t){return Array.isArray(t)?H(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":q(t)?"float32":G(t)?"string":j(t)?"bool":"float32"}function K(t){return!!(t&&t.constructor&&t.call&&t.apply)}function X(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function Z(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function J(t,e,n,r=!1){const s=new Array;if(1===e.length){const a=e[0]*(r?2:1);for(let e=0;e<a;e++)s[e]=n[t+e]}else{const a=e[0],i=e.slice(1),o=i.reduce(((t,e)=>t*e))*(r?2:1);for(let e=0;e<a;e++)s[e]=J(t+e*o,i,n,r)}return s}function Q(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return J(0,t,e,n)}function Y(t,e){const n=tt(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function tt(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function et(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return Q(t,new Float32Array(n));if("int32"===e)return Q(t,new Int32Array(n));if("bool"===e)return Q(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function nt(t){t.forEach((e=>{x(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function rt(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function st(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function at(t){return t&&t.then&&"function"==typeof t.then}t(c,"shuffle",(()=>p)),t(c,"swap",(()=>g)),t(c,"shuffleCombo",(()=>d)),t(c,"clamp",(()=>f)),t(c,"nearestLargerEven",(()=>m)),t(c,"sum",(()=>y)),t(c,"randUniform",(()=>b)),t(c,"distSquared",(()=>w)),t(c,"assert",(()=>x)),t(c,"assertShapesMatch",(()=>v)),t(c,"arraysEqual",(()=>k)),t(c,"assertNonNull",(()=>S)),t(c,"flatten",(()=>N)),t(c,"isTypedArray",(()=>P)),t(c,"sizeFromShape",(()=>T)),t(c,"isScalarShape",(()=>E)),t(c,"isInt",(()=>I)),t(c,"tanh",(()=>A)),t(c,"sizeToSquarishShape",(()=>$)),t(c,"createShuffledIndices",(()=>_)),t(c,"rightPad",(()=>C)),t(c,"repeatedTry",(()=>R)),t(c,"inferFromImplicitShape",(()=>D)),t(c,"parseAxisParam",(()=>O)),t(c,"squeezeShape",(()=>F)),t(c,"getTypedArrayFromDType",(()=>M)),t(c,"getArrayFromDType",(()=>L)),t(c,"checkConversionForErrors",(()=>z)),t(c,"isValidDtype",(()=>B)),t(c,"hasEncodingLoss",(()=>U)),t(c,"bytesPerElement",(()=>W)),t(c,"bytesFromStringArray",(()=>V)),t(c,"isString",(()=>G)),t(c,"isBoolean",(()=>j)),t(c,"isNumber",(()=>q)),t(c,"inferDtype",(()=>H)),t(c,"isFunction",(()=>K)),t(c,"nearestDivisor",(()=>X)),t(c,"computeStrides",(()=>Z)),t(c,"toNestedArray",(()=>Q)),t(c,"makeOnesTypedArray",(()=>Y)),t(c,"makeZerosTypedArray",(()=>tt)),t(c,"makeZerosNestedTypedArray",(()=>et)),t(c,"assertNonNegativeIntegerDimensions",(()=>nt)),t(c,"locToIndex",(()=>rt)),t(c,"indexToLoc",(()=>st)),t(c,"isPromise",(()=>at));class it{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ot,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(lt().getBool("IS_TEST")||lt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];lt().getBool("IS_TEST")||lt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(at(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}}function ot(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function lt(){return ut}let ut=null;class ht{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class ct{refCount(t){return pt("refCount")}incRef(t){return pt("incRef")}timerAvailable(){return!0}time(t){return pt("time")}read(t){return pt("read")}readSync(t){return pt("readSync")}numDataIds(){return pt("numDataIds")}disposeData(t,e){return pt("disposeData")}write(t,e,n){return pt("write")}move(t,e,n,r,s){return pt("move")}memory(){return pt("memory")}floatPrecision(){return pt("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return pt("dispose")}}function pt(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}var dt,ft,mt,gt=dt={};function yt(){throw new Error("setTimeout has not been defined")}function bt(){throw new Error("clearTimeout has not been defined")}function wt(t){if(ft===setTimeout)return setTimeout(t,0);if((ft===yt||!ft)&&setTimeout)return ft=setTimeout,setTimeout(t,0);try{return ft(t,0)}catch(e){try{return ft.call(null,t,0)}catch(e){return ft.call(this,t,0)}}}!function(){try{ft="function"==typeof setTimeout?setTimeout:yt}catch(t){ft=yt}try{mt="function"==typeof clearTimeout?clearTimeout:bt}catch(t){mt=bt}}();var xt,vt=[],St=!1,Nt=-1;function Tt(){St&&xt&&(St=!1,xt.length?vt=xt.concat(vt):Nt=-1,vt.length&&Et())}function Et(){if(!St){var t=wt(Tt);St=!0;for(var e=vt.length;e;){for(xt=vt,vt=[];++Nt<e;)xt&&xt[Nt].run();Nt=-1,e=vt.length}xt=null,St=!1,function(t){if(mt===clearTimeout)return clearTimeout(t);if((mt===bt||!mt)&&clearTimeout)return mt=clearTimeout,clearTimeout(t);try{mt(t)}catch(e){try{return mt.call(null,t)}catch(e){return mt.call(this,t)}}}(t)}}function kt(t,e){this.fun=t,this.array=e}function It(){}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let At;function $t(){if(null==At){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==dt)t=dt;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}At=t}return At}function _t(t,e){const n=function(){const t=$t();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}gt.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];vt.push(new kt(t,e)),1!==vt.length||St||wt(Et)},kt.prototype.run=function(){this.fun.apply(null,this.array)},gt.title="browser",gt.browser=!0,gt.env={},gt.argv=[],gt.version="",gt.versions={},gt.on=It,gt.addListener=It,gt.once=It,gt.off=It,gt.removeListener=It,gt.removeAllListeners=It,gt.emit=It,gt.prependListener=It,gt.prependOnceListener=It,gt.listeners=function(t){return[]},gt.binding=function(t){throw new Error("process.binding is not supported")},gt.cwd=function(){return"/"},gt.chdir=function(t){throw new Error("process.chdir is not supported")},gt.umask=function(){return 0};var Ct={};function Rt(...t){lt().getBool("IS_TEST")||lt().getBool("PROD")||console.warn(...t)}function Dt(...t){lt().getBool("IS_TEST")||lt().getBool("PROD")||console.log(...t)}t(Ct,"warn",(()=>Rt)),t(Ct,"log",(()=>Dt));const Ot=_t("kernelRegistry",(()=>new Map)),Ft=_t("gradRegistry",(()=>new Map));function Mt(t,e){const n=Bt(t,e);return Ot.get(n)}function Lt(t){return Ft.get(t)}function zt(t){const e=Ot.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===t&&n.push(i)}return n}function Bt(t,e){return`${e}_${t}`}var Ut={};t(Ut,"createScalarValue",(()=>ke)),t(Ut,"encodeString",(()=>_e)),t(Ut,"toTypedArray",(()=>Ie)),t(Ut,"now",(()=>Ae)),t(Ut,"fetch",(()=>$e)),t(Ut,"decodeString",(()=>Ce));var Pt={};t(Pt,"hexToLong",(()=>fe)),t(Pt,"fingerPrint64",(()=>Ee));var Wt;Wt=Gt;var Vt=null;try{Vt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function Gt(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function jt(t){return!0===(t&&t.__isLong__)}Gt.prototype.__isLong__,Object.defineProperty(Gt.prototype,"__isLong__",{value:!0}),Gt.isLong=jt;var qt={},Ht={};function Kt(t,e){var n,r,s;return e?(s=0<=(t>>>=0)&&t<256)&&(r=Ht[t])?r:(n=Zt(t,(0|t)<0?-1:0,!0),s&&(Ht[t]=n),n):(s=-128<=(t|=0)&&t<128)&&(r=qt[t])?r:(n=Zt(t,t<0?-1:0,!1),s&&(qt[t]=n),n)}function Xt(t,e){if(isNaN(t))return e?ae:se;if(e){if(t<0)return ae;if(t>=ee)return he}else{if(t<=-ne)return ce;if(t+1>=ne)return ue}return t<0?Xt(-t,e).neg():Zt(t%te|0,t/te|0,e)}function Zt(t,e,n){return new Gt(t,e,n)}Gt.fromInt=Kt,Gt.fromNumber=Xt,Gt.fromBits=Zt;var Jt=Math.pow;function Qt(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return se;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return Qt(t.substring(1),e,n).neg();for(var s=Xt(Jt(n,8)),a=se,i=0;i<t.length;i+=8){var o=Math.min(8,t.length-i),l=parseInt(t.substring(i,i+o),n);if(o<8){var u=Xt(Jt(n,o));a=a.mul(u).add(Xt(l))}else a=(a=a.mul(s)).add(Xt(l))}return a.unsigned=e,a}function Yt(t,e){return"number"==typeof t?Xt(t,e):"string"==typeof t?Qt(t,e):Zt(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}Gt.fromString=Qt,Gt.fromValue=Yt;var te=4294967296,ee=te*te,ne=ee/2,re=Kt(16777216),se=Kt(0);Gt.ZERO=se;var ae=Kt(0,!0);Gt.UZERO=ae;var ie=Kt(1);Gt.ONE=ie;var oe=Kt(1,!0);Gt.UONE=oe;var le=Kt(-1);Gt.NEG_ONE=le;var ue=Zt(-1,2147483647,!1);Gt.MAX_VALUE=ue;var he=Zt(-1,-1,!0);Gt.MAX_UNSIGNED_VALUE=he;var ce=Zt(0,-2147483648,!1);Gt.MIN_VALUE=ce;var pe=Gt.prototype;pe.toInt=function(){return this.unsigned?this.low>>>0:this.low},pe.toNumber=function(){return this.unsigned?(this.high>>>0)*te+(this.low>>>0):this.high*te+(this.low>>>0)},pe.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(ce)){var e=Xt(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=Xt(Jt(t,6),this.unsigned),a=this,i="";;){var o=a.div(s),l=(a.sub(o.mul(s)).toInt()>>>0).toString(t);if((a=o).isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}},pe.getHighBits=function(){return this.high},pe.getHighBitsUnsigned=function(){return this.high>>>0},pe.getLowBits=function(){return this.low},pe.getLowBitsUnsigned=function(){return this.low>>>0},pe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ce)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},pe.isZero=function(){return 0===this.high&&0===this.low},pe.eqz=pe.isZero,pe.isNegative=function(){return!this.unsigned&&this.high<0},pe.isPositive=function(){return this.unsigned||this.high>=0},pe.isOdd=function(){return 1==(1&this.low)},pe.isEven=function(){return 0==(1&this.low)},pe.equals=function(t){return jt(t)||(t=Yt(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},pe.eq=pe.equals,pe.notEquals=function(t){return!this.eq(t)},pe.neq=pe.notEquals,pe.ne=pe.notEquals,pe.lessThan=function(t){return this.comp(t)<0},pe.lt=pe.lessThan,pe.lessThanOrEqual=function(t){return this.comp(t)<=0},pe.lte=pe.lessThanOrEqual,pe.le=pe.lessThanOrEqual,pe.greaterThan=function(t){return this.comp(t)>0},pe.gt=pe.greaterThan,pe.greaterThanOrEqual=function(t){return this.comp(t)>=0},pe.gte=pe.greaterThanOrEqual,pe.ge=pe.greaterThanOrEqual,pe.compare=function(t){if(jt(t)||(t=Yt(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},pe.comp=pe.compare,pe.negate=function(){return!this.unsigned&&this.eq(ce)?ce:this.not().add(ie)},pe.neg=pe.negate,pe.add=function(t){jt(t)||(t=Yt(t));var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=t.high>>>16,i=65535&t.high,o=t.low>>>16,l=0,u=0,h=0,c=0;return h+=(c+=s+(65535&t.low))>>>16,u+=(h+=r+o)>>>16,l+=(u+=n+i)>>>16,l+=e+a,Zt((h&=65535)<<16|(c&=65535),(l&=65535)<<16|(u&=65535),this.unsigned)},pe.subtract=function(t){return jt(t)||(t=Yt(t)),this.add(t.neg())},pe.sub=pe.subtract,pe.multiply=function(t){if(this.isZero())return se;if(jt(t)||(t=Yt(t)),Vt)return Zt(Vt.mul(this.low,this.high,t.low,t.high),Vt.get_high(),this.unsigned);if(t.isZero())return se;if(this.eq(ce))return t.isOdd()?ce:se;if(t.eq(ce))return this.isOdd()?ce:se;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(re)&&t.lt(re))return Xt(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=t.high>>>16,i=65535&t.high,o=t.low>>>16,l=65535&t.low,u=0,h=0,c=0,p=0;return c+=(p+=s*l)>>>16,h+=(c+=r*l)>>>16,c&=65535,h+=(c+=s*o)>>>16,u+=(h+=n*l)>>>16,h&=65535,u+=(h+=r*o)>>>16,h&=65535,u+=(h+=s*i)>>>16,u+=e*l+n*o+r*i+s*a,Zt((c&=65535)<<16|(p&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},pe.mul=pe.multiply,pe.divide=function(t){if(jt(t)||(t=Yt(t)),t.isZero())throw Error("division by zero");var e,n,r;if(Vt)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?Zt((this.unsigned?Vt.div_u:Vt.div_s)(this.low,this.high,t.low,t.high),Vt.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?ae:se;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return ae;if(t.gt(this.shru(1)))return oe;r=ae}else{if(this.eq(ce))return t.eq(ie)||t.eq(le)?ce:t.eq(ce)?ie:(e=this.shr(1).div(t).shl(1)).eq(se)?t.isNegative()?ie:le:(n=this.sub(t.mul(e)),r=e.add(n.div(t)));if(t.eq(ce))return this.unsigned?ae:se;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();r=se}for(n=this;n.gte(t);){e=Math.max(1,Math.floor(n.toNumber()/t.toNumber()));for(var s=Math.ceil(Math.log(e)/Math.LN2),a=s<=48?1:Jt(2,s-48),i=Xt(e),o=i.mul(t);o.isNegative()||o.gt(n);)o=(i=Xt(e-=a,this.unsigned)).mul(t);i.isZero()&&(i=ie),r=r.add(i),n=n.sub(o)}return r},pe.div=pe.divide,pe.modulo=function(t){return jt(t)||(t=Yt(t)),Vt?Zt((this.unsigned?Vt.rem_u:Vt.rem_s)(this.low,this.high,t.low,t.high),Vt.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},pe.mod=pe.modulo,pe.rem=pe.modulo,pe.not=function(){return Zt(~this.low,~this.high,this.unsigned)},pe.and=function(t){return jt(t)||(t=Yt(t)),Zt(this.low&t.low,this.high&t.high,this.unsigned)},pe.or=function(t){return jt(t)||(t=Yt(t)),Zt(this.low|t.low,this.high|t.high,this.unsigned)},pe.xor=function(t){return jt(t)||(t=Yt(t)),Zt(this.low^t.low,this.high^t.high,this.unsigned)},pe.shiftLeft=function(t){return jt(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?Zt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Zt(0,this.low<<t-32,this.unsigned)},pe.shl=pe.shiftLeft,pe.shiftRight=function(t){return jt(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?Zt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Zt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},pe.shr=pe.shiftRight,pe.shiftRightUnsigned=function(t){if(jt(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?Zt(this.low>>>t|e<<32-t,e>>>t,this.unsigned):Zt(32===t?e:e>>>t-32,0,this.unsigned)},pe.shru=pe.shiftRightUnsigned,pe.shr_u=pe.shiftRightUnsigned,pe.toSigned=function(){return this.unsigned?Zt(this.low,this.high,!1):this},pe.toUnsigned=function(){return this.unsigned?this:Zt(this.low,this.high,!0)},pe.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},pe.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},pe.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},Gt.fromBytes=function(t,e,n){return n?Gt.fromBytesLE(t,e):Gt.fromBytesBE(t,e)},Gt.fromBytesLE=function(t,e){return new Gt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},Gt.fromBytesBE=function(t,e){return new Gt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};const de=Wt.default||Wt;function fe(t){return de.fromString(t,!0,16)}const me=fe("c3a5c85c97cb3127"),ge=fe("b492b66fbe98f273"),ye=fe("9ae16a3b2f90404f");function be(t){return t.xor(t.shru(47))}function we(t,e,n){const r=t.slice(e,e+n);return de.fromBytes(Array.from(r),!0,!0)}function xe(t,e){return we(t,e,8)}function ve(t,e){return we(t,e,4)}function Se(t,e){return 0===e?t:t.shru(e).or(t.shl(64-e))}function Ne(t,e,n=fe("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Te(t,e,n,r){return function(t,e,n,r,s,a){s=s.add(t),a=Se(a.add(s).add(r),21);const i=s;return s=(s=s.add(e)).add(n),a=a.add(Se(s,44)),[s.add(r),a.add(i)]}(xe(t,e),xe(t,e+8),xe(t,e+16),xe(t,e+24),n,r)}function Ee(t,e=t.length){const n=de.fromNumber(81,!0);if(e<=32)return e<=16?function(t,e=t.length){if(e>=8){const n=ye.add(2*e),r=xe(t,0).add(ye),s=xe(t,e-8);return Ne(Se(s,37).mul(n).add(r),Se(r,25).add(s).mul(n),n)}if(e>=4){const n=ye.add(2*e);return Ne(ve(t,0).shl(3).add(e),ve(t,e-4),n)}if(e>0){const n=t[0]+(t[e>>1]<<8),r=e+(t[e-1]<<2);return be(ye.mul(n).xor(me.mul(r))).mul(ye)}return ye}(t,e):function(t,e=t.length){const n=ye.add(2*e),r=xe(t,0).mul(ge),s=xe(t,8),a=xe(t,e-8).mul(n),i=xe(t,e-16).mul(ye);return Ne(Se(r.add(s),43).add(Se(a,30)).add(i),r.add(Se(s.add(ye),18)).add(a),n)}(t,e);if(e<=64)return function(t,e=t.length){const n=ye.add(2*e),r=xe(t,0).mul(ye),s=xe(t,8),a=xe(t,e-8).mul(n),i=xe(t,e-16).mul(ye),o=Se(r.add(s),43).add(Se(a,30)).add(i),l=Ne(o,r.add(Se(s.add(ye),18)).add(a),n),u=xe(t,16).mul(n),h=xe(t,24),c=o.add(xe(t,e-32)).mul(n),p=l.add(xe(t,e-24)).mul(n);return Ne(Se(u.add(h),43).add(Se(c,30)).add(p),u.add(Se(h.add(r),18)).add(c),n)}(t,e);let r=n,s=n.mul(ge).add(113),a=be(s.mul(ye).add(113)).mul(ye),i=[de.UZERO,de.UZERO],o=[de.UZERO,de.UZERO];r=r.mul(ye).add(xe(t,0));let l=0;const u=64*(e-1>>6),h=u+(e-1&63)-63;do{r=Se(r.add(s).add(i[0]).add(xe(t,l+8)),37).mul(ge),s=Se(s.add(i[1]).add(xe(t,l+48)),42).mul(ge),r=r.xor(o[1]),s=s.add(i[0]).add(xe(t,l+40)),a=Se(a.add(o[0]),33).mul(ge),i=Te(t,l,i[1].mul(ge),r.add(o[0])),o=Te(t,l+32,a.add(o[1]),s.add(xe(t,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const c=ge.add(a.and(255).shl(1));return l=h,o[0]=o[0].add(e-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Se(r.add(s).add(i[0]).add(xe(t,l+8)),37).mul(c),s=Se(s.add(i[1]).add(xe(t,l+48)),42).mul(c),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(xe(t,l+40))),a=Se(a.add(o[0]),33).mul(c),i=Te(t,l,i[1].mul(c),r.add(o[0])),o=Te(t,l+32,a.add(o[1]),s.add(xe(t,l+16))),[a,r]=[r,a],Ne(Ne(i[0],o[0],c).add(be(s).mul(me)).add(a),Ne(i[1],o[1],c).add(r),c)}function ke(t,e){return"string"===e?_e(t):Ie([t],e)}function Ie(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=N(t)),lt().getBool("DEBUG")&&z(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function Ae(){return lt().platform.now()}function $e(t,e){return lt().platform.fetch(t,e)}function _e(t,e="utf-8"){return e=e||"utf-8",lt().platform.encode(t,e)}function Ce(t,e="utf-8"){return e=e||"utf-8",lt().platform.decode(t,e)}n(Ut,c),n(Ut,Pt);class Re{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Oe)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let a;const i=Ae();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();a=Promise.resolve({kernelMs:Ae()-i})}if(lt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{De(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:a.then((t=>t.kernelMs)),extraInfo:a.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:s,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),r,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],s,n[2])}))}))}}function De(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Oe{logKernelProfile(t,e,n,r,s,a){const i="number"==typeof r?C(`${r}ms`,9):r.error,o=C(t,25),l=e.rank,u=e.size,h=C(e.shape.toString(),14);let c="";for(const t in s){const n=s[t];if(null!=n){const r=n.shape||e.shape,s=r.length;c+=`${t}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${u}\t%c${c}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Fe(t,e,n,r){const s=Z(e),a=function(t,e,n,r){const s=T(e),a=r[r.length-1],i=new Array(a).fill(0),o=e.length,l="complex64"===n?Be(t):t;if(o>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Me(l[e+t],0,n).length)}return i}(t,e,n,s),i=e.length,o=ze(t,e,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Me(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:G(t)?`'${t}'`:"bool"===n?Le(t):parseFloat(t.toFixed(7)).toString(),C(r,e)}function Le(t){return 0===t?"false":"true"}function ze(t,e,n,r,s,a=!0){const i="complex64"===n?2:1,o=e[0],l=e.length;if(0===l){if("complex64"===n){return[Me(Be(t)[0],0,n)]}return"bool"===n?[Le(t[0])]:[t[0].toString()]}if(1===l){if(o>20){const e=3*i;let r=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-3)*i,o*i));return"complex64"===n&&(r=Be(r),a=Be(a)),["["+r.map(((t,e)=>Me(t,s[e],n))).join(", ")+", ..., "+a.map(((t,e)=>Me(t,s[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Be(t):Array.from(t)).map(((t,e)=>Me(t,s[e],n))).join(", ")+"]"]}const u=e.slice(1),h=r.slice(1),c=r[0]*i,p=[];if(o>20){for(let e=0;e<3;e++){const r=e*c,a=r+c;p.push(...ze(t.slice(r,a),u,n,h,s,!1))}p.push("...");for(let e=o-3;e<o;e++){const r=e*c,a=r+c;p.push(...ze(t.slice(r,a),u,n,h,s,e===o-1))}}else for(let e=0;e<o;e++){const r=e*c,a=r+c;p.push(...ze(t.slice(r,a),u,n,h,s,e===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let t=1;t<p.length-1;t++)p[t]=" "+p[t]+d;let f=",\n";for(let t=2;t<l;t++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Be(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}class Ue{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=T(t),null!=n){const t=n.length;x(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||L(e,this.size),this.strides=Z(t)}set(t,...e){0===e.length&&(e=[0]),x(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Pe().makeTensor(this.values,this.shape,this.dtype)}}let Pe=null,We=null,Ve=null;class Ge{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=T(t),this.strides=Z(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return We.buffer(this.shape,this.dtype,t)}bufferSync(){return We.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Q(this.shape,t,"complex64"===this.dtype)}arraySync(){return Q(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=Pe().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Ce(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=Pe().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Ce(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await Pe().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(Pe().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return We.print(this,t)}clone(){return this.throwIfDisposed(),We.clone(this)}toString(t=!1){return Fe(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),We.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Pe().makeVariable(this,t,e,n)}}Object.defineProperty(Ge,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),_t("Tensor",(()=>Ge));class je extends Ge{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!k(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Pe().disposeTensor(this),this.dataId=t.dataId,Pe().incRef(this,null)}dispose(){Pe().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(je,Symbol.hasInstance,{value:t=>t instanceof Ge&&null!=t.assign&&t.assign instanceof Function});var qe,He,Ke,Xe,Ze,Je,Qe,Ye,tn,en,nn={};t(nn,"makeTypesMatch",(()=>an)),t(nn,"assertTypesMatch",(()=>on)),t(nn,"isTensorInList",(()=>ln)),t(nn,"getTensorsInContainer",(()=>un)),(He=qe||(qe={})).R0="R0",He.R1="R1",He.R2="R2",He.R3="R3",He.R4="R4",He.R5="R5",He.R6="R6",(Xe=Ke||(Ke={})).float32="float32",Xe.int32="int32",Xe.bool="int32",Xe.complex64="complex64",(Je=Ze||(Ze={})).float32="float32",Je.int32="int32",Je.bool="bool",Je.complex64="complex64",(Ye=Qe||(Qe={})).float32="float32",Ye.int32="float32",Ye.bool="float32",Ye.complex64="complex64",(en=tn||(tn={})).float32="complex64",en.int32="complex64",en.bool="complex64",en.complex64="complex64";const rn={float32:Qe,int32:Ke,bool:Ze,complex64:tn};function sn(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return rn[t][e]}function an(t,e){if(t.dtype===e.dtype)return[t,e];const n=sn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function on(t,e){x(t.dtype===e.dtype,(()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`))}function ln(t,e){return e.some((e=>e.id===t.id))}function un(t){const e=[];return hn(t,e,new Set),e}function hn(t,e,n){if(null==t)return;if(t instanceof Ge)return void e.push(t);if(r=t,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=t;for(const t in s){const r=s[t];n.has(r)||(n.add(r),hn(r,e,n))}}function cn(t){return null!=t.kernelName}class pn{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class dn{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new pn}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(Rt(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new Re(this.backendInstance),!0}setupRegisteredKernels(){zt(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){zt(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof ct||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,Rt(`Initialization of backend ${t} failed`),Rt(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return Rt(`Initialization of backend ${t} failed`),Rt(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,s=this.readSync(e),a=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return dn.nextTensorId++}nextVariableId(){return dn.nextVariableId++}clone(t){const e=fn.runKernel("Identity",{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return fn.runKernel("Cast",e,n)}})),[],{}),e}runKernel(t,e,n){null==this.backendName&&this.backend;if(!(null!=Mt(t,this.backendName)))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let s=0;n.forEach((t=>{s+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=cn(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(cn(t)){const{kernelName:e,inputs:s,attrs:a}=t;null==this.backendName&&this.backend;const l=Mt(e,this.backendName);x(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),i=()=>{const t=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,i);const u=i.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)}));if(r){const t=this.getTensorsForGradient(e,s,u);n=this.saveTensorsForBackwardMode(t)}return u}}else{const{forwardFunc:e}=t,s=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};i=()=>{const t=this.backend.numDataIds();o=this.tidy((()=>e(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:u,attrs:h}=t,c=cn(t)?null:t.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),e=p.outputs):e=i()})),r&&this.addTapeNode(l,u,e,c,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((t=>null!=u[t]?u[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=Lt(t);if(null!=r){const t=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(x(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>s[e]));return a.concat(i)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;"string"===n&&G(t[0])&&(s=t.map((t=>_e(t))));const a=r.write(s,e,n),i=new Ge(e,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const t=this.state.tensorInfo.get(a),e=V(s);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){const s=new Ge(e,n=n||"float32",t,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const s=new je(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*W(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof je||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*W(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:s},o=Lt(t);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=tt(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],s,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=un(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(x(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));x(s instanceof Ge,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const r={},s={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(r[n.id]){a.outputs.forEach((t=>r[t.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in r)a[r[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(s[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const s=n.inputs[e];r[s.id]&&(t[e]=s)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,s);if(!r&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[s.id]=null==n?function(t){const e=Y(T(t),"float32");return fn.makeTensor(e,t,"float32")}(s.shape):n,function(t,e,n,r){for(let s=e.length-1;s>=0;s--){const a=e[s],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[e]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[e];if(!k(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=s;else{const e=t[i.id];t[i.id]=r(e,s),e.dispose()}}}}(t,a,(t=>this.tidy(t)),mn);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(t){return x(K(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;x(e.every((t=>t instanceof Ge)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};e.forEach(((t,e)=>{r[e]=t}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=t(...e,s),x(n.value instanceof Ge,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),x(K(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const s=n.gradFunc(t,r),a=Array.isArray(s)?s:[s];x(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),x(a.every((t=>t instanceof Ge)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Ae(),n=await this.backend.time(t);return n.wallMs=Ae()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new pn;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}dn.nextTensorId=0,dn.nextVariableId=0;const fn=function(){const t=$t();if(null==t._tfengine){const e=new it(t);t._tfengine=new dn(e)}var e;return e=t._tfengine.ENV,ut=e,Pe=()=>t._tfengine,t._tfengine}();function mn(t,e){const n={a:t,b:e};return fn.runKernel("Add",n)}function gn(t,e){let n=t;if(P(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||P(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&lt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&yn(t,r,[]),r}function yn(t,e,n){if(n=n||[],!Array.isArray(t)&&!P(t))return void x(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));x(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),x(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)yn(t[e],r,n.concat(e))}function bn(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function wn(t,e,n,r="numeric"){if(t instanceof Ge)return bn(r,t.dtype,e,n),t;let s=H(t);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),bn(r,s,e,n),null==t||!P(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=gn(t,s);P(t)||Array.isArray(t)||(t=[t]);const i="string"!==s?Ie(t,s):N(t,[],!0);return fn.makeTensor(i,a,s)}function xn(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>wn(t,`${e}[${s}]`,n,r)))}function vn(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{fn.startScope(n);try{const e=r(...t);return at(e)&&console.error("Cannot return a Promise inside of tidy."),fn.endScope(e),e}catch(t){throw fn.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Sn=vn({complex_:function(t,e){const n=wn(t,"real","complex"),r=wn(e,"imag","complex");v(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return fn.runKernel("Complex",s)}});function Nn(t,e,n,r){if(null==r&&(r=H(t)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!P(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){nt(e);const t=T(e),r=T(n);x(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],s=t!==n.length-1||r!==T(e.slice(t));x(n[t]===e[t]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return P(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==r?Ie(t,r):N(t,[],!0),fn.makeTensor(t,e,r)}function Tn(t,e,n){return Nn(t,e,gn(t,n),n)}const En={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var kn,In,An;In=function(t){var e,n,r=Ln(t),s=r[0],a=r[1],i=new Dn(function(t,e,n){return 3*(e+n)/4-n}(0,s,a)),o=0,l=a>0?s-4:s;for(n=0;n<l;n+=4)e=Rn[t.charCodeAt(n)]<<18|Rn[t.charCodeAt(n+1)]<<12|Rn[t.charCodeAt(n+2)]<<6|Rn[t.charCodeAt(n+3)],i[o++]=e>>16&255,i[o++]=e>>8&255,i[o++]=255&e;2===a&&(e=Rn[t.charCodeAt(n)]<<2|Rn[t.charCodeAt(n+1)]>>4,i[o++]=255&e);1===a&&(e=Rn[t.charCodeAt(n)]<<10|Rn[t.charCodeAt(n+1)]<<4|Rn[t.charCodeAt(n+2)]>>2,i[o++]=e>>8&255,i[o++]=255&e);return i},An=function(t){for(var e,n=t.length,r=n%3,s=[],a=16383,i=0,o=n-r;i<o;i+=a)s.push(zn(t,i,i+a>o?o:i+a));1===r?(e=t[n-1],s.push(Cn[e>>2]+Cn[e<<4&63]+"==")):2===r&&(e=(t[n-2]<<8)+t[n-1],s.push(Cn[e>>10]+Cn[e>>4&63]+Cn[e<<2&63]+"="));return s.join("")}
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */;for(var $n,_n,Cn=[],Rn=[],Dn="undefined"!=typeof Uint8Array?Uint8Array:Array,On="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Fn=0,Mn=On.length;Fn<Mn;++Fn)Cn[Fn]=On[Fn],Rn[On.charCodeAt(Fn)]=Fn;function Ln(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function zn(t,e,n){for(var r,s,a=[],i=e;i<n;i+=3)r=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),a.push(Cn[(s=r)>>18&63]+Cn[s>>12&63]+Cn[s>>6&63]+Cn[63&s]);return a.join("")}Rn["-".charCodeAt(0)]=62,Rn["_".charCodeAt(0)]=63,$n=function(t,e,n,r,s){var a,i,o=8*s-r-1,l=(1<<o)-1,u=l>>1,h=-7,c=n?s-1:0,p=n?-1:1,d=t[e+c];for(c+=p,a=d&(1<<-h)-1,d>>=-h,h+=o;h>0;a=256*a+t[e+c],c+=p,h-=8);for(i=a&(1<<-h)-1,a>>=-h,h+=r;h>0;i=256*i+t[e+c],c+=p,h-=8);if(0===a)a=1-u;else{if(a===l)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=u}return(d?-1:1)*i*Math.pow(2,a-r)},_n=function(t,e,n,r,s,a){var i,o,l,u=8*a-s-1,h=(1<<u)-1,c=h>>1,p=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=h):(i=Math.floor(Math.log(e)/Math.LN2),e*(l=Math.pow(2,-i))<1&&(i--,l*=2),(e+=i+c>=1?p/l:p*Math.pow(2,1-c))*l>=2&&(i++,l/=2),i+c>=h?(o=0,i=h):i+c>=1?(o=(e*l-1)*Math.pow(2,s),i+=c):(o=e*Math.pow(2,c-1)*Math.pow(2,s),i=0));s>=8;t[n+d]=255&o,d+=f,o/=256,s-=8);for(i=i<<s|o,u+=s;u>0;t[n+d]=255&i,d+=f,i/=256,u-=8);t[n+d-f]|=128*m};var Bn="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;kn=Pn;function Un(t){if(t>2147483647)throw new RangeError('The value "'+t+'" is invalid for option "size"');var e=new Uint8Array(t);return Object.setPrototypeOf(e,Pn.prototype),e}function Pn(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return Gn(t)}return Wn(t,e,n)}function Wn(t,e,n){if("string"==typeof t)return function(t,e){"string"==typeof e&&""!==e||(e="utf8");if(!Pn.isEncoding(e))throw new TypeError("Unknown encoding: "+e);var n=0|Kn(t,e),r=Un(n),s=r.write(t,e);s!==n&&(r=r.slice(0,s));return r}(t,e);if(ArrayBuffer.isView(t))return function(t){if(wr(t,Uint8Array)){var e=new Uint8Array(t);return qn(e.buffer,e.byteOffset,e.byteLength)}return jn(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(wr(t,ArrayBuffer)||t&&wr(t.buffer,ArrayBuffer))return qn(t,e,n);if("undefined"!=typeof SharedArrayBuffer&&(wr(t,SharedArrayBuffer)||t&&wr(t.buffer,SharedArrayBuffer)))return qn(t,e,n);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=t.valueOf&&t.valueOf();if(null!=r&&r!==t)return Pn.from(r,e,n);var s=function(t){if(Pn.isBuffer(t)){var e=0|Hn(t.length),n=Un(e);return 0===n.length||t.copy(n,0,0,e),n}if(void 0!==t.length)return"number"!=typeof t.length||xr(t.length)?Un(0):jn(t);if("Buffer"===t.type&&Array.isArray(t.data))return jn(t.data)}(t);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return Pn.from(t[Symbol.toPrimitive]("string"),e,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function Vn(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function Gn(t){return Vn(t),Un(t<0?0:0|Hn(t))}function jn(t){for(var e=t.length<0?0:0|Hn(t.length),n=Un(e),r=0;r<e;r+=1)n[r]=255&t[r];return n}function qn(t,e,n){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(n||0))throw new RangeError('"length" is outside of buffer bounds');var r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),Object.setPrototypeOf(r,Pn.prototype),r}function Hn(t){if(t>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|t}function Kn(t,e){if(Pn.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||wr(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);var n=t.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;for(var s=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return gr(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return yr(t).length;default:if(s)return r?-1:gr(t).length;e=(""+e).toLowerCase(),s=!0}}function Xn(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return lr(this,e,n);case"utf8":case"utf-8":return ar(this,e,n);case"ascii":return ir(this,e,n);case"latin1":case"binary":return or(this,e,n);case"base64":return sr(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return ur(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function Zn(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function Jn(t,e,n,r,s){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),xr(n=+n)&&(n=s?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(s)return-1;n=t.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof e&&(e=Pn.from(e,r)),Pn.isBuffer(e))return 0===e.length?-1:Qn(t,e,n,r,s);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):Qn(t,[e],n,r,s);throw new TypeError("val must be string, number or Buffer")}function Qn(t,e,n,r,s){var a,i=1,o=t.length,l=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,l/=2,n/=2}function u(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(s){var h=-1;for(a=n;a<o;a++)if(u(t,a)===u(e,-1===h?0:a-h)){if(-1===h&&(h=a),a-h+1===l)return h*i}else-1!==h&&(a-=a-h),h=-1}else for(n+l>o&&(n=o-l),a=n;a>=0;a--){for(var c=!0,p=0;p<l;p++)if(u(t,a+p)!==u(e,p)){c=!1;break}if(c)return a}return-1}function Yn(t,e,n,r){n=Number(n)||0;var s=t.length-n;r?(r=Number(r))>s&&(r=s):r=s;var a=e.length;r>a/2&&(r=a/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(xr(o))return i;t[n+i]=o}return i}function tr(t,e,n,r){return br(gr(e,t.length-n),t,n,r)}function er(t,e,n,r){return br(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function nr(t,e,n,r){return br(yr(e),t,n,r)}function rr(t,e,n,r){return br(function(t,e){for(var n,r,s,a=[],i=0;i<t.length&&!((e-=2)<0);++i)r=(n=t.charCodeAt(i))>>8,s=n%256,a.push(s),a.push(r);return a}(e,t.length-n),t,n,r)}function sr(t,e,n){return 0===e&&n===t.length?An(t):An(t.slice(e,n))}function ar(t,e,n){n=Math.min(t.length,n);for(var r=[],s=e;s<n;){var a,i,o,l,u=t[s],h=null,c=u>239?4:u>223?3:u>191?2:1;if(s+c<=n)switch(c){case 1:u<128&&(h=u);break;case 2:128==(192&(a=t[s+1]))&&(l=(31&u)<<6|63&a)>127&&(h=l);break;case 3:a=t[s+1],i=t[s+2],128==(192&a)&&128==(192&i)&&(l=(15&u)<<12|(63&a)<<6|63&i)>2047&&(l<55296||l>57343)&&(h=l);break;case 4:a=t[s+1],i=t[s+2],o=t[s+3],128==(192&a)&&128==(192&i)&&128==(192&o)&&(l=(15&u)<<18|(63&a)<<12|(63&i)<<6|63&o)>65535&&l<1114112&&(h=l)}null===h?(h=65533,c=1):h>65535&&(h-=65536,r.push(h>>>10&1023|55296),h=56320|1023&h),r.push(h),s+=c}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}Pn.TYPED_ARRAY_SUPPORT=function(){try{var t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),Pn.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Pn.prototype,"parent",{enumerable:!0,get:function(){if(Pn.isBuffer(this))return this.buffer}}),Object.defineProperty(Pn.prototype,"offset",{enumerable:!0,get:function(){if(Pn.isBuffer(this))return this.byteOffset}}),Pn.poolSize=8192,Pn.from=function(t,e,n){return Wn(t,e,n)},Object.setPrototypeOf(Pn.prototype,Uint8Array.prototype),Object.setPrototypeOf(Pn,Uint8Array),Pn.alloc=function(t,e,n){return function(t,e,n){return Vn(t),t<=0?Un(t):void 0!==e?"string"==typeof n?Un(t).fill(e,n):Un(t).fill(e):Un(t)}(t,e,n)},Pn.allocUnsafe=function(t){return Gn(t)},Pn.allocUnsafeSlow=function(t){return Gn(t)},Pn.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==Pn.prototype},Pn.compare=function(t,e){if(wr(t,Uint8Array)&&(t=Pn.from(t,t.offset,t.byteLength)),wr(e,Uint8Array)&&(e=Pn.from(e,e.offset,e.byteLength)),!Pn.isBuffer(t)||!Pn.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;for(var n=t.length,r=e.length,s=0,a=Math.min(n,r);s<a;++s)if(t[s]!==e[s]){n=t[s],r=e[s];break}return n<r?-1:r<n?1:0},Pn.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Pn.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return Pn.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=Pn.allocUnsafe(e),s=0;for(n=0;n<t.length;++n){var a=t[n];if(wr(a,Uint8Array))s+a.length>r.length?Pn.from(a).copy(r,s):Uint8Array.prototype.set.call(r,a,s);else{if(!Pn.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(r,s)}s+=a.length}return r},Pn.byteLength=Kn,Pn.prototype._isBuffer=!0,Pn.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)Zn(this,e,e+1);return this},Pn.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)Zn(this,e,e+3),Zn(this,e+1,e+2);return this},Pn.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)Zn(this,e,e+7),Zn(this,e+1,e+6),Zn(this,e+2,e+5),Zn(this,e+3,e+4);return this},Pn.prototype.toString=function(){var t=this.length;return 0===t?"":0===arguments.length?ar(this,0,t):Xn.apply(this,arguments)},Pn.prototype.toLocaleString=Pn.prototype.toString,Pn.prototype.equals=function(t){if(!Pn.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===Pn.compare(this,t)},Pn.prototype.inspect=function(){var t="";return t=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(t+=" ... "),"<Buffer "+t+">"},Bn&&(Pn.prototype[Bn]=Pn.prototype.inspect),Pn.prototype.compare=function(t,e,n,r,s){if(wr(t,Uint8Array)&&(t=Pn.from(t,t.offset,t.byteLength)),!Pn.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),e<0||n>t.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&e>=n)return 0;if(r>=s)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(a,i),l=this.slice(r,s),u=t.slice(e,n),h=0;h<o;++h)if(l[h]!==u[h]){a=l[h],i=u[h];break}return a<i?-1:i<a?1:0},Pn.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},Pn.prototype.indexOf=function(t,e,n){return Jn(this,t,e,n,!0)},Pn.prototype.lastIndexOf=function(t,e,n){return Jn(this,t,e,n,!1)},Pn.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var a=!1;;)switch(r){case"hex":return Yn(this,t,e,n);case"utf8":case"utf-8":return tr(this,t,e,n);case"ascii":case"latin1":case"binary":return er(this,t,e,n);case"base64":return nr(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return rr(this,t,e,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},Pn.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function ir(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(127&t[s]);return r}function or(t,e,n){var r="";n=Math.min(t.length,n);for(var s=e;s<n;++s)r+=String.fromCharCode(t[s]);return r}function lr(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var s="",a=e;a<n;++a)s+=vr[t[a]];return s}function ur(t,e,n){for(var r=t.slice(e,n),s="",a=0;a<r.length-1;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function hr(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function cr(t,e,n,r,s,a){if(!Pn.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>s||e<a)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function pr(t,e,n,r,s,a){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function dr(t,e,n,r,s){return e=+e,n>>>=0,s||pr(t,0,n,4),_n(t,e,n,r,23,4),n+4}function fr(t,e,n,r,s){return e=+e,n>>>=0,s||pr(t,0,n,8),_n(t,e,n,r,52,8),n+8}Pn.prototype.slice=function(t,e){var n=this.length;(t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(e=void 0===e?n:~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);var r=this.subarray(t,e);return Object.setPrototypeOf(r,Pn.prototype),r},Pn.prototype.readUintLE=Pn.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||hr(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r},Pn.prototype.readUintBE=Pn.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||hr(t,e,this.length);for(var r=this[t+--e],s=1;e>0&&(s*=256);)r+=this[t+--e]*s;return r},Pn.prototype.readUint8=Pn.prototype.readUInt8=function(t,e){return t>>>=0,e||hr(t,1,this.length),this[t]},Pn.prototype.readUint16LE=Pn.prototype.readUInt16LE=function(t,e){return t>>>=0,e||hr(t,2,this.length),this[t]|this[t+1]<<8},Pn.prototype.readUint16BE=Pn.prototype.readUInt16BE=function(t,e){return t>>>=0,e||hr(t,2,this.length),this[t]<<8|this[t+1]},Pn.prototype.readUint32LE=Pn.prototype.readUInt32LE=function(t,e){return t>>>=0,e||hr(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},Pn.prototype.readUint32BE=Pn.prototype.readUInt32BE=function(t,e){return t>>>=0,e||hr(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},Pn.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||hr(t,e,this.length);for(var r=this[t],s=1,a=0;++a<e&&(s*=256);)r+=this[t+a]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*e)),r},Pn.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||hr(t,e,this.length);for(var r=e,s=1,a=this[t+--r];r>0&&(s*=256);)a+=this[t+--r]*s;return a>=(s*=128)&&(a-=Math.pow(2,8*e)),a},Pn.prototype.readInt8=function(t,e){return t>>>=0,e||hr(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},Pn.prototype.readInt16LE=function(t,e){t>>>=0,e||hr(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},Pn.prototype.readInt16BE=function(t,e){t>>>=0,e||hr(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},Pn.prototype.readInt32LE=function(t,e){return t>>>=0,e||hr(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},Pn.prototype.readInt32BE=function(t,e){return t>>>=0,e||hr(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},Pn.prototype.readFloatLE=function(t,e){return t>>>=0,e||hr(t,4,this.length),$n(this,t,!0,23,4)},Pn.prototype.readFloatBE=function(t,e){return t>>>=0,e||hr(t,4,this.length),$n(this,t,!1,23,4)},Pn.prototype.readDoubleLE=function(t,e){return t>>>=0,e||hr(t,8,this.length),$n(this,t,!0,52,8)},Pn.prototype.readDoubleBE=function(t,e){return t>>>=0,e||hr(t,8,this.length),$n(this,t,!1,52,8)},Pn.prototype.writeUintLE=Pn.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e>>>=0,n>>>=0,r)||cr(this,t,e,n,Math.pow(2,8*n)-1,0);var s=1,a=0;for(this[e]=255&t;++a<n&&(s*=256);)this[e+a]=t/s&255;return e+n},Pn.prototype.writeUintBE=Pn.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e>>>=0,n>>>=0,r)||cr(this,t,e,n,Math.pow(2,8*n)-1,0);var s=n-1,a=1;for(this[e+s]=255&t;--s>=0&&(a*=256);)this[e+s]=t/a&255;return e+n},Pn.prototype.writeUint8=Pn.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,1,255,0),this[e]=255&t,e+1},Pn.prototype.writeUint16LE=Pn.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},Pn.prototype.writeUint16BE=Pn.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},Pn.prototype.writeUint32LE=Pn.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},Pn.prototype.writeUint32BE=Pn.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Pn.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);cr(this,t,e,n,s-1,-s)}var a=0,i=1,o=0;for(this[e]=255&t;++a<n&&(i*=256);)t<0&&0===o&&0!==this[e+a-1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Pn.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){var s=Math.pow(2,8*n-1);cr(this,t,e,n,s-1,-s)}var a=n-1,i=1,o=0;for(this[e+a]=255&t;--a>=0&&(i*=256);)t<0&&0===o&&0!==this[e+a+1]&&(o=1),this[e+a]=(t/i>>0)-o&255;return e+n},Pn.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},Pn.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},Pn.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},Pn.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},Pn.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||cr(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},Pn.prototype.writeFloatLE=function(t,e,n){return dr(this,t,e,!0,n)},Pn.prototype.writeFloatBE=function(t,e,n){return dr(this,t,e,!1,n)},Pn.prototype.writeDoubleLE=function(t,e,n){return fr(this,t,e,!0,n)},Pn.prototype.writeDoubleBE=function(t,e,n){return fr(this,t,e,!1,n)},Pn.prototype.copy=function(t,e,n,r){if(!Pn.isBuffer(t))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var s=r-n;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,n,r):Uint8Array.prototype.set.call(t,this.subarray(n,r),e),s},Pn.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Pn.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===t.length){var s=t.charCodeAt(0);("utf8"===r&&s<128||"latin1"===r)&&(t=s)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var i=Pn.isBuffer(t)?t:Pn.from(t,r),o=i.length;if(0===o)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(a=0;a<n-e;++a)this[a+e]=i[a%o]}return this};var mr=/[^+/0-9A-Za-z-_]/g;function gr(t,e){var n;e=e||1/0;for(var r=t.length,s=null,a=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!s){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(e-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function yr(t){return In(function(t){if((t=(t=t.split("=")[0]).trim().replace(mr,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function br(t,e,n,r){for(var s=0;s<r&&!(s+n>=e.length||s>=t.length);++s)e[s+n]=t[s];return s}function wr(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function xr(t){return t!=t}var vr=function(){for(var t="0123456789abcdef",e=new Array(256),n=0;n<16;++n)for(var r=16*n,s=0;s<16;++s)e[r+s]=t[n]+t[s];return e}(),Sr=kn;async function Nr(t,e){const n=[],r=[],s=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let s=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:Er(await Promise.all(r)),specs:n}}function Tr(t,e){const n={};let r,s=0;for(const a of e){const e=a.name,i=a.dtype,o=a.shape,l=T(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=En[n.dtype],h=t.slice(s,s+l*o),c="uint8"===n.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(c.length);for(let t=0;t<c.length;t++){const e=c[t];u[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Dr()),u=r(c)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(c.length);for(let t=0;t<c.length;t++){const e=c[t];u[t]=Math.round(e*n.scale+n.min)}}s+=l*o}else if("string"===i){const e=T(a.shape);u=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(s,s+4))[0];s+=4;const n=new Uint8Array(t.slice(s,s+e));u.push(n),s+=e}}else{const r=En[i],a=t.slice(s,s+l*r);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${e}': ${i}`);{u=new Float32Array(a);const t=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],r[e]=u[2*e+1];const s=Tn(t,o,"float32"),i=Tn(r,o,"float32");n[e]=Sn(s,i),s.dispose(),i.dispose()}}s+=l*r}"complex64"!==i&&(n[e]=Tn(u,o,i))}return n}function Er(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let s=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),s),s+=t.byteLength})),r.buffer}const kr=void 0!==Sr&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ir(t){return kr?Sr.byteLength(t):new Blob([t]).size}function Ar(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function $r(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function _r(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),n}async function Cr(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(null!=t.trainingConfig&&(n.trainingConfig=t.trainingConfig),null!=t.weightsManifest){const[r,s]=await e(t.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=t.signature&&(n.signature=t.signature),null!=t.userDefinedMetadata&&(n.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(n.modelInitializer=t.modelInitializer),n}function Rr(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:Ir(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:Ir(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function Dr(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=t[n[i>>10]+(1023&i)]+e[i>>10];a[s]=o}return new Float32Array(s)}}class Or{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Or.instance&&(Or.instance=new Or),Or.instance}static registerSaveRouter(t){Or.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Or.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Or.getHandlers(t,"save")}static getLoadHandlers(t,e){return Or.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?Or.getInstance().loadRouters:Or.getInstance().saveRouters).forEach((e=>{const s=e(t,n);null!==s&&r.push(s)})),r}}const Fr=t=>Or.registerSaveRouter(t),Mr=t=>Or.registerLoadRouter(t),Lr=t=>Or.getSaveHandlers(t),zr=(t,e)=>Or.getLoadHandlers(t,e);function Br(t){return new Promise((t=>setTimeout(t))).then(t)}class Ur{constructor(t){if(!lt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ur.URL_SCHEME)&&(t=t.slice(Ur.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=_r(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Br((()=>s.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Br((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Rr(t)}}}}Ur.URL_SCHEME="downloads://";class Pr{constructor(t){if(null==t||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise(((t,e)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void t({modelTopology:s});const a=Cr(r,(t=>this.loadWeights(t)));t(a)},n.onerror=t=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(t){const e=[],n=[];for(const r of t)e.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(t),s=n.map((t=>this.loadWeightsFile(t,r[t])));return Promise.all(s).then((t=>[e,Ar(t)]))}loadWeightsFile(t,e){return new Promise(((n,r)=>{const s=new FileReader;s.onload=t=>{const e=t.target.result;n(e)},s.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)}))}checkManifestAndWeightFiles(t){const e=[],n=this.weightsFiles.map((t=>$r(t.name))),r={};for(const s of t)s.paths.forEach((t=>{const s=$r(t);if(-1!==e.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(e.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[t]=this.weightsFiles[n.indexOf(s)]}));if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Wr(t){return new Pr(t)}function Vr(t,e,n,r){var s,a,i;x(null!=(s=t)&&Array.isArray(s)&&s.length>0,(()=>"promises must be a none empty array")),i=r=null==r?1:r,x((a=n=null==n?0:n)>=0&&a<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`)),x(i>=0&&i<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`)),x(i>=a,(()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${i}`));let o=0;return Promise.all(t.map((s=>(s.then((s=>{const a=n+ ++o/t.length*(r-n);return e(a),s})),s))))}async function Gr(t,e){null==e&&(e={});const n=null==e.fetchFunc?lt().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),s=(null==e.onProgress?await Promise.all(r):await Vr(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(s):await Vr(s,e.onProgress,.5,1)}async function jr(t,e="",n,r){return qr((t=>Gr(t,{requestInit:r})))(t,e,n)}function qr(t){return async(e,n="",r)=>{const s=e.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(e.forEach(((t,e)=>{let n=0;t.weights.forEach((t=>{const l="quantization"in t?t.quantization.dtype:t.dtype,u=En[l]*T(t.shape),h=()=>{s[e]=!0,null==a[e]&&(a[e]=[]),a[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((e,n)=>{e===t.name&&(h(),i[n]=!0)})):h(),o.push(t.name),n+=u}))})),!i.every((t=>t))){const t=r.filter(((t,e)=>!i[e]));throw new Error(`Could not find weights in manifest with names: ${t.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((t,e,n)=>(e&&t.push(n),t)),[]),u=[];l.forEach((t=>{e[t].paths.forEach((t=>{const e=n+(n.endsWith("/")?"":"/")+t;u.push(e)}))}));const h=await t(u),c={};let p=0;return l.forEach((t=>{const n=e[t].paths.length;let r=0;for(let t=0;t<n;t++)r+=h[p+t].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(h[p+t]);i.set(e,o),o+=e.byteLength}a[t].forEach((t=>{const e=Tr(s.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(const t in e)c[t]=e[t]})),p+=n})),c}}Or.registerSaveRouter((t=>lt().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ur.URL_SCHEME)?function(t="model"){return new Ur(t)}(t.slice(Ur.URL_SCHEME.length)):null));class Hr{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(x("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=lt().platform.fetch,x(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&x(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=_r(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Rr(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Cr(e,(t=>this.loadWeights(t)))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}(e),s=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(s+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,Ar(await Gr(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Kr(t){return null!=t.match(Hr.URL_SCHEME_REGEX)}Hr.URL_SCHEME_REGEX=/^https?:\/\//;const Xr=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>Kr(t))):Kr(t),n)return Zr(t,e)}return null};function Zr(t,e){return new Hr(t,e)}function Jr(t,e){return Zr(t,e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Or.registerSaveRouter(Xr),Or.registerLoadRouter(Xr);class Qr{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class Yr{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function ts(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new Qr(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Qr({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Qr({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function es(t){return new Yr(t)}class ns{constructor(){this.managers={}}static getInstance(){return null==ns.instance&&(ns.instance=new ns),ns.instance}static registerManager(t,e){x(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),x(t.length>0,(()=>"scheme must not be an empty string."));const n=ns.getInstance();x(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function rs(t){if(-1===t.indexOf("://"))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ns.getSchemes().join(",")}`);return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function ss(t,e,n=!1){x(t!==e,(()=>`Old path and new path are the same: '${t}'`));const r=Or.getLoadHandlers(t);x(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${t}.`)),x(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`));const s=r[0],a=Or.getSaveHandlers(e);x(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${e}.`)),x(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`));const i=a[0],o=rs(t).scheme,l=rs(t).path,u=o===rs(t).scheme,h=await s.load();n&&u&&await ns.getManager(o).removeModel(l);const c=await i.save(h);return n&&!u&&await ns.getManager(o).removeModel(l),c.modelArtifactsInfo}async function as(){const t=ns.getSchemes(),e={};for(const n of t){const t=await ns.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function is(t){const e=rs(t);return ns.getManager(e.scheme).removeModel(e.path)}async function os(t,e){return ss(t,e,!1)}async function ls(t,e){return ss(t,e,!0)}var us={};t(us,"fromPixelsAsync",(()=>fs)),t(us,"toPixels",(()=>ms)),t(us,"fromPixels",(()=>gs));const hs=vn({cast_:function(t,e){const n=wn(t,"x","cast");if(!B(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return fn.runKernel("Cast",r,s)}});let cs;function ps(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else if(null!=t.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);o=!0}if(s){const e=2;if(s&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Mt("FromPixels",fn.backendName)){const n={pixels:t},r={numChannels:e};return fn.runKernel("FromPixels",n,r)}const[l,u]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let h,c;if(i)h=t.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)h=t.data;else if(a||s||o){if(null==cs)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");cs=new OffscreenCanvas(1,1).getContext("2d")}else cs=document.createElement("canvas").getContext("2d");cs.canvas.width=l,cs.canvas.height=u,cs.drawImage(t,0,0,l,u),h=cs.getImageData(0,0,l,u).data}if(4===e)c=new Int32Array(h);else{const t=l*u;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=h[4*n+t]}return function(t,e,n){if(S(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=gn(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Nn(t,e,r,n)}(c,[u,l,e],"int32")}function ds(t){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}async function fs(t,e=3){let n=null;if(lt().getBool("WRAP_TO_IMAGEBITMAP")&&ds(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(t){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return ps(n,e)}async function ms(t,e){let n=wn(t,"img","toPixels");if(!(t instanceof Ge)){const t=n;n=hs(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(s*r*4);for(let t=0;t<r*s;++t){const e=[0,0,0,255];for(let r=0;r<a;r++){const s=i[t*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(e[0]=s*o,e[1]=s*o,e[2]=s*o):e[r]=s*o}const r=4*t;l[r+0]=Math.round(e[0]),l[r+1]=Math.round(e[1]),l[r+2]=Math.round(e[2]),l[r+3]=Math.round(e[3])}if(null!=e){e.width=s,e.height=r;const t=e.getContext("2d"),n=new ImageData(l,s,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),l}const gs=vn({fromPixels_:ps});var ys={};t(ys,"assertParamsValid",(()=>bs)),t(ys,"maskToAxes",(()=>ws)),t(ys,"computeOutShape",(()=>xs)),t(ys,"stridesWithElidedDims",(()=>vs)),t(ys,"getNormalizedAxes",(()=>Ts)),t(ys,"startIndicesWithElidedDims",(()=>Es)),t(ys,"stopIndicesWithElidedDims",(()=>ks)),t(ys,"startForAxis",(()=>As)),t(ys,"stopForAxis",(()=>$s)),t(ys,"stridesForAxis",(()=>Is)),t(ys,"isSliceContinous",(()=>_s)),t(ys,"computeFlatOffset",(()=>Cs)),t(ys,"parseSliceParams",(()=>Rs)),t(ys,"sliceInfo",(()=>Ds));function bs(t,e,n){const r=t.shape.length;x(r===e.length,(()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`)),x(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)x(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function ws(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function xs(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function vs(t,e,n,r){const s=[...t];for(let t=s.length;t<r.length;t++)s.push(1);for(let t=0;t<n;t++)0===t?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Ss(t,e,n){return n<=t?n:n-(e-1)}function Ns(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Ts(t,e,n,r,s,a,i,o,l){const u=t.length;let h=new Array(u),c=new Array(u),p=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;h=Es(i,l,u,r,t),c=ks(o,l,u,s,t),p=vs(a,l,u,t)}else for(let e=0;e<u;e++)h[e]=As(i,r,a,t,e,l),c[e]=$s(o,s,a,t,e,l),p[e]=Is(a,e,l);return{begin:h,end:c,strides:p}}function Es(t,e,n,r,s){const a=[...s],i=Ns(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Ss(e,n,s);let o=r[i];t&1<<i&&(o=0),a[s]=o}return a}function ks(t,e,n,r,s){const a=[...s],i=Ns(n,e);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Ss(e,n,s);let o=r[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let t=0;t<a.length;t++){const e=s[t];a[t]<0&&(a[t]+=e),a[t]=f(0,a[t],s[t])}return a}function Is(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function As(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=f(0,i,l-1),i}function $s(t,e,n,r,s,a){let i=e[s];const o=n[s]||1;(t&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?f(0,i,l):f(-1,i,l-1),i}function _s(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Cs(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Rs(t,e,n){let r;const s=t.shape.length;let a;return r="number"==typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),r.forEach((t=>{x(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(x(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-r[n]))),[r,a]}function Ds(t,e,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(e.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const c={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let t=0;t<c.dims;t++)h&&0!=(1<<t&o)&&c.numAddAxisAfterEllipsis++,1<<t&i&&(h=!0);h||(c.ellipsisMask|=1<<c.dims,c.dims++);const p={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=null!=t.begin,e.endValid=null!=t.end,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(-2),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);null!=t.begin&&(e.begin[n]=t.begin[r]),null!=t.end&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(-1),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}(c,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let e=0;e<t.length;++e){if(0===p.strides[e])throw Error(`strides[${e}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<e),r=t[e];if(-1===r){g.push(n?1:-1);continue}const s=[p.beginMask&1<<e,p.endMask&1<<e],a=[p.strides[e]>0?0:-1,p.strides[e]>0?r:r-1];if(n&&p.strides[e]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[e];const i=!!(p.beginMask&1<<e&&p.endMask&1<<e);if(p.beginValid&&p.endValid){if(n){const t=p.begin[e]<0?r+p.begin[e]:p.begin[e];if(p.begin[e]=t,p.end[e]=p.begin[e]+1,t<0||t>=r)throw Error(`slice index ${p.begin[e]} of dimension ${e} out of bounds.`)}else p.begin[e]=Os(p.begin[e],0,p.strides[e],r,s,a),p.end[e]=Os(p.end[e],1,p.strides[e],r,s,a);const t=1===p.strides[e]&&0===p.begin[e]&&p.end[e]===r;d=d&&t,f=f&&(0===e&&1===p.strides[e]||t)}else d=d&&1===p.strides[e]&&i,f=f&&(0===e&&1===p.strides[e]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[e]-p.begin[e],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[e]<0?-r:r,l=!0),l){let t;t=0===o||o<0!=p.strides[e]<0?0:Math.trunc(o/p.strides[e])+(o%p.strides[e]!=0?1:0),g.push(t)}else g.push(-1)}for(let t=0;t<p.finalShapeGatherIndices.length;++t){const e=p.finalShapeGatherIndices[t];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter(((t,e)=>-2!==p.finalShapeGatherIndices[e])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Os(t,e,n,r,s,a){if(s[e])return n>0?a[e]:a[e+1&1];{const e=t<0?r+t:t;return e<a[0]?a[0]:e>a[1]?a[1]:e}}var Fs={};t(Fs,"Serializable",(()=>Ms)),t(Fs,"SerializationMap",(()=>Ls)),t(Fs,"registerClass",(()=>zs));class Ms{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Ls{constructor(){this.classNameMap={}}static getMap(){return null==Ls.instance&&(Ls.instance=new Ls),Ls.instance}static register(t){Ls.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function zs(t){x(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),x("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),x(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ls.register(t)}
/** @license See the LICENSE file. */function Bs(){return fn}function Us(){return fn.memory()}function Ps(t,e){return fn.tidy(t,e)}function Ws(t){un(t).forEach((t=>t.dispose()))}function Vs(t){return fn.keep(t)}function Gs(t,e){x(K(t),(()=>"The f passed in variableGrads(f) must be a function")),x(null==e||Array.isArray(e)&&e.every((t=>t instanceof je)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in fn.registeredVariables)e.push(fn.registeredVariables[t])}const r=n?e.filter((t=>!t.trainable)):null,s=e.length;x((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=fn.gradients(t,e,null,!0);x(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),x(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=r&&r.forEach((t=>o[t.name]=null)),{value:a,grads:o}}function js(t){return fn.customGrad(t)}Ve=function(t){lt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const qs=vn({abs_:function(t){const e=wn(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return fn.runKernel("ComplexAbs",t)}{const t={x:e};return fn.runKernel("Abs",t)}}});vn({acos_:function(t){const e={x:wn(t,"x","acos")};return fn.runKernel("Acos",e)}});vn({acosh_:function(t){const e={x:wn(t,"x","acosh")};return fn.runKernel("Acosh",e)}});const Hs=vn({add_:function(t,e){let n=wn(t,"a","add"),r=wn(e,"b","add");[n,r]=an(n,r);const s={a:n,b:r};return fn.runKernel("Add",s)}});vn({addN_:function(t){x(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),x(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>wn(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!k(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return fn.runKernel("AddN",r)}});const Ks=vn({all_:function(t,e=null,n=!1){const r={x:wn(t,"x","all","bool")},s={axis:e,keepDims:n};return fn.runKernel("All",r,s)}});const Xs=vn({any_:function(t,e=null,n=!1){const r={x:wn(t,"x","any","bool")},s={axis:e,keepDims:n};return fn.runKernel("Any",r,s)}});const Zs=vn({argMax_:function(t,e=0){const n={x:wn(t,"x","argMax")},r={axis:e};return fn.runKernel("ArgMax",n,r)}});vn({argMin_:function(t,e=0){const n={x:wn(t,"x","argMin")},r={axis:e};return fn.runKernel("ArgMin",n,r)}});vn({asin_:function(t){const e={x:wn(t,"x","asin")};return fn.runKernel("Asin",e)}});vn({asinh_:function(t){const e={x:wn(t,"x","asinh")};return fn.runKernel("Asinh",e)}});vn({atan_:function(t){const e={x:wn(t,"x","atan")};return fn.runKernel("Atan",e)}});vn({atan2_:function(t,e){let n=wn(t,"a","atan2"),r=wn(e,"b","atan2");[n,r]=an(n,r);const s={a:n,b:r};return fn.runKernel("Atan2",s)}});vn({atanh_:function(t){const e={x:wn(t,"x","atanh")};return fn.runKernel("Atanh",e)}});var Js={};function Qs(t,e,n,r,s="NHWC",a){return ea(t,[...e,t[3]],n,a,r,null,null,ha(s))}function Ys(t,e,n,r,s,a,i="channelsLast"){const[o,l]=sa(e);let u;if("channelsLast"===i)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,t[1],t[1]]}return ea(t,u,n,r,s,a,!1,i)}function ta(t,e,n,r,s,a,i="NDHWC"){const[o,l,u]=aa(e);let h,c;if("NDHWC"===i)c="channelsLast",h=[o,l,u,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);c="channelsFirst",h=[o,l,u,t[1],t[1]]}return na(t,h,n,r,s,!1,c,a)}function ea(t,e,n,r,s,a,i=!1,o="channelsLast"){let[l,u,h,c]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,h,c]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,c,u,h]=t}const[p,d,,f]=e,[m,g]=sa(n),[y,b]=sa(r),w=ia(p,y),x=ia(d,b),{padInfo:v,outHeight:S,outWidth:N}=function(t,e,n,r,s,a,i,o,l){let u,h,c;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,s){null==r&&(r=ra(t,e,n));const a=t[0],i=t[1],o=oa((a-e+2*r)/n+1,s),l=oa((i-e+2*r)/n+1,s);return[o,l]}([e,n],a,r,t,o);h=s[0],c=s[1]}else if("same"===t){h=Math.ceil(e/r),c=Math.ceil(n/s);const t=Math.max(0,(h-1)*r+a-e),o=Math.max(0,(c-1)*s+i-n),l=Math.floor(t/2),p=t-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-a+1)/r),c=Math.ceil((n-i+1)/s);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const p="channelsLast"===l?t[1][0]:t[2][0],d="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},h=oa((e-a+p+d)/r+1,o),c=oa((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:h,outWidth:c}}(s,u,h,m,g,w,x,a,o),T=i?f*c:f;let E;return"channelsFirst"===o?E=[l,T,S,N]:"channelsLast"===o&&(E=[l,S,N,T]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:h,inChannels:c,outHeight:S,outWidth:N,outChannels:T,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:t,outShape:E,filterShape:e}}function na(t,e,n,r,s,a=!1,i="channelsLast",o){let[l,u,h,c,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,h,c,p]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,h,c]=t}const[d,f,m,,g]=e,[y,b,w]=aa(n),[x,v,S]=aa(r),N=ia(d,x),T=ia(f,v),E=ia(m,S),{padInfo:k,outDepth:I,outHeight:A,outWidth:$}=function(t,e,n,r,s,a,i,o,l,u,h){let c,p,d,f;if("number"==typeof t){c={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,s,a){null==s&&(s=ra(t,e,r));const i=t[0],o=t[1],l=t[2],u=oa((i-e+2*s)/r+1,a),h=oa((o-e+2*s)/r+1,a),c=oa((l-e+2*s)/r+1,a);return[u,h,c,n]}([e,n,r,1],o,1,s,t,h);p=a[0],d=a[1],f=a[2]}else if("same"===t){p=Math.ceil(e/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const t=(p-1)*s+o-e,h=(d-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(t/2),y=t-g,b=Math.floor(h/2),w=h-b,x=Math.floor(m/2);c={top:b,bottom:w,left:x,right:m-x,front:g,back:y,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-o+1)/s),d=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:c,outDepth:p,outHeight:d,outWidth:f}}(s,u,h,c,y,b,w,N,T,E,o),_=a?g*p:g;let C;return"channelsFirst"===i?C=[l,_,I,A,$]:"channelsLast"===i&&(C=[l,I,A,$,_]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:h,inWidth:c,inChannels:p,outDepth:I,outHeight:A,outWidth:$,outChannels:_,padInfo:k,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:T,effectiveFilterWidth:E,dilationDepth:x,dilationHeight:v,dilationWidth:S,inShape:t,outShape:C,filterShape:e}}function ra(t,e,n,r=1){const s=ia(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function sa(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function aa(t){return"number"==typeof t?[t,t,t]:t}function ia(t,e){return e<=1?t:t+(t-1)*(e-1)}function oa(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function la(t){const[e,n,r]=sa(t);return 1===e&&1===n&&1===r}function ua(t,e){return la(t)||la(e)}function ha(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function ca(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)x(I(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`));else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: ${e}`);e.forEach((e=>{e.forEach((e=>{x(I(e),(()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`))}))}))}}}t(Js,"computeDilation2DInfo",(()=>Qs)),t(Js,"convertConv2DDataFormat",(()=>ha)),t(Js,"computeConv2DInfo",(()=>ea)),t(Js,"computePool2DInfo",(()=>Ys)),t(Js,"computePool3DInfo",(()=>ta)),t(Js,"computeConv3DInfo",(()=>na)),t(Js,"computeDefaultPad",(()=>ra)),t(Js,"tupleValuesAreOne",(()=>la)),t(Js,"eitherStridesOrDilationsAreOne",(()=>ua)),t(Js,"checkPadOnDimRoundingMode",(()=>ca));const pa=vn({reshape_:function(t,e){const n={x:wn(t,"x","reshape","string_or_numeric")},r={shape:e};return fn.runKernel("Reshape",n,r)}});const da=vn({avgPool_:function(t,e,n,r,s){const a=wn(t,"x","avgPool","float32");x(ua(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=pa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),x(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),ca("avgPool",r,s);const l={x:i},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let h=fn.runKernel("AvgPool",l,u);return h=hs(h,a.dtype),o?pa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const fa=vn({avgPool3d_:function(t,e,n,r,s,a="NDHWC"){const i=wn(t,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=pa(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),x(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ca("avgPool3d",r,s);const u={x:o},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let c=fn.runKernel("AvgPool3D",u,h);return c=hs(c,o.dtype),l?pa(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}});vn({batchToSpaceND_:function(t,e,n){const r=wn(t,"x","batchToSpaceND"),s=e.reduce(((t,e)=>t*e));x(r.rank>=1+e.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`)),x(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),x(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`));const a={x:r},i={blockShape:e,crops:n};return fn.runKernel("BatchToSpaceND",a,i)}});const ma=vn({batchNorm_:function(t,e,n,r,s,a){null==a&&(a=.001);const i=wn(t,"x","batchNorm"),o=wn(e,"mean","batchNorm"),l=wn(n,"variance","batchNorm");let u,h;null!=s&&(u=wn(s,"scale","batchNorm")),null!=r&&(h=wn(r,"offset","batchNorm")),x(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==h||o.rank===h.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const c=function(t){let e;return e=0===t.rank||1===t.rank?pa(t,[1,1,1,t.size]):2===t.rank?pa(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?pa(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),p={x:c,scale:u,offset:h,mean:o,variance:l},d={varianceEpsilon:a},f=fn.runKernel("FusedBatchNorm",p,d);return pa(f,i.shape)}});const ga=vn({batchNorm2d_:function(t,e,n,r,s,a){const i=wn(t,"x","batchNorm"),o=wn(e,"mean","batchNorm"),l=wn(n,"variance","batchNorm");let u,h;return null!=s&&(u=wn(s,"scale","batchNorm")),null!=r&&(h=wn(r,"offset","batchNorm")),x(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),x(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),x(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=h&&x(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),ma(i,o,l,h,u,a)}});const ya=vn({batchNorm3d_:function(t,e,n,r,s,a){const i=wn(t,"x","batchNorm"),o=wn(e,"mean","batchNorm"),l=wn(n,"variance","batchNorm");let u,h;return null!=s&&(u=wn(s,"scale","batchNorm")),null!=r&&(h=wn(r,"offset","batchNorm")),x(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),x(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),x(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=h&&x(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),ma(i,o,l,h,u,a)}});const ba=vn({batchNorm4d_:function(t,e,n,r,s,a){const i=wn(t,"x","batchNorm"),o=wn(e,"mean","batchNorm"),l=wn(n,"variance","batchNorm");let u,h;return null!=s&&(u=wn(s,"scale","batchNorm")),null!=r&&(h=wn(r,"offset","batchNorm")),x(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),x(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),x(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=h&&x(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),ma(i,o,l,h,u,a)}});const wa=vn({bincount_:function(t,e,n){const r=wn(t,"x","bincount"),s=wn(e,"weights","bincount");x("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return fn.runKernel("Bincount",a,i)}});vn({broadcastArgs_:function(t,e){const n=wn(t,"s0","broadcastArgs","int32"),r=wn(e,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return fn.runKernel("BroadcastArgs",s)}});const xa=vn({clone_:function(t){const e={x:wn(t,"x","clone","string_or_numeric")};return fn.runKernel("Identity",e)}});const va=vn({broadcastTo_:function(t,e){let n=wn(t,"broadcastTo","x");const r=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=pa(n,t)}const s=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(s[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return xa(n);const i={x:n},o={reps:a};return fn.runKernel("Tile",i,o)}});function Sa(t,e="float32",n){return e=e||"float32",nt(t),new Ue(t,e,n)}vn({ceil_:function(t){const e={x:wn(t,"x","ceil","float32")};return fn.runKernel("Ceil",e)}});const Na=vn({clipByValue_:function(t,e,n){const r=wn(t,"x","clipByValue");x(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:e,clipValueMax:n};return fn.runKernel("ClipByValue",s,a)}});const Ta=vn({concat_:function(t,e=0){x(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=xn(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return xa(n[0]);const r=n,s={axis:e};return fn.runKernel("Concat",r,s)}});const Ea=vn({concat1d_:function(t){return Ta(t,0)}});const ka=vn({concat2d_:function(t,e){return Ta(t,e)}});const Ia=vn({concat3d_:function(t,e){return Ta(t,e)}});const Aa=vn({concat4d_:function(t,e){return Ta(t,e)}});const $a=vn({conv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=wn(t,"x","conv2d","float32"),l=wn(e,"filter","conv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=pa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),ca("conv2d",r,i);const c="NHWC"===s?u.shape[3]:u.shape[1];x(c===l.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${l.shape[2]}.`)),x(ua(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=fn.runKernel("Conv2D",p,d);return h?pa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const _a=vn({conv1d_:function(t,e,n,r,s="NWC",a=1,i){const o=wn(t,"x","conv1d"),l=wn(e,"filter","conv1d");let u=o,h=!1;2===o.rank&&(h=!0,u=pa(o,[1,o.shape[0],o.shape[1]])),x(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),x(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),ca("conv1d",r,i),x(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),x(ua(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),x("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const c=pa(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=pa(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=$a(p,c,[1,n],r,"NHWC",[1,a],i);return pa(d,h?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}});const Ca=vn({conv2DBackpropInput_:function(t,e,n,r,s,a="NHWC",i){x(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=pa(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),x(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),x(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),x(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===a?o[3]:o[1],c="NHWC"===a?l.shape[3]:l.shape[1];x(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),x(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),ca("conv2dDerInput",s,i);const p={dy:l,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=fn.runKernel("Conv2DBackpropInput",p,d);return u?pa(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Ra=vn({conv2dTranspose_:function(t,e,n,r,s,a){const i=wn(t,"x","conv2dTranspose"),o=wn(e,"filter","conv2dTranspose");return Ca(n,i,o,r,s,"NHWC",a)}});const Da=vn({conv3d_:function(t,e,n,r,s="NDHWC",a=[1,1,1]){const i=wn(t,"x","conv3d"),o=wn(e,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=pa(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),x(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),x(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),x(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),x(ua(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),x("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const h={x:l,filter:o},c={strides:n,pad:r,dataFormat:s,dilations:a},p=fn.runKernel("Conv3D",h,c);return u?pa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Oa=vn({conv3DBackpropInput_:function(t,e,n,r,s){x(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=pa(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],u=i.shape[4];x(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),x(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),x(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),x(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),x(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const h={dy:i,filter:n},c={pad:s,strides:r,inputShape:a},p=fn.runKernel("Conv3DBackpropInputV2",h,c);return o?pa(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const Fa=vn({conv3dTranspose_:function(t,e,n,r,s){const a=wn(t,"x","conv3dTranspose"),i=wn(e,"filter","conv3dTranspose");return Oa(n,a,i,r,s)}});vn({cos_:function(t){const e={x:wn(t,"x","cos","float32")};return fn.runKernel("Cos",e)}});vn({cosh_:function(t){const e={x:wn(t,"x","cosh","float32")};return fn.runKernel("Cosh",e)}});vn({cumsum_:function(t,e=0,n=!1,r=!1){const s={x:wn(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:r};return fn.runKernel("Cumsum",s,a)}});vn({denseBincount_:function(t,e,n,r=!1){const s=wn(t,"x","denseBincount"),a=wn(e,"weights","denseBincount");x("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),x(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return fn.runKernel("DenseBincount",i,o)}});vn({depthToSpace_:function(t,e,n="NHWC"){const r=wn(t,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];x(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`)),x(s*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${e}  for depthToSpace with input shape\n    ${r.shape}`)),x(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${r.shape}`)),x(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:e,dataFormat:n};return fn.runKernel("DepthToSpace",o,l)}});const Ma=vn({depthwiseConv2d_:function(t,e,n,r,s="NHWC",a=[1,1],i){const o=wn(t,"x","depthwiseConv2d","float32"),l=wn(e,"filter","depthwiseConv2d","float32");let u=o,h=!1;3===o.rank&&(h=!0,u=pa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),x(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),ca("depthwiseConv2d",r,i);const c={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},d=fn.runKernel("DepthwiseConv2dNative",c,p);return h?pa(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});vn({dilation2d_:function(t,e,n,r,s=[1,1],a="NHWC"){const i=wn(t,"x","dilation2d"),o=wn(e,"filter","dilation2d");x(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),x(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),x("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=pa(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const h={x:l,filter:o},c={strides:n,pad:r,dilations:s},p=fn.runKernel("Dilation2D",h,c);return u?pa(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const La=vn({floorDiv_:function(t,e){let n=wn(t,"a","floorDiv"),r=wn(e,"b","floorDiv");[n,r]=an(n,r);const s={a:n,b:r};return fn.runKernel("FloorDiv",s)}});const za=vn({div_:function(t,e){let n=wn(t,"a","div"),r=wn(e,"b","div");if([n,r]=an(n,r),"int32"===n.dtype&&"int32"===r.dtype)return La(n,r);const s={a:n,b:r};return fn.runKernel("RealDiv",s,{})}});var Ba={};function Ua(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=t[a]||1;(e[e.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Pa(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Wa(t,e){const n=[],r=Math.max(t.length,e.length);for(let s=0;s<r;s++){let r=t[t.length-s-1];null==r&&(r=1);let a=e[e.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}t(Ba,"getBroadcastDims",(()=>Ua)),t(Ba,"getReductionAxes",(()=>Pa)),t(Ba,"assertAndGetBroadcastShape",(()=>Wa));const Va=vn({equal_:function(t,e){let n=wn(t,"a","equal","string_or_numeric"),r=wn(e,"b","equal","string_or_numeric");[n,r]=an(n,r),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("Equal",s)}});const Ga=vn({where_:function(t,e,n){const r=wn(e,"a","where"),s=wn(n,"b","where"),a=wn(t,"condition","where","bool"),i=Wa(Wa(a.shape,r.shape),s.shape),o={condition:va(a,i),t:va(r,i),e:va(s,i)};return fn.runKernel("Select",o)}});const ja=vn({zerosLike_:function(t){const e={x:wn(t,"x","zerosLike")};return fn.runKernel("ZerosLike",e)}});vn({divNoNan_:function(t,e){let n=wn(t,"a","div"),r=wn(e,"b","div");[n,r]=an(n,r);const s=za(n,r),a=ja(s),i=Va(r,a);return Ga(i,a,s)}});vn({einsum_:function(t,...e){const n=e.map(((t,e)=>wn(t,`tensors${e}`,"einsum"))),r={equation:t};return fn.runKernel("Einsum",n,r)}});const qa=vn({elu_:function(t){const e={x:wn(t,"x","elu","float32")};return fn.runKernel("Elu",e)}});vn({erf_:function(t){let e=wn(t,"x","erf");x("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=hs(e,"float32"));const n={x:e};return fn.runKernel("Erf",n)}});const Ha=vn({exp_:function(t){const e={x:wn(t,"x","exp")};return fn.runKernel("Exp",e)}});const Ka=vn({expandDims_:function(t,e=0){const n=wn(t,"x","expandDims","string_or_numeric");x(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:e};return fn.runKernel("ExpandDims",r,s)}});vn({expm1_:function(t){const e={x:wn(t,"x","expm1")};return fn.runKernel("Expm1",e)}});const Xa=vn({tile_:function(t,e){const n=wn(t,"x","tile","string_or_numeric");x(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const r={x:n},s={reps:e};return fn.runKernel("Tile",r,s)}});const Za=vn({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const s=Sa([t,e],r),a=t<=e?t:e;for(let t=0;t<a;++t)s.set(1,t,t);const i=pa(s.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Xa(Ka(i,0),[n[0],1,1]);if(2===n.length)return Xa(Ka(Ka(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Xa(Ka(Ka(Ka(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Ja(t,e,n){const r={shape:t,value:e,dtype:n};return fn.runKernel("Fill",{},r)}const Qa=vn({floor_:function(t){const e={x:wn(t,"x","floor","float32")};return fn.runKernel("Floor",e)}});const Ya=vn({gather_:function(t,e,n=0,r=0){const s={x:wn(t,"x","gather"),indices:wn(e,"indices","gather","int32")},a={axis:n,batchDims:r};return fn.runKernel("GatherV2",s,a)}});const ti=vn({greater_:function(t,e){let n=wn(t,"a","greater","string_or_numeric"),r=wn(e,"b","greater","string_or_numeric");[n,r]=an(n,r),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("Greater",s)}});const ei=vn({greaterEqual_:function(t,e){let n=wn(t,"a","greaterEqual","string_or_numeric"),r=wn(e,"b","greaterEqual","string_or_numeric");[n,r]=an(n,r),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("GreaterEqual",s)}});const ni=vn({imag_:function(t){const e={input:wn(t,"input","imag")};return fn.runKernel("Imag",e)}});vn({isNaN_:function(t){const e={x:wn(t,"x","isNaN")};return fn.runKernel("IsNan",e)}});const ri=vn({leakyRelu_:function(t,e=.2){const n={x:wn(t,"x","leakyRelu")},r={alpha:e};return fn.runKernel("LeakyRelu",n,r)}});vn({less_:function(t,e){let n=wn(t,"a","less","string_or_numeric"),r=wn(e,"b","less","string_or_numeric");[n,r]=an(n,r),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("Less",s)}});const si=vn({lessEqual_:function(t,e){let n=wn(t,"a","lessEqual","string_or_numeric"),r=wn(e,"b","lessEqual","string_or_numeric");[n,r]=an(n,r),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("LessEqual",s)}});vn({localResponseNormalization_:function(t,e=5,n=1,r=1,s=.5){const a=wn(t,"x","localResponseNormalization");x(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),x(I(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=pa(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:r,beta:s},h=fn.runKernel("LRN",l,u);return o?pa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const ai=vn({log_:function(t){const e={x:wn(t,"x","log","float32")};return fn.runKernel("Log",e)}});const ii=vn({log1p_:function(t){const e={x:wn(t,"x","log1p")};return fn.runKernel("Log1p",e)}});const oi=vn({max_:function(t,e=null,n=!1){const r={x:wn(t,"x","max")},s={reductionIndices:e,keepDims:n};return fn.runKernel("Max",r,s)}});const li=vn({mul_:function(t,e){let n=wn(t,"a","mul"),r=wn(e,"b","mul");[n,r]=an(n,r);const s={a:n,b:r};return fn.runKernel("Multiply",s)}});const ui=vn({sub_:function(t,e){let n=wn(t,"a","sub"),r=wn(e,"b","sub");[n,r]=an(n,r);const s={a:n,b:r};return fn.runKernel("Sub",s)}});const hi=vn({sum_:function(t,e=null,n=!1){let r=wn(t,"x","sum");"bool"===r.dtype&&(r=hs(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return fn.runKernel("Sum",s,a)}});const ci=vn({logSoftmax_:function(t,e=-1){const n=wn(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return js(((t,n)=>{const r=oi(t,e,!0),s=ui(t,r),a=ui(hs(s,"float32"),ai(hi(Ha(s),e,!0)));n([a]);return{value:a,gradFunc:(t,n)=>{const[r]=n,s=Ha(r);return ui(t,li(hi(t,e,!0),s))}}}))(n)}});const pi=vn({logicalAnd_:function(t,e){const n=wn(t,"a","logicalAnd","bool"),r=wn(e,"b","logicalAnd","bool");Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("LogicalAnd",s)}});vn({logicalNot_:function(t){const e={x:wn(t,"x","logicalNot","bool")};return fn.runKernel("LogicalNot",e)}});vn({logicalOr_:function(t,e){const n=wn(t,"a","logicalOr","bool"),r=wn(e,"b","logicalOr","bool");Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("LogicalOr",s)}});const di=vn({matMul_:function(t,e,n=!1,r=!1){let s=wn(t,"a","matMul"),a=wn(e,"b","matMul");[s,a]=an(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return fn.runKernel("BatchMatMul",i,o)}});const fi=vn({maxPool_:function(t,e,n,r,s){const a=wn(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=pa(a,[1,a.shape[0],a.shape[1],a.shape[2]])),x(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),x(ua(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ca("maxPool",r,s);const l={x:i},u={filterSize:e,strides:n,pad:r,dimRoundingMode:s},h=fn.runKernel("MaxPool",l,u);return o?pa(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const mi=vn({maxPool3d_:function(t,e=[1,1,1],n,r,s,a="NDHWC"){const i=wn(t,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=pa(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),x(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ca("maxPool3d",r,s);const u={x:o},h={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},c=fn.runKernel("MaxPool3D",u,h);return l?pa(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}});vn({maxPoolWithArgmax_:function(t,e,n,r,s=!1){const a={x:wn(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},o=fn.runKernel("MaxPoolWithArgmax",a,i);return{result:o[0],indexes:o[1]}}});const gi=vn({maximum_:function(t,e){let n=wn(t,"a","maximum"),r=wn(e,"b","maximum");[n,r]=an(n,r),"bool"===n.dtype&&(n=hs(n,"int32"),r=hs(r,"int32")),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("Maximum",s)}});const yi=vn({mean_:function(t,e=null,n=!1){const r={x:wn(t,"x","mean")},s={axis:e,keepDims:n};return fn.runKernel("Mean",r,s)}});const bi=vn({min_:function(t,e=null,n=!1){const r={x:wn(t,"x","min")},s={axis:e,keepDims:n};return fn.runKernel("Min",r,s)}});const wi=vn({minimum_:function(t,e){let n=wn(t,"a","minimum"),r=wn(e,"b","minimum");[n,r]=an(n,r),"bool"===n.dtype&&(n=hs(n,"int32"),r=hs(r,"int32")),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("Minimum",s)}});vn({mirrorPad_:function(t,e,n){x("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=wn(t,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");x(e.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`));const s="reflect"===n?1:0;for(let t=0;t<r.rank;t++)x(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),x(e[t][0]>=0&&e[t][0]<=r.shape[t]-s&&e[t][1]>=0&&e[t][1]<=r.shape[t]-s,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${r.shape[t]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:e,mode:n},i={x:r};return fn.runKernel("MirrorPad",i,a)}});vn({mod_:function(t,e){let n=wn(t,"a","mod"),r=wn(e,"b","mod");[n,r]=an(n,r);const s={a:n,b:r};return fn.runKernel("Mod",s)}});var xi={};function vi(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function Si(t,e,n){const r=t.length+e.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(t[a++]):s.push(e[i++]);return s}function Ni(t,e){const n=[],r=t.length;for(let s=0;s<r;s++)-1===e.indexOf(s)&&n.push(t[s]);return[n,e.map((e=>t[e]))]}function Ti(t,e){return Si(t,e.map((t=>1)),e)}function Ei(t,e,n){x(vi(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function ki(t,e){if(vi(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function Ii(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Ai(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}t(xi,"axesAreInnerMostDims",(()=>vi)),t(xi,"combineLocations",(()=>Si)),t(xi,"computeOutAndReduceShapes",(()=>Ni)),t(xi,"expandShapeToKeepDim",(()=>Ti)),t(xi,"assertAxesAreInnerMostDims",(()=>Ei)),t(xi,"getAxesPermutation",(()=>ki)),t(xi,"getUndoAxesPermutation",(()=>Ii)),t(xi,"getInnerMostAxes",(()=>Ai));const $i=vn({square_:function(t){const e=wn(t,"x","square");return fn.runKernel("Square",{x:e},{})}});const _i=vn({moments_:function(t,e=null,n=!1){const r=O(e,(t=wn(t,"x","moments")).shape),s=yi(t,r,n);let a=s.shape;n||(a=Ti(s.shape,r));const i=$i(ui(hs(t,"float32"),pa(s,a)));return{mean:s,variance:yi(i,r,n)}}});vn({multinomial_:function(t,e,n,r=!1){const s=wn(t,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?pa(s,[1,-1]):s},l={numSamples:e,seed:n,normalized:r},u=fn.runKernel("Multinomial",o,l);return 1===i?pa(u,[u.size]):u}});const Ci=vn({neg_:function(t){const e={x:wn(t,"x","neg")};return fn.runKernel("Neg",e)}});const Ri=vn({notEqual_:function(t,e){let n=wn(t,"a","notEqual","string_or_numeric"),r=wn(e,"b","notEqual","string_or_numeric");[n,r]=an(n,r),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("NotEqual",s)}});const Di=vn({oneHot_:function(t,e,n=1,r=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const s={indices:wn(t,"indices","oneHot","int32")},a={depth:e,onValue:n,offValue:r};return fn.runKernel("OneHot",s,a)}});function Oi(t,e="float32"){if("complex64"===e){const e=Oi(t,"float32"),n=Oi(t,"float32");return Sn(e,n)}const n=tt(T(t),e);return fn.makeTensor(n,t,e)}function Fi(t,e="float32"){if("complex64"===e){const e=Fi(t,"float32"),n=Oi(t,"float32");return Sn(e,n)}const n=Y(T(t),e);return fn.makeTensor(n,t,e)}const Mi=vn({onesLike_:function(t){const e={x:wn(t,"x","onesLike")};return fn.runKernel("OnesLike",e)}});const Li=vn({pad_:function(t,e,n=0){const r=wn(t,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},a={x:r};return fn.runKernel("PadV2",a,s)}});const zi=vn({pow_:function(t,e){let n=wn(t,"base","pow"),r=wn(e,"exp","pow");[n,r]=an(n,r);const s={a:n,b:r};return fn.runKernel("Pow",s)}});const Bi=vn({prelu_:function(t,e){const n={x:wn(t,"x","prelu"),alpha:wn(e,"alpha","prelu")};return fn.runKernel("Prelu",n)}});vn({prod_:function(t,e=null,n=!1){let r=wn(t,"x","prod");"bool"===r.dtype&&(r=hs(r,"int32"));const s={x:r},a={axis:e,keepDims:n};return fn.runKernel("Prod",s,a)}});var Ui={};a.register("juaQJ",(function(t,e){!function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function s(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,t,"function"==typeof define&&define)}));var Pi=a("juaQJ");a.register("f4zau",(function(t,e){!function(t,e,n){function r(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,t,"function"==typeof define&&define)}));var Wi=a("f4zau");a.register("6iMyq",(function(t,e){!function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,t,"function"==typeof define&&define)}));var Vi=a("6iMyq");a.register("fTQSa",(function(t,e){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function s(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,t,"function"==typeof define&&define)}));var Gi=a("fTQSa");a.register("kmFMP",(function(t,e){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,a=-32;a<l;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function s(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,t,"function"==typeof define&&define)}));var ji=a("kmFMP");a.register("lgjZP",(function(t,e){!function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,t,"function"==typeof define&&define)}));var qi=a("lgjZP"),Hi={};a.register("iCyng",(function(t,e){})),function(t,e){var n,r=this,s=256,i=e.pow(s,6),o=e.pow(2,52),l=2*o,u=255;function h(a,u,h){var g=[],y=f(d((u=1==u?{entropy:!0}:u||{}).entropy?[a,m(t)]:null==a?function(){try{var e;return n&&(e=n.randomBytes)?e=e(s):(e=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(e)),m(e)}catch(e){var a=r.navigator,i=a&&a.plugins;return[+new Date,r,i,r.screen,m(t)]}}():a,3),g),b=new c(g),w=function(){for(var t=b.g(6),e=i,n=0;t<o;)t=(t+n)*s,e*=s,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=function(){return 0|b.g(4)},w.quick=function(){return b.g(4)/4294967296},w.double=w,f(m(b.S),t),(u.pass||h||function(t,n,r,s){return s&&(s.S&&p(s,b),t.state=function(){return p(b,{})}),r?(e.random=t,n):t})(w,y,"global"in u?u.global:this==e,u.state)}function c(t){var e,n=t.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=u&i+t[a%n]+(e=o[a])],o[i]=e;(r.g=function(t){for(var e,n=0,a=r.i,i=r.j,o=r.S;t--;)e=o[a=u&a+1],n=n*s+o[u&(o[a]=o[i=u&i+e])+(o[i]=e)];return r.i=a,r.j=i,n})(s)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function d(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(d(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function f(t,e){for(var n,r=t+"",s=0;s<r.length;)e[u&s]=u&(n^=19*e[u&s])+r.charCodeAt(s++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(e.seedrandom=h,f(e.random(),t),Hi){Hi=h;try{n=a("iCyng")}catch(t){}}else"function"==typeof define&&define.amd&&define((function(){return h}))}([],Math),Hi.alea=Pi,Hi.xor128=Wi,Hi.xorwow=Vi,Hi.xorshift7=Gi,Hi.xor4096=ji,Hi.tychei=qi,Ui=Hi;class Ki{constructor(t,e,n,r,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Ui.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Xi{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Ui.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Zi=vn({randomNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Ki(e,n,r,!1,s),i=Sa(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});const Ji=vn({randomUniform_:function(t,e=0,n=1,r="float32",s){const a=Sa(t,r),i=new Xi(e,n,null,s);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});function Qi(t,e,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return fn.runKernel("Range",{},s)}const Yi=vn({real_:function(t){const e={input:wn(t,"input","real")};return fn.runKernel("Real",e)}});vn({reciprocal_:function(t){const e={x:wn(t,"x","reciprocal")};return fn.runKernel("Reciprocal",e)}});const to=vn({relu_:function(t){const e={x:wn(t,"x","relu")};return fn.runKernel("Relu",e)}});const eo=vn({relu6_:function(t){const e={x:wn(t,"x","relu6")};return fn.runKernel("Relu6",e)}});const no=vn({reverse_:function(t,e){const n={x:wn(t,"x","reverse")},r={dims:e};return fn.runKernel("Reverse",n,r)}});const ro=vn({round_:function(t){const e={x:wn(t,"x","round")};return fn.runKernel("Round",e)}});vn({rsqrt_:function(t){const e={x:wn(t,"x","rsqrt","float32")};return fn.runKernel("Rsqrt",e)}});function so(t,e){if((P(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&P(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Nn(t,[],[],e)}const ao=vn({selu_:function(t){const e={x:wn(t,"x","selu")};return fn.runKernel("Selu",e)}});const io=vn({separableConv2d_:function(t,e,n,r,s,a=[1,1],i="NHWC"){const o=wn(t,"x","separableConv2d"),l=wn(e,"depthwiseFilter","separableConv2d"),u=wn(n,"pointwiseFilter","separableConv2d");let h=o,c=!1;if(3===o.rank&&(c=!0,h=pa(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");x(4===h.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`)),x(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),x(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),x(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),x(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];x(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=Ma(h,l,r,s,i,a),m=$a(f,u,1,"valid",i);return c?pa(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const oo=vn({sigmoid_:function(t){const e={x:wn(t,"x","sigmoid","float32")};return fn.runKernel("Sigmoid",e)}});vn({sign_:function(t){const e={x:wn(t,"x","sign")};return fn.runKernel("Sign",e)}});vn({sin_:function(t){const e={x:wn(t,"x","sin","float32")};return fn.runKernel("Sin",e)}});vn({sinh_:function(t){const e={x:wn(t,"x","sinh")};return fn.runKernel("Sinh",e)}});const lo=vn({slice_:function(t,e,n){const r=wn(t,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:e,size:n};return fn.runKernel("Slice",s,a)}});const uo=vn({slice1d_:function(t,e,n){const r=wn(t,"x","slice1d");return x(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),lo(r,[e],[n])}});const ho=vn({slice2d_:function(t,e,n){const r=wn(t,"x","slice2d");return x(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),lo(r,e,n)}});const co=vn({slice3d_:function(t,e,n){const r=wn(t,"x","slice3d");return x(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),lo(r,e,n)}});const po=vn({slice4d_:function(t,e,n){const r=wn(t,"x","slice4d");return x(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),lo(r,e,n)}});const fo=vn({softmax_:function(t,e=-1){const n=wn(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return fn.runKernel("Softmax",r,s)}});const mo=vn({softplus_:function(t){const e={x:wn(t,"x","softplus")};return fn.runKernel("Softplus",e)}});vn({spaceToBatchND_:function(t,e,n){const r=wn(t,"x","spaceToBatchND");x(r.rank>=1+e.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`)),x(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),x(r.shape.reduce(((t,r,s)=>s>0&&s<=e.length?t&&(r+n[s-1][0]+n[s-1][1])%e[s-1]==0:t),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const s={x:r},a={blockShape:e,paddings:n};return fn.runKernel("SpaceToBatchND",s,a)}});const go=vn({fft_:function(t){x("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return fn.runKernel("FFT",e)}});const yo=vn({ifft_:function(t){x("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return fn.runKernel("IFFT",e)}});vn({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=pa(t,[n,e]);r=yo(s)}else{const s=[n,2*(e-1)],a=pa(Yi(t),[n,e]),i=pa(ni(t),[n,e]),o=no(lo(a,[0,1],[n,e-2]),1),l=li(no(lo(i,[0,1],[n,e-2]),1),so(-1)),u=Ta([a,o],1),h=Ta([i,l],1),c=pa(Sn(u,h),[s[0],s[1]]);r=yo(c)}if(r=Yi(r),3===t.rank&&0!==t.shape[0]){const e=r,n=t.shape[0];r=pa(r,[n,r.shape[0]/n,r.shape[1]]),e.dispose()}return r}});const bo=vn({split_:function(t,e,n=0){const r={x:wn(t,"x","split")},s={numOrSizeSplits:e,axis:n};return fn.runKernel("SplitV",r,s)}});const wo=vn({rfft_:function(t,e){x("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(null!=e&&e<n){const r=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,s=lo(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,s=Ta([t,Oi(r)],t.shape.length-1),n=e}else s=t;const a=ja(s),i=pa(Sn(s,a),[r,n]),o=go(i),l=Math.floor(n/2)+1,u=Yi(o),h=ni(o),c=bo(u,[l,n-l],u.shape.length-1),p=bo(h,[l,n-l],h.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=l,pa(Sn(c[0],p[0]),d)}});const xo=vn({sqrt_:function(t){const e={x:wn(t,"x","sqrt","float32")};return fn.runKernel("Sqrt",e)}});const vo=vn({squaredDifference_:function(t,e){let n=wn(t,"a","squaredDifference"),r=wn(e,"b","squaredDifference");[n,r]=an(n,r),Wa(n.shape,r.shape);const s={a:n,b:r};return fn.runKernel("SquaredDifference",s,{})}});const So=vn({squeeze_:function(t,e){const n=wn(t,"x","squeeze");return pa(n,F(n.shape,e).newShape)}});const No=vn({stack_:function(t,e=0){const n=xn(t,"tensors","stack","string_or_numeric");x(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&x(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:e};return fn.runKernel("Pack",r,s)}});vn({stridedSlice_:function(t,e,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:wn(t,"x","stridedSlice","string_or_numeric")},h={begin:e,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return fn.runKernel("StridedSlice",u,h)}});vn({tan_:function(t){const e={x:wn(t,"x","tan","float32")};return fn.runKernel("Tan",e)}});const To=vn({tanh_:function(t){const e={x:wn(t,"x","tanh","float32")};return fn.runKernel("Tanh",e)}});function Eo(t,e){S(t);const n=gn(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Nn(t,null,n,e)}function ko(t,e,n){if(S(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=gn(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Nn(t,e,r,n)}vn({topk_:function(t,e=1,n=!0){const r=wn(t,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const a={x:r},i={k:e,sorted:n},[o,l]=fn.runKernel("TopK",a,i);return{values:o,indices:l}}});const Io=vn({truncatedNormal_:function(t,e=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Ki(e,n,r,!0,s),i=Sa(t,r);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}});vn({unique_:function(t,e=0){const n=wn(t,"x","unique","string_or_numeric");x(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:e},[a,i]=fn.runKernel("Unique",r,s);return{values:a,indices:i}}});const Ao=vn({unstack_:function(t,e=0){const n=wn(t,"x","unstack","string_or_numeric");x(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:e};return fn.runKernel("Unpack",r,s)}});function $o(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const r=Sa(t,"int32"),s=Sa([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=r.indexToLoc(n[e]),i=e*t.length;s.values.set(a,i)}return s.toTensor()}const _o=vn({transpose_:function(t,e){const n=wn(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),x(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{x(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:e};return fn.runKernel("Transpose",r,s)}});var Co={};function Ro(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(a+" update.rank != "+(s+t.length-r));for(let t=0;t<s;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-s;++e)if(n.shape[e+s]!==t[e+r])throw new Error(a+` updates.shape[${e+s}] (${n.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function Do(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}Ro(n,e,t)}function Oo(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,a=n.length;let i=1;for(let t=s;t<a;++t)i*=n[t];const o=s<1?1:s;return{sliceRank:s,numUpdates:T(e.shape)/o,sliceSize:i,strides:[...Z(n.slice(0,s)),1],outputSize:T(n)}}t(Co,"validateUpdateShape",(()=>Ro)),t(Co,"validateInput",(()=>Do)),t(Co,"calculateShapes",(()=>Oo));vn({scatterND_:function(t,e,n){const r=wn(t,"indices","scatterND","int32"),s=wn(e,"updates","scatterND");Do(s,r,n);const a={indices:r,updates:s},i={shape:n};return fn.runKernel("ScatterNd",a,i)}});vn({sparseToDense_:function(t,e,n,r=0){const s=wn(t,"sparseIndices","sparseToDense","int32"),a=wn(e,"sparseValues","sparseToDense"),i=wn(r,"defaultValue","sparseToDense",a.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:n};return fn.runKernel("SparseToDense",o,l)}});vn({gatherND_:function(t,e){const n=wn(e,"indices","gatherND","int32"),r={params:wn(t,"x","gatherND","string_or_numeric"),indices:n};return fn.runKernel("GatherNd",r)}});const Fo=vn({dropout_:function(t,e,n,r){const s=wn(t,"x","dropout");if(x("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),x(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Ge?s.clone():s;const a=function(t,e){if(null==e)return t.shape.slice();if(k(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(s,n),i=1-e,o=za(Qa(Hs(Ji(a,0,1,"float32",r),i)),i);return li(s,o)}});var Mo={};t(Mo,"conv2d",(()=>Go)),t(Mo,"depthwiseConv2d",(()=>Ho)),t(Mo,"matMul",(()=>Ko));const Lo=vn({conv2DBackpropFilter_:function(t,e,n,r,s,a="NHWC",i){let o=t;3===t.rank&&(o=pa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=pa(e,[1,e.shape[0],e.shape[1],e.shape[2]])),x(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),x(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),x(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],h="NHWC"===a?l.shape[3]:l.shape[1];x(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),x(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),ca("conv2dDerFilter",s,i);const c={x:o,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return fn.runKernel("Conv2DBackpropFilter",c,p)}});var zo={};t(zo,"getFusedDyActivation",(()=>Uo)),t(zo,"getFusedBiasGradient",(()=>Po)),t(zo,"applyActivation",(()=>Wo)),t(zo,"shouldFuse",(()=>Vo));const Bo=vn({step_:function(t,e=0){const n={x:wn(t,"x","step")},r={alpha:e};return fn.runKernel("Step",n,r)}});function Uo(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return li(t,Bo(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Po(t,e){let n=e;const r=Pa(t.shape,e.shape);return r.length>0&&(n=hi(n,r)),pa(n,t.shape)}function Wo(t,e,n,r){if("linear"===e)return t;if("relu"===e)return to(t);if("elu"===e)return qa(t);if("relu6"===e)return eo(t);if("prelu"===e)return Bi(t,n);if("leakyrelu"===e)return ri(t,r);if("sigmoid"===e)return oo(t);throw new Error(`Unknown fused activation ${e}.`)}const Vo=(t,e)=>!(t>0)||"linear"===e;const Go=vn({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Vo(fn.state.gradientDepth,l)){let c=$a(t,e,n,r,s,a,i);return null!=o&&(c=Hs(c,o)),Wo(c,l,u,h)}const c=wn(t,"x","conv2d","float32"),p=wn(e,"filter","conv2d","float32");let d=c,f=!1;3===c.rank&&(f=!0,d=pa(c,[1,c.shape[0],c.shape[1],c.shape[2]])),x(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),x(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),ca("fused conv2d",r,i),x(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),x(ua(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),x("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=ea(d.shape,p.shape,n,a,r,i);let g,y;null!=o&&(g=wn(o,"bias","fused conv2d"),[g]=an(g,c),Wa(m.outShape,g.shape)),null!=u&&(y=wn(u,"prelu weights","fused conv2d"));const b=(t,e)=>{const[s,i,o,u]=e,h=Uo(t,o,l);x(la(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const c=[Ca(i.shape,h,s,n,r),Lo(i,h,s.shape,n,r)];if(null!=u){const t=Po(u,h);c.push(t)}return c},w={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==o){return js(((t,e,n)=>{let r=fn.runKernel("FusedConv2D",w,v);return n([e,t,r]),f&&(r=pa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p)}return js(((t,e,n,r)=>{let s=fn.runKernel("FusedConv2D",w,v);return r([e,t,s,n]),f&&(s=pa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p,g)}});const jo=vn({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,r,s,a=[1,1],i){let o=t;3===t.rank&&(o=pa(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=pa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},h={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return fn.runKernel("DepthwiseConv2dNativeBackpropFilter",u,h)}});const qo=vn({depthwiseConv2dNativeBackpropInput_:function(t,e,n,r,s,a=[1,1],i){let o=e,l=!1;3===e.rank&&(l=!0,o=pa(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},h={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:t},c=fn.runKernel("DepthwiseConv2dNativeBackpropInput",u,h);return l?pa(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Ho=vn({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Vo(fn.state.gradientDepth,l)){let c=Ma(t,e,n,r,s,a,i);return null!=o&&(c=Hs(c,o)),Wo(c,l,u,h)}const c=wn(t,"x","depthwiseConv2d","float32"),p=wn(e,"filter","depthwiseConv2d","float32");let d=c,f=!1;3===c.rank&&(f=!0,d=pa(c,[1,c.shape[0],c.shape[1],c.shape[2]])),x(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),x(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),x(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),x(ua(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ca("fused depthwiseConv2d",r,i);const m=ea(d.shape,p.shape,n,a,r,i,!0);let g,y;null!=o&&(g=wn(o,"bias","fused conv2d"),[g]=an(g,c),Wa(m.outShape,g.shape)),null!=u&&(y=wn(u,"prelu weights","fused depthwiseConv2d"));const b=(t,e)=>{x(la(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,h]=e,c=Uo(t,u,l),p=qo(o.shape,c,s,n,r,a,i),d=jo(o,c,s.shape,n,r,a,i);if(null!=h){return[p,d,Po(g,c)]}return[p,d]},w={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==o){return js(((t,e,n)=>{let r=fn.runKernel("FusedDepthwiseConv2D",w,v);return n([e,t,r]),f&&(r=pa(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,p)}return js(((t,e,n,r)=>{let s=fn.runKernel("FusedDepthwiseConv2D",w,v);return r([e,t,s,n]),f&&(s=pa(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,p,g)}});const Ko=vn({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Vo(fn.state.gradientDepth,a)){let l=di(t,e,n,r);return null!=s&&(l=Hs(l,s)),Wo(l,a,i,o)}let l=wn(t,"a","fused matMul"),u=wn(e,"b","fused matMul");[l,u]=an(l,u);const h=n?l.shape[l.rank-2]:l.shape[l.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=T(f),y=T(m);x(h===c,(()=>`Error in fused matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Wa(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),w=pa(l,n?[g,h,p]:[g,p,h]),v=pa(u,r?[y,d,c]:[y,c,d]);let S,N;null!=s&&(S=wn(s,"bias","fused matMul"),[S]=an(S,l),Wa(b,S.shape)),null!=i&&(N=wn(i,"prelu weights","fused matMul"));const E=(t,e)=>{const[i,o,l,u]=e,h=Uo(pa(t,l.shape),l,a);let c,p;if(n||r?!n&&r?(c=di(h,o,!1,!1),p=di(h,i,!0,!1)):n&&!r?(c=di(o,h,!1,!0),p=di(i,h,!1,!1)):(c=di(o,h,!0,!0),p=di(h,i,!0,!0)):(c=di(h,o,!1,!0),p=di(i,h,!0,!1)),null!=s){return[c,p,Po(u,h)]}return[c,p]},k={a:w,b:v,bias:S,preluActivationWeights:N},I={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){return js(((t,e,n)=>{const r=fn.runKernel("_FusedMatMul",k,I);return n([t,e,r]),{value:pa(r,b),gradFunc:E}}))(w,v)}return js(((t,e,n,r)=>{const s=fn.runKernel("_FusedMatMul",k,I);return r([t,e,s,n]),{value:pa(s,b),gradFunc:E}}))(w,v,S)}});function Xo(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+r-1);s[a]=e-n*Math.cos(i)}return Eo(s,"float32")}vn({hammingWindow_:function(t){return Xo(t,.54,.46)}});const Zo=vn({hannWindow_:function(t){return Xo(t,.5,.5)}});const Jo=vn({frame_:function(t,e,n,r=!1,s=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(lo(t,a,e)),a+=n;if(r)for(;a<t.size;){const r=a+e-t.size,o=Ta([lo(t,a,e-r),Ja([r],s)]);i.push(o),a+=n}return 0===i.length?ko([],[0,e]):pa(Ta(i),[i.length,e])}});vn({stft_:function(t,e,n,r,s=Zo){var a;null==r&&(a=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Jo(t,e,n),o=li(i,s(e));return wo(o,r)}});const Qo=vn({cropAndResize_:function(t,e,n,r,s="bilinear",a=0){const i=wn(t,"image","cropAndResize"),o=wn(e,"boxes","cropAndResize","float32"),l=wn(n,"boxInd","cropAndResize","int32"),u=o.shape[0];x(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),x(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),x(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),x(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),x(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),x("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:i,boxes:o,boxInd:l},c={method:s,extrapolationValue:a,cropSize:r};return fn.runKernel("CropAndResize",h,c)}});const Yo=vn({flipLeftRight_:function(t){const e=wn(t,"image","flipLeftRight","float32");x(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return fn.runKernel("FlipLeftRight",n,{})}});const tl=vn({grayscaleToRGB_:function(t){const e=wn(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];x(e.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`)),x(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,Xa(e,s)}});const el=vn({rotateWithOffset_:function(t,e,n=0,r=.5){const s=wn(t,"image","rotateWithOffset","float32");x(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:e,fillValue:n,center:r};return fn.runKernel("RotateWithOffset",a,i)}});function nl(t,e,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),x(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),x(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),x(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),x(1===e.rank,(()=>"scores must be a 1D tensor")),x(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),x(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const rl=vn({nonMaxSuppression_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=wn(t,"boxes","nonMaxSuppression","float32"),i=wn(e,"scores","nonMaxSuppression","float32"),o=nl(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return fn.runKernel("NonMaxSuppressionV3",{boxes:a,scores:i},l)}});function sl(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,s=t.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(e,t[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(t,e,n||al)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function al(t,e){return t>e?1:t<e?-1:0}function il(t,e,n,r,s){return ul(t,e,n,r,s,0)}function ol(t,e,n,r,s,a){return ul(t,e,n,r,s,0,!1,a,!0)}function ll(t,e,n,r,s,a){return ul(t,e,n,r,s,a,!0)}function ul(t,e,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>s&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(pl);const h=a>0?-.5/a:0,c=[],p=[];for(;c.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<s)break;let o=!1;for(let n=c.length-1;n>=i;--n){const i=hl(t,a,c[n]);if(i>=r){o=!0;break}if(e.score=e.score*cl(r,h,i),e.score<=s)break}e.suppressBeginIndex=c.length,o||(e.score===n?(c.push(a),p.push(e.score)):e.score>s&&sl(u,e,pl))}const d=c.length,f=n-d;o&&f>0&&(c.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:c};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function hl(t,e,n){const r=t.subarray(4*e,4*e+4),s=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),h=Math.min(s[1],s[3]),c=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(l-i),f=(c-u)*(p-h);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,h),y=Math.min(o,c),b=Math.min(l,p),w=Math.max(y-m,0)*Math.max(b-g,0);return w/(d+f-w)}function cl(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function pl(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}const dl=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=wn(t,"boxes","nonMaxSuppressionAsync"),i=wn(e,"scores","nonMaxSuppressionAsync"),o=nl(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:c}=il(u,h,n,r,s);return a!==t&&a.dispose(),i!==e&&i.dispose(),Eo(c,"int32")};const fl=vn({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=wn(t,"boxes","nonMaxSuppression"),o=wn(e,"scores","nonMaxSuppression"),l=nl(i,o,n,r,s,a),u={boxes:i,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},c=fn.runKernel("NonMaxSuppressionV5",u,h);return{selectedIndices:c[0],selectedScores:c[1]}}});const ml=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=wn(t,"boxes","nonMaxSuppressionAsync"),o=wn(e,"scores","nonMaxSuppressionAsync"),l=nl(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),h=u[0],c=u[1],{selectedIndices:p,selectedScores:d}=ll(h,c,n,r,s,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Eo(p,"int32"),selectedScores:Eo(d)}};const gl=vn({nonMaxSuppressionPadded_:function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=wn(t,"boxes","nonMaxSuppression"),o=wn(e,"scores","nonMaxSuppression"),l=nl(i,o,n,r,s,null),u={boxes:i,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},c=fn.runKernel("NonMaxSuppressionV4",u,h);return{selectedIndices:c[0],validOutputs:c[1]}}});const yl=async function(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=wn(t,"boxes","nonMaxSuppressionAsync"),o=wn(e,"scores","nonMaxSuppressionAsync"),l=nl(i,o,n,r,s,null),u=l.maxOutputSize,h=l.iouThreshold,c=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ol(p,d,u,h,c,a);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Eo(f,"int32"),validOutputs:so(m,"int32")}};const bl=vn({resizeBilinear_:function(t,e,n=!1,r=!1){const s=wn(t,"images","resizeBilinear");x(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),x(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),x(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=pa(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:e},u=fn.runKernel("ResizeBilinear",o,l);return i?pa(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const wl=vn({resizeNearestNeighbor_:function(t,e,n=!1,r=!1){const s=wn(t,"images","resizeNearestNeighbor");x(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),x(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),x("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),x(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=pa(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=e,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:e},u=fn.runKernel("ResizeNearestNeighbor",o,l);return i?pa(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const xl=vn({threshold_:function(t,e="binary",n=!1,r=.5){const s=wn(t,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,h=li(Eo([r]),255);if(x(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),x(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),x("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),x("otsu"===e||"binary"===e,(()=>`Method must be binary or otsu, but was ${e}`)),3===s.shape[2]){[i,o,l]=bo(s,[1,1,1],-1);const t=li(i,.2989),e=li(o,.587),n=li(l,.114);u=Hs(Hs(t,e),n)}else u=t;if("otsu"===e){h=function(t,e){let n,r,s,a,i,o,l=Eo([-1]),u=Eo([0]),h=Eo([0]);for(let c=0;c<t.size-1;c++){n=lo(t,0,c+1),r=lo(t,c+1),i=za(hi(n),e),o=za(hi(r),e);const p=hi(li(n,Qi(0,n.size)));s=za(p,hi(n));const d=Ja(r.shape,n.size),f=Hs(Qi(0,r.size),d),m=li(r,f);a=za(hi(m),hi(r));const g=ui(s,a),y=ui(s,a),b=li(i,o);h=li(li(b,g),y);const w=ti(h,u);u=Ga(w,h,u),l=Ga(w,Eo([c]),l)}return l}(wa(hs(ro(u),"int32"),Tn([]),256),a)}const c=n?si(u,h):ti(u,h);return hs(li(c,255),"int32")}});const vl=vn({transform_:function(t,e,n="nearest",r="constant",s=0,a){const i=wn(t,"image","transform","float32"),o=wn(e,"transforms","transform","float32");x(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),x(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return fn.runKernel("Transform",l,u)}});const Sl=vn({bandPart_:function(t,e,n){x(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),x(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=wn(t,"a","bandPart");x(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=pa(Qi(0,a,1,"int32"),[-1,1]),l=Qi(0,i,1,"int32"),u=ui(o,l),h=pi(si(u,so(+e,"int32")),ei(u,so(-n,"int32"))),c=Oi([a,i],r.dtype);return pa(No(Ao(pa(r,[-1,a,i])).map((t=>Ga(h,t,c)))),s)}});function Nl(t,e,n=null){if(0===t.rank)return qs(t);if(1!==t.rank&&null===n)return Nl(pa(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return hi(qs(t),n);if(e===1/0)return oi(qs(t),n);if(e===-1/0)return bi(qs(t),n);if("euclidean"===e||2===e)return xo(hi(zi(qs(t),so(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return oi(hi(qs(t),n[0]),n[1]-1);if(e===1/0)return oi(hi(qs(t),n[1]),n[0]);if(e===-1/0)return bi(hi(qs(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return xo(hi($i(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Tl=vn({norm_:function(t,e="euclidean",n=null,r=!1){const s=Nl(t=wn(t,"x","norm"),e,n);let a=s.shape;if(r){const e=O(n,t.shape);a=Ti(s.shape,e)}return pa(s,a)}});const El=vn({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,x(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)x(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=bo(t,t.shape[0],0).map((t=>So(t,[0])));x(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push(fn.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=li(hi(li(n[r],t)),n[r]);t=ui(t,e)}return za(t,Tl(t,"euclidean"))})));return e?No(n,0):n}});function kl(t,e=!1){return fn.tidy((()=>{x(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let s=Za(n),a=xa(t);const i=ko([[1]],[1,1]);let o=xa(i);const l=n>=r?r:n;for(let t=0;t<l;++t){const e=a,l=o,u=s;[o,a,s]=fn.tidy((()=>{const e=lo(a,[t,t],[n-t,1]),l=Tl(e),u=lo(a,[t,t],[1,1]),h=Ga(ti(u,0),ko([[-1]]),ko([[1]])),c=ui(u,li(h,l)),p=za(e,c);o=1===p.shape[0]?xa(i):Ta([i,lo(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Ci(za(di(h,c),l)),f=lo(a,[t,0],[n-t,r]),m=li(d,o),g=_o(o);if(0===t)a=ui(f,di(m,di(g,f)));else{const e=ui(f,di(m,di(g,f)));a=Ta([lo(a,[0,0],[t,r]),e],0)}const y=_o(m),b=lo(s,[0,t],[n,s.shape[1]-t]);if(0===t)s=ui(b,di(di(b,o),y));else{const e=ui(b,di(di(b,o),y));s=Ta([lo(s,[0,0],[n,t]),e],1)}return[o,a,s]})),Ws([e,l,u])}return!e&&n>r&&(s=lo(s,[0,0],[n,r]),a=lo(a,[0,0],[r,r])),[s,a]}))}const Il=vn({qr_:function(t,e=!1){if(x(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return kl(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=Ao(pa(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],a=[];r.forEach((t=>{const[n,r]=kl(t,e);s.push(n),a.push(r)}));return[pa(No(s,0),t.shape),pa(No(a,0),t.shape)]}}});var Al,$l;($l=Al||(Al={}))[$l.NONE=0]="NONE",$l[$l.MEAN=1]="MEAN",$l[$l.SUM=2]="SUM",$l[$l.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const _l=vn({computeWeightedLoss_:function(t,e,n=Al.SUM_BY_NONZERO_WEIGHTS){const r=wn(t,"losses","computeWeightedLoss");let s=null;null!=e&&(s=wn(e,"weights","computeWeightedLoss"));const a=null==s?r:li(r,s);if(n===Al.NONE)return a;if(n===Al.SUM)return hi(a);if(n===Al.MEAN){if(null==s)return yi(a);{const t=r.size/s.size,e=za(hi(a),hi(s));return t>1?za(e,so(t)):e}}if(n===Al.SUM_BY_NONZERO_WEIGHTS){if(null==s)return za(hi(a),so(r.size));{const t=li(s,Fi(r.shape)),e=hs(hi(Ri(t,so(0))),"float32");return za(hi(a),e)}}throw Error(`Unknown reduction: ${n}`)}});vn({absoluteDifference_:function(t,e,n,r=Al.SUM_BY_NONZERO_WEIGHTS){const s=wn(t,"labels","absoluteDifference"),a=wn(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=wn(n,"weights","absoluteDifference")),v(s.shape,a.shape,"Error in absoluteDifference: ");const o=qs(ui(s,a));return _l(o,i,r)}});vn({cosineDistance_:function(t,e,n,r,s=Al.SUM_BY_NONZERO_WEIGHTS){const a=wn(t,"labels","cosineDistance"),i=wn(e,"predictions","cosineDistance");let o=null;null!=r&&(o=wn(r,"weights","cosineDistance")),v(a.shape,i.shape,"Error in cosineDistance: ");const l=so(1),u=ui(l,hi(li(a,i),n,!0));return _l(u,o,s)}});vn({hingeLoss_:function(t,e,n,r=Al.SUM_BY_NONZERO_WEIGHTS){let s=wn(t,"labels","hingeLoss");const a=wn(e,"predictions","hingeLoss");let i=null;null!=n&&(i=wn(n,"weights","hingeLoss")),v(s.shape,a.shape,"Error in hingeLoss: ");const o=so(1);s=ui(li(so(2),s),o);const l=to(ui(o,li(s,a)));return _l(l,i,r)}});vn({huberLoss_:function(t,e,n,r=1,s=Al.SUM_BY_NONZERO_WEIGHTS){const a=wn(t,"labels","huberLoss"),i=wn(e,"predictions","huberLoss");let o=null;null!=n&&(o=wn(n,"weights","huberLoss")),v(a.shape,i.shape,"Error in huberLoss: ");const l=so(r),u=qs(ui(i,a)),h=wi(u,l),c=ui(u,h),p=Hs(li(so(.5),$i(h)),li(l,c));return _l(p,o,s)}});vn({logLoss_:function(t,e,n,r=1e-7,s=Al.SUM_BY_NONZERO_WEIGHTS){const a=wn(t,"labels","logLoss"),i=wn(e,"predictions","logLoss");let o=null;null!=n&&(o=wn(n,"weights","logLoss")),v(a.shape,i.shape,"Error in logLoss: ");const l=so(1),u=so(r),h=Ci(li(a,ai(Hs(i,u)))),c=li(ui(l,a),ai(Hs(ui(l,i),u))),p=ui(h,c);return _l(p,o,s)}});vn({meanSquaredError_:function(t,e,n,r=Al.SUM_BY_NONZERO_WEIGHTS){const s=wn(t,"labels","meanSquaredError"),a=wn(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=wn(n,"weights","meanSquaredError")),v(s.shape,a.shape,"Error in meanSquaredError: ");const o=vo(s,a);return _l(o,i,r)}});vn({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Al.SUM_BY_NONZERO_WEIGHTS){let a=wn(t,"multiClassLabels","sigmoidCrossEntropy");const i=wn(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=wn(n,"weights","sigmoidCrossEntropy")),v(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=so(r),e=so(1),n=so(.5);a=Hs(li(a,ui(e,t)),li(n,t))}const l=function(t,e){const n=wn(t,"labels","sigmoidCrossEntropyWithLogits"),r=wn(e,"logits","sigmoidCrossEntropyWithLogits");v(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=to(r),a=li(r,n),i=ii(Ha(Ci(qs(r))));return Hs(ui(s,a),i)}(a,i);return _l(l,o,s)}});const Cl=vn({logSumExp_:function(t,e=null,n=!1){const r=wn(t,"x","logSumExp"),s=O(e,r.shape),a=oi(r,s,!0),i=ui(r,a),o=Ha(i),l=hi(o,s),u=ai(l),h=Hs(pa(a,u.shape),u);if(n){const t=Ti(h.shape,s);return pa(h,t)}return h}});vn({softmaxCrossEntropy_:function(t,e,n,r=0,s=Al.SUM_BY_NONZERO_WEIGHTS){let a=wn(t,"onehotLabels","softmaxCrossEntropy");const i=wn(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=wn(n,"weights","softmaxCrossEntropy")),v(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=so(r),e=so(1),n=so(a.shape[1]);a=Hs(li(a,ui(e,t)),za(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return js(((t,e,r)=>{const s=Cl(e,[n],!0),a=ui(hs(e,"float32"),s);r([t,a]);const i=Ci(li(a,t));return{value:hi(i,[n]),gradFunc:(t,e)=>{const[r,s]=e,a=Ti(t.shape,[n]);return[li(pa(t,a),ui(hs(r,"float32"),Ha(s))),li(pa(t,a),ui(Ha(s),hs(r,"float32")))]}}}))(t,e)}(a,i);return _l(l,o,s)}});vn({sparseFillEmptyRows_:function(t,e,n,r){const s=wn(t,"indices","sparseFillEmptyRows","int32"),a=wn(e,"values","sparseFillEmptyRows"),i=wn(n,"denseShape","sparseFillEmptyRows","int32"),o=wn(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=fn.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});vn({sparseReshape_:function(t,e,n){const r=wn(t,"inputIndices","sparseReshape","int32"),s=wn(e,"inputShape","sparseReshape","int32"),a=wn(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=fn.runKernel("SparseReshape",i);return{outputIndices:o[0],outputShape:o[1]}}});vn({sparseSegmentMean_:function(t,e,n){const r=wn(t,"data","sparseSegmentMean"),s=wn(e,"indices","sparseSegmentMean","int32"),a=wn(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return fn.runKernel("SparseSegmentMean",i)}});vn({sparseSegmentSum_:function(t,e,n){const r=wn(t,"data","sparseSegmentSum"),s=wn(e,"indices","sparseSegmentSum","int32"),a=wn(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return fn.runKernel("SparseSegmentSum",i)}});vn({stringNGrams_:function(t,e,n,r,s,a,i,o){const l=wn(t,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=wn(e,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},c={data:l,dataSplits:u},p=fn.runKernel("StringNGrams",c,h);return{nGrams:p[0],nGramsSplits:p[1]}}});vn({stringSplit_:function(t,e,n=!0){const r=wn(t,"input","stringSplit","string"),s=wn(e,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=fn.runKernel("StringSplit",i,a);return{indices:o[0],values:o[1],shape:o[2]}}});vn({stringToHashBucketFast_:function(t,e){const n=wn(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return fn.runKernel("StringToHashBucketFast",s,r)}});const Rl={flipLeftRight:Yo,grayscaleToRGB:tl,resizeNearestNeighbor:wl,resizeBilinear:bl,rotateWithOffset:el,cropAndResize:Qo,nonMaxSuppression:rl,nonMaxSuppressionAsync:dl,nonMaxSuppressionWithScore:fl,nonMaxSuppressionWithScoreAsync:ml,nonMaxSuppressionPadded:gl,nonMaxSuppressionPaddedAsync:yl,threshold:xl,transform:vl},Dl={bandPart:Sl,gramSchmidt:El,qr:Il};class Ol extends Ms{minimize(t,e=!1,n){const{value:r,grads:s}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:s[t.name]})));this.applyGradients(t)}else this.applyGradients(s);return Ws(s),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Gs(t,e)}dispose(){null!=this.iterations_&&Ws(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:so(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Ol,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class Fl extends Ol{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=fn.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fn.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Ps((()=>ja(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Ps((()=>ja(r).variable(false)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Ps((()=>{const t=Hs(li(a,this.rho),li($i(s),1-this.rho)),e=li(za(xo(Hs(i,this.epsilon)),xo(Hs(a,this.epsilon))),s),n=Hs(li(i,this.rho),li($i(e),1-this.rho));a.assign(t),i.assign(n);const o=Hs(li(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Ws(this.accumulatedGrads.map((t=>t.variable))),Ws(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Fl.className="Adadelta",zs(Fl);class Ml extends Ol{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fn.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Ps((()=>Ja(r.shape,this.initialAccumulatorValue).variable(t)))}}const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const a=this.accumulatedGrads[n].variable;Ps((()=>{const t=Hs(a,$i(s));a.assign(t);const e=Hs(li(za(s,xo(Hs(t,fn.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Ws(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Ml.className="Adagrad",zs(Ml);class Ll extends Ol{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ps((()=>{this.accBeta1=so(e).variable(),this.accBeta2=so(n).variable()})),null==r&&(this.epsilon=fn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Ps((()=>{const n=ui(1,this.accBeta1),r=ui(1,this.accBeta2);e.forEach(((e,s)=>{const a=fn.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:Ps((()=>ja(a).variable(false)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${e}/v`,variable:Ps((()=>ja(a).variable(false)))});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=Hs(li(o,this.beta1),li(i,1-this.beta1)),h=Hs(li(l,this.beta2),li($i(i),1-this.beta2)),c=za(u,n),p=za(h,r);o.assign(u),l.assign(h);const d=Hs(li(za(c,Hs(xo(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(li(this.accBeta1,this.beta1)),this.accBeta2.assign(li(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ws(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Ws(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Ps((()=>{this.accBeta1.assign(zi(this.beta1,this.iterations_+1)),this.accBeta2.assign(zi(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Ll.className="Adam",zs(Ll);class zl extends Ol{constructor(t,e,n,r=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ps((()=>{this.iteration=so(0).variable(),this.accBeta1=so(e).variable()})),null==r&&(this.epsilon=fn.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Ps((()=>{const n=ui(1,this.accBeta1),r=za(-this.learningRate,Hs(li(this.iteration,this.decay),1));e.forEach(((e,s)=>{const a=fn.registeredVariables[e];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${e}/m`,variable:ja(a).variable(false)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${e}/v`,variable:ja(a).variable(false)});const i=Array.isArray(t)?t[s].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=Hs(li(o,this.beta1),li(i,1-this.beta1)),h=li(l,this.beta2),c=qs(i),p=gi(h,c);o.assign(u),l.assign(p);const d=Hs(li(za(r,n),za(u,Hs(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(Hs(this.iteration,1)),this.accBeta1.assign(li(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ws(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Ws(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}zl.className="Adamax",zs(zl);class Bl extends Ol{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const s=fn.registeredVariables[e];Ps((()=>{const t=Hs(li(this.c,r),s);s.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Vs(so(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}Bl.className="SGD",zs(Bl);class Ul extends Bl{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=so(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fn.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Ps((()=>ja(r).variable(t)))}}const s=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&Ps((()=>{let t;const e=Hs(li(this.m,s),a);t=this.useNesterov?Hs(li(this.c,Hs(a,li(e,this.m))),r):Hs(li(this.c,e),r),s.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Ws(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}Ul.className="Momentum",zs(Ul);class Pl extends Ol{constructor(t,e=.9,n=0,r=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=fn.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=fn.registeredVariables[e],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Ps((()=>ja(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Ps((()=>ja(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Ps((()=>ja(r).variable(s)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ps((()=>{const t=Hs(li(i,this.decay),li($i(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,s=Hs(li(e,this.decay),li(a,1-this.decay)),l=za(li(a,this.learningRate),xo(ui(t,Hs($i(s),this.epsilon)))),u=Hs(li(o,this.momentum),l);i.assign(t),e.assign(s),o.assign(u);const h=ui(r,u);r.assign(h)}else{const t=Hs(li(i,this.decay),li($i(a),1-this.decay)),e=Hs(li(o,this.momentum),za(li(a,this.learningRate),xo(Hs(t,this.epsilon))));i.assign(t),o.assign(e);const n=ui(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Ws(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Ws(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Ws(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}Pl.className="RMSProp",zs(Pl);class Wl{static sgd(t){return new Bl(t)}static momentum(t,e,n=!1){return new Ul(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,s=!1){return new Pl(t,e,n,r,s)}static adam(t=.001,e=.9,n=.999,r=null){return new Ll(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new Fl(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,s=0){return new zl(t,e,n,r,s)}static adagrad(t,e=.1){return new Ml(t,e)}}const Vl={sgd:Wl.sgd,momentum:Wl.momentum,adadelta:Wl.adadelta,adagrad:Wl.adagrad,rmsprop:Wl.rmsprop,adamax:Wl.adamax,adam:Wl.adam},Gl="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jl(){return new Promise((t=>Gl((()=>t()))))}var ql={};t(ql,"fromUint8ToStringArray",(()=>rh)),t(ql,"fromStringArrayToUint8",(()=>sh)),t(ql,"slice_util",(()=>ys)),t(ql,"upcastType",(()=>sn)),t(ql,"segment_util",(()=>Yu));var Hl={};function Kl(t,e){const n=t[0].length;t.forEach(((t,e)=>{x(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),x(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,s)=>{for(let a=0;a<n;a++)x(a===e||t[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Xl(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}t(Hl,"assertParamsConsistent",(()=>Kl)),t(Hl,"computeOutShape",(()=>Xl));var Zl={};t(Zl,"PARALLELIZE_THRESHOLD",(()=>Jl)),t(Zl,"computeOptimalWindowSize",(()=>Ql));const Jl=30;function Ql(t){return t<=Jl?t:X(t,Math.floor(Math.sqrt(t)))}var Yl={};function tu(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}t(Yl,"getImageCenter",(()=>tu));var eu={};function nu(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)s=s.concat([t[r+1]/e[r],e[r]]);s=s.concat(t.slice(n+1))}return s}function ru(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function su(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?s.push(e[n-1]*t[n]):s.push(t[n]/e[n-1]):s.push(t[n]);return s}function au(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function iu(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}t(eu,"getReshaped",(()=>nu)),t(eu,"getPermuted",(()=>ru)),t(eu,"getReshapedPermuted",(()=>su)),t(eu,"getSliceBeginCoords",(()=>au)),t(eu,"getSliceSize",(()=>iu));var ou={};function lu(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===T(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,a=s[s.length-1];let i=1;for(let t=0;t<s.length-1;++t)i*=s[t];const o=t.shape,l=s.slice();l.pop();let u=1;for(let t=a;t<n;++t)u*=o[t],l.push(o[t]);const h=[...Z(t.shape).map((t=>t/u)),1].slice(0,a);return[l,i,u,h]}t(ou,"prepareAndValidate",(()=>lu));var uu={};t(uu,"SELU_SCALEALPHA",(()=>hu)),t(uu,"SELU_SCALE",(()=>cu));const hu=1.7580993408473768,cu=1.0507009873554805;var pu={};t(pu,"ERF_P",(()=>du)),t(pu,"ERF_A1",(()=>fu)),t(pu,"ERF_A2",(()=>mu)),t(pu,"ERF_A3",(()=>gu)),t(pu,"ERF_A4",(()=>yu)),t(pu,"ERF_A5",(()=>bu));const du=.3275911,fu=.254829592,mu=-.284496736,gu=1.421413741,yu=-1.453152027,bu=1.061405429;var wu={};function xu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function vu(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Su(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Nu(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Tu(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Eu(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function ku(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const a=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Iu(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}t(wu,"mergeRealAndImagArrays",(()=>xu)),t(wu,"splitRealAndImagArrays",(()=>vu)),t(wu,"complexWithEvenIndex",(()=>Su)),t(wu,"complexWithOddIndex",(()=>Nu)),t(wu,"getComplexWithIndex",(()=>Tu)),t(wu,"assignToTypedArray",(()=>Eu)),t(wu,"exponents",(()=>ku)),t(wu,"exponent",(()=>Iu));var Au={};t(Au,"decodeEinsumEquation",(()=>_u)),t(Au,"getEinsumPermutation",(()=>Cu)),t(Au,"checkEinsumDimSizes",(()=>Ru)),t(Au,"getEinsumComputePath",(()=>Du)),t(Au,"isIdentityPermutation",(()=>Ou));const $u=/->/g;function _u(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace($u,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=t.split("->");x(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let t=0;t<s.length;++t){const e=s[t];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let t=0;t<r.length;++t){const e=r[t];-1===o.indexOf(e)&&","!==e&&o.push(e)}const l=new Array(a.length);for(let t=0;t<i;++t){if(new Set(a[t].split("")).size!==a[t].length)throw new Error(`Found duplicate axes in input component ${a[t]}. Support for duplicate axes in input is not implemented yet.`);l[t]=[];for(let e=0;e<a[t].length;++e)l[t].push(o.indexOf(a[t][e]))}const u=o.length,h=[];for(let t=s.length;t<u;++t)h.push(t);return{allDims:o,summedDims:h,idDims:l}}function Cu(t,e){let n=new Array(t);n.fill(-1);for(let t=0;t<e.length;++t)n[e[t]]=t;const r=[];for(let e=0;e<t;++e)-1===n[e]&&r.push(e);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:r}}function Ru(t,e,n){const r=new Array(t);for(let t=0;t<n.length;++t){const s=n[t].shape;for(let n=0;n<e[t].length;++n)void 0===r[e[t][n]]?r[e[t][n]]=s[n]:x(r[e[t][n]]===s[n],(()=>`Expected dimension ${r[e[t][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Du(t,e){const n=t,r=[];let s=0;0===t.length&&n.push(-1),s=t.length+1;for(let t=0;t<s;++t)r.push([]);const a=[];for(let t=0;t<n.length;++t){const s=Fu(e,n[t]);for(const e of s)-1===a.indexOf(e)&&(r[t].push(e),a.push(e))}return{path:n,steps:r}}function Ou(t){return t.every(((t,e)=>t===e))}function Fu(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}var Mu={};function Lu(t,e,n=0){let r=[];if("number"==typeof e)x(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{x(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}x(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}t(Mu,"prepareSplitSize",(()=>Lu));var zu={};function Bu(t){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${t}`}function Uu(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function Pu(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}t(zu,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(()=>Bu)),t(zu,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(()=>Uu)),t(zu,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(()=>Pu));var Wu={};function Vu(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function Gu(t,e){return`size ${t} must be non-negative, not ${e}`}function ju(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function qu(t,e){return`Input to reshape is a SparseTensor with ${T(t)}\n  dense values, but the requested shape requires a multiple of ${T(e)}. inputShape=${t} outputShape= ${e}`}function Hu(t,e){return`Input to reshape is a tensor with ${T(t)} dense values, but the requested shape has ${T(e)}. inputShape=${t} outputShape=${e}`}t(Wu,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(()=>Vu)),t(Wu,"getSparseReshapeNegativeOutputDimErrorMessage",(()=>Gu)),t(Wu,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(()=>ju)),t(Wu,"getSparseReshapeInputOutputMultipleErrorMessage",(()=>qu)),t(Wu,"getSparseReshapeInputOutputMismatchErrorMessage",(()=>Hu));var Ku={};function Xu(){return"segment ids must be >= 0"}function Zu(){return"segment ids are not increasing"}function Ju(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function Qu(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}t(Ku,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(()=>Xu)),t(Ku,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(()=>Zu)),t(Ku,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(()=>Ju)),t(Ku,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(()=>Qu));var Yu={};function th(t,e){let n,r=!1;for(t<=Jl?(n=t,r=!0):n=X(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=X(t,n+1);return n}function eh(t,e,n){const r=[],s=t.length;for(let a=0;a<s;a++)a!==e?r.push(t[a]):r.push(n);return r}function nh(t,e,n,r){const s=e.shape.length,a=t.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(t.shape[n]!==e.shape[n])throw new Error(`x.shape[${n}]: ${t.shape[n]} should be equal to indices.shape[${n}]: ${e.shape[n]}.`);const i=t.shape[n],o=[];let l=1,u=1,h=1;for(let e=0;e<r;++e)o.push(t.shape[e]),l*=t.shape[e];for(let e=r;e<n;e++)o.push(t.shape[e]),u*=t.shape[e];for(let t=r;t<s;t++)o.push(e.shape[t]);for(let e=n+1;e<a;e++)o.push(t.shape[e]),h*=t.shape[e];return{batchSize:l,sliceSize:h,outerSize:u,dimSize:i,outputShape:o}}function rh(t){try{return t.map((t=>Ce(t)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function sh(t){return t.map((t=>_e(t)))}t(Yu,"segOpComputeOptimalWindowSize",(()=>th)),t(Yu,"computeOutShape",(()=>eh)),t(Yu,"collectGatherOpShapeInfo",(()=>nh)),n(ql,xi),n(ql,Ba),n(ql,Hl),n(ql,Js),n(ql,zo),n(ql,Zl),n(ql,Yl),n(ql,eu),n(ql,ou),n(ql,Co),n(ql,uu),n(ql,pu),n(ql,Ct),n(ql,wu),n(ql,Au),n(ql,Mu),n(ql,zu),n(ql,Wu),n(ql,Ku);var ah={};let ih;function oh(t){ih=t}function lh(t){if(void 0!==ih)return ih;if(t||"undefined"!=typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const e=t;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function uh(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}t(ah,"mockIsMobile",(()=>oh)),t(ah,"isMobile",(()=>lh)),t(ah,"isBrowser",(()=>uh));var hh={};let ch;function ph(){return null==ch&&(ch=fn.backend.epsilon()),ch}t(hh,"nonMaxSuppressionV3Impl",(()=>il)),t(hh,"nonMaxSuppressionV4Impl",(()=>ol)),t(hh,"nonMaxSuppressionV5Impl",(()=>ll)),t(hh,"whereImpl",(()=>$o));class dh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,dh.prototype)}}class fh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,fh.prototype)}}class mh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,mh.prototype)}}class gh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,gh.prototype)}}class yh extends Error{constructor(t){super(t),Object.setPrototypeOf(this,yh.prototype)}}Error;function bh(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function wh(t,e){if(!t)throw new yh(e)}function xh(t,e){let n=0;for(const r of t)r===e&&n++;return n}function vh(t){return 1===t.length?t[0]:t}function Sh(t){return Array.isArray(t)?t:[t]}function Nh(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Th(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let Eh={};function kh(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function Ih(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>Ih(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?Ih(e):t[n]=e.value)}}}function Ah(t,e={},n={},r="object",s=!1){if("string"==typeof t){const s=t;let a;if(s in n)a=n[s];else if(s in Eh)a=Eh[s];else if(a=e[s],null==a)throw new mh(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new mh(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Eh?[o,l]=Eh.className:i in e&&([o,l]=e[i]),null==o)throw new mh(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(Eh))t[e]=Eh[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},Eh);for(const t of Object.keys(n))Eh[t]=n[t];Ih(a.config);const r=l(o,a.config,n,s);return Eh=Object.assign({},e),r}{const t=Object.assign({},Eh);for(const t of Object.keys(n))Eh[t]=n[t];const e=new o(a.config);return Eh=Object.assign({},t),e}}}function $h(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function _h(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function Ch(t){if(null==t)throw new mh(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Rh(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new mh(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function Dh(t,e,n=0,r=1/0){return wh(n>=0),wh(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function Oh(t,e){Array.isArray(t)?(Ut.assert(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>Oh(t,`element ${n+1} of ${e}`)))):Ut.assert(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${Fh(t)}.`))}function Fh(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>Fh(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function Mh(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Lh(t,e){return Ps((()=>xo(hi(li(t,t),e,!0))))}class zh extends Fs.Serializable{getConfig(){return{}}}class Bh extends zh{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Ps((()=>{const e=Lh(t,this.axis),n=Na(e,0,this.maxValue);return li(t,za(n,Hs(ph(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Bh.className="MaxNorm",Fs.registerClass(Bh);class Uh extends zh{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Ps((()=>za(t,Hs(ph(),Lh(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Uh.className="UnitNorm",Fs.registerClass(Uh);class Ph extends zh{apply(t){return to(t)}}Ph.className="NonNeg",Fs.registerClass(Ph);class Wh extends zh{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Ps((()=>{const e=Lh(t,this.axis),n=Hs(li(this.rate,Na(e,this.minValue,this.maxValue)),li(1-this.rate,e));return li(t,za(n,Hs(ph(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Wh.className="MinMaxNorm",Fs.registerClass(Wh);const Vh={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Gh(t){return kh(t)}function jh(t,e={}){return Ah(t,Fs.SerializationMap.getMap().classNameMap,e,"constraint")}function qh(t){if(null==t)return null;if("string"==typeof t){return jh({className:t in Vh?Vh[t]:t,config:{}})}return t instanceof zh?t:jh(t)}var Hh={};t(Hh,"zeros",(()=>Jc)),t(Hh,"ones",(()=>Qc)),t(Hh,"constant",(()=>Yc)),t(Hh,"randomUniform",(()=>tp)),t(Hh,"randomNormal",(()=>ep)),t(Hh,"truncatedNormal",(()=>np)),t(Hh,"identity",(()=>rp)),t(Hh,"varianceScaling",(()=>sp)),t(Hh,"glorotUniform",(()=>ap)),t(Hh,"glorotNormal",(()=>ip)),t(Hh,"heNormal",(()=>op)),t(Hh,"heUniform",(()=>lp)),t(Hh,"leCunNormal",(()=>up)),t(Hh,"leCunUniform",(()=>hp)),t(Hh,"orthogonal",(()=>cp));const Kh=["channelsFirst","channelsLast"],Xh=["nearest","bilinear"],Zh=["valid","same","causal"],Jh=["max","avg"],Qh=["sum","mul","concat","ave"],Yh=new Map;function tc(t){Rh(Kh,"DataFormat",t)}function ec(t){Rh(Zh,"PaddingMode",t)}function nc(t){Rh(Jh,"PoolMode",t)}const rc=[];function sc(t,e){rc.push(t);try{const t=e();return rc.pop(),t}catch(t){throw rc.pop(),t}}function ac(t){if(!lc(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===rc.length?"":rc.join("/")+"/")+t}function ic(t){if(!lc(t))throw new Error("Not a valid tensor name: '"+t+"'");Yh.has(t)||Yh.set(t,0);const e=Yh.get(t);if(Yh.set(t,Yh.get(t)+1),e>0){const n=`${t}_${e}`;return Yh.set(n,1),n}return t}const oc=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function lc(t){return!!t.match(oc)}function uc(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let s=e;s<n;++s)r*=t[s];return r}function hc(t){if(0===t.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r<e&&(e=r)}return e}function cc(t){if(0===t.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let n=0;n<t.length;n++){const r=t[n];r>e&&(e=r)}return e}function pc(t,e){if(e<t)throw new mh(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function dc(t,e){return hs(t,e)}function fc(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),pa(t,n)}function mc(t,e,n){return Ps((()=>{switch(t.rank){case 1:return uo(t,e,n);case 2:return ho(t,[e,0],[n,t.shape[1]]);case 3:return co(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return po(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return lo(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return lo(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new mh(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function gc(t,e,n){return Ps((()=>{switch(t.rank){case 1:return uo(t,e,n);case 2:return ho(t,[0,e],[t.shape[0],n]);case 3:return co(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return po(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new mh(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function yc(t,e,n,r){return Ps((()=>{switch(t.rank){case 1:return uo(t,e,n);case 2:switch(r){case 1:return mc(t,e,n);case 2:return gc(t,e,n);default:throw new mh(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return mc(t,e,n);case 2:return co(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return gc(t,e,n);default:throw new mh(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return mc(t,e,n);case 2:return po(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return po(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return gc(t,e,n);default:throw new mh(`The axis is not within the rank of the tensor ${r}`)}default:throw new mh(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function bc(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),Ta(t,e)}function wc(t,e){switch(t.rank){case 1:return Ea([t,e]);case 2:return ka([t,e],0);case 3:return Ia([t,e],0);case 4:return Aa([t,e],0);default:throw new mh(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function xc(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new mh(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return Xa(t,e)}function vc(t,e=0,n=1,r,s){return Zi(t,e,n,r,s)}function Sc(t,e,n,r){if(t.rank<2||e.rank<2)throw new gh(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new gh(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(2===t.rank&&2===e.rank){const s=!1,a=!1;return Mo.matMul({a:t,b:e,transposeA:s,transposeB:a,bias:r?Ec(t.rank,r,"channelsLast"):null,activation:n})}{const s=t.shape.slice(),a=s.pop();t=pa(t,[-1,a]);const i=e.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=pa(_o(e,h),[l,-1]);const c=[...s,...u],p=!1,d=!1;return pa(Mo.matMul({a:t,b:e,transposeA:p,transposeB:d,bias:r?Ec(t.rank,r,"channelsLast"):null,activation:n}),c)}}function Nc(t,e,n){return Ps((()=>(e=Array.isArray(e)?Eo(e,"int32"):hs(e,"int32"),Ya(t,e,n))))}function Tc(t){return li(t,t)}function Ec(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new mh(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?pa(e,[1,r[0],1,1,1]):pa(e,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?pa(e,[1,1,1,1,r[0]]):pa(e,[1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?pa(e,[1,r[0],1,1]):pa(e,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?pa(e,[1,1,1,r[0]]):pa(e,[1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?pa(e,[1,r[0],1]):pa(e,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?pa(e,[1,1,r[0]]):pa(e,[1].concat(r))}else if(t<3)return e;throw new mh(`Unsupported input rank by biasAdd: ${e.rank}`)}function kc(t,e,n){return Ps((()=>(null==n&&(n="channelsLast"),tc(n),Hs(t,Ec(t.rank,e,n)))))}function Ic(t,e,n,r){return Ps((()=>Fo(t,e,n,r)))}function Ac(t,e,n=!1){return n?t():e()}const $c=["fanIn","fanOut","fanAvg"],_c=["normal","uniform","truncatedNormal"];class Cc extends Fs.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Rc extends Cc{apply(t,e){return Oi(t,e)}}Rc.className="Zeros",Fs.registerClass(Rc);class Dc extends Cc{apply(t,e){return Fi(t,e)}}Dc.className="Ones",Fs.registerClass(Dc);class Oc extends Cc{constructor(t){if(super(),"object"!=typeof t)throw new mh(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new mh(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Ps((()=>li(so(this.value),Fi(t,e))))}getConfig(){return{value:this.value}}}Oc.className="Constant",Fs.registerClass(Oc);class Fc extends Cc{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Ji(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Fc.className="RandomUniform",Fs.registerClass(Fc);class Mc extends Cc{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new gh(`randomNormal does not support dType ${e}.`);return vc(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Mc.className="RandomNormal",Fs.registerClass(Mc);class Lc extends Cc{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new gh(`truncatedNormal does not support dType ${e}.`);return Io(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Lc.className="TruncatedNormal",Fs.registerClass(Lc);class zc extends Cc{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Ps((()=>{if(2!==t.length||t[0]!==t[1])throw new mh("Identity matrix initializer can only be used for 2D square matrices.");return li(this.gain,Za(t[0]))}))}getConfig(){return{gain:this.gain}}}zc.className="Identity",Fs.registerClass(zc);class Bc extends Cc{constructor(t){if(super(),t.scale<0)throw new mh(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Rh($c,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Rh(_c,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(tc(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=uc(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=uc(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=uc(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new gh(`${this.getClassName()} does not support dType ${e}.`);return Io(t,0,n,e,this.seed)}{const n=Math.sqrt(3*a);return Ji(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Bc.className="VarianceScaling",Fs.registerClass(Bc);class Uc extends Bc{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Bc.className}}Uc.className="GlorotUniform",Fs.registerClass(Uc);class Pc extends Bc{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Bc.className}}Pc.className="GlorotNormal",Fs.registerClass(Pc);class Wc extends Bc{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Bc.className}}Wc.className="HeNormal",Fs.registerClass(Wc);class Vc extends Bc{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Bc.className}}Vc.className="HeUniform",Fs.registerClass(Vc);class Gc extends Bc{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Bc.className}}Gc.className="LeCunNormal",Fs.registerClass(Gc);class jc extends Bc{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Bc.className}}jc.className="LeCunNormal",Fs.registerClass(jc);class qc extends Cc{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new gh("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Ps((()=>{if(t.length<2)throw new gh("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=vc(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=Dl.gramSchmidt(e);return t[0]>t[1]&&(n=_o(n)),li(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}qc.className="Orthogonal",Fs.registerClass(qc);const Hc={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Kc(t,e={}){return Ah(t,Fs.SerializationMap.getMap().classNameMap,e,"initializer")}function Xc(t){return kh(t)}function Zc(t){if("string"==typeof t){const e=t in Hc?Hc[t]:t;if("GlorotNormal"===e)return new Pc;if("GlorotUniform"===e)return new Uc;if("HeNormal"===e)return new Wc;if("HeUniform"===e)return new Vc;if("LeCunNormal"===e)return new Gc;if("LeCunUniform"===e)return new jc;{const t={};return t.className=e,t.config={},Kc(t)}}return t instanceof Cc?t:Kc(t)}function Jc(){return new Rc}function Qc(){return new Dc}function Yc(t){return new Oc(t)}function tp(t){return new Fc(t)}function ep(t){return new Mc(t)}function np(t){return new Lc(t)}function rp(t){return new zc(t)}function sp(t){return new Bc(t)}function ap(t){return new Uc(t)}function ip(t){return new Pc(t)}function op(t){return new Wc(t)}function lp(t){return new Vc(t)}function up(t){return new Gc(t)}function hp(t){return new jc(t)}function cp(t){return new qc(t)}var pp={};t(pp,"inputLayer",(()=>fg)),t(pp,"elu",(()=>mg)),t(pp,"reLU",(()=>gg)),t(pp,"leakyReLU",(()=>yg)),t(pp,"prelu",(()=>bg)),t(pp,"softmax",(()=>wg)),t(pp,"thresholdedReLU",(()=>xg)),t(pp,"conv1d",(()=>vg)),t(pp,"conv2d",(()=>Sg)),t(pp,"conv2dTranspose",(()=>Ng)),t(pp,"conv3d",(()=>Tg)),t(pp,"conv3dTranspose",(()=>Eg)),t(pp,"separableConv2d",(()=>kg)),t(pp,"cropping2D",(()=>Ig)),t(pp,"upSampling2d",(()=>Ag)),t(pp,"depthwiseConv2d",(()=>$g)),t(pp,"activation",(()=>_g)),t(pp,"dense",(()=>Cg)),t(pp,"dropout",(()=>Rg)),t(pp,"spatialDropout1d",(()=>Dg)),t(pp,"flatten",(()=>Og)),t(pp,"repeatVector",(()=>Fg)),t(pp,"reshape",(()=>Mg)),t(pp,"permute",(()=>Lg)),t(pp,"embedding",(()=>zg)),t(pp,"add",(()=>Bg)),t(pp,"average",(()=>Ug)),t(pp,"concatenate",(()=>Pg)),t(pp,"maximum",(()=>Wg)),t(pp,"minimum",(()=>Vg)),t(pp,"multiply",(()=>Gg)),t(pp,"dot",(()=>jg)),t(pp,"batchNormalization",(()=>qg)),t(pp,"layerNormalization",(()=>Hg)),t(pp,"zeroPadding2d",(()=>Kg)),t(pp,"averagePooling1d",(()=>Xg)),t(pp,"avgPool1d",(()=>Zg)),t(pp,"avgPooling1d",(()=>Jg)),t(pp,"averagePooling2d",(()=>Qg)),t(pp,"avgPool2d",(()=>Yg)),t(pp,"avgPooling2d",(()=>ty)),t(pp,"averagePooling3d",(()=>ey)),t(pp,"avgPool3d",(()=>ny)),t(pp,"avgPooling3d",(()=>ry)),t(pp,"globalAveragePooling1d",(()=>sy)),t(pp,"globalAveragePooling2d",(()=>ay)),t(pp,"globalMaxPooling1d",(()=>iy)),t(pp,"globalMaxPooling2d",(()=>oy)),t(pp,"maxPooling1d",(()=>ly)),t(pp,"maxPooling2d",(()=>uy)),t(pp,"maxPooling3d",(()=>hy)),t(pp,"gru",(()=>cy)),t(pp,"gruCell",(()=>py)),t(pp,"lstm",(()=>dy)),t(pp,"lstmCell",(()=>fy)),t(pp,"simpleRNN",(()=>my)),t(pp,"simpleRNNCell",(()=>gy)),t(pp,"convLstm2d",(()=>yy)),t(pp,"convLstm2dCell",(()=>by)),t(pp,"rnn",(()=>wy)),t(pp,"stackedRNNCells",(()=>xy)),t(pp,"bidirectional",(()=>vy)),t(pp,"timeDistributed",(()=>Sy)),t(pp,"globalMaxPool1d",(()=>Ny)),t(pp,"globalMaxPool2d",(()=>Ty)),t(pp,"maxPool1d",(()=>Ey)),t(pp,"maxPool2d",(()=>ky)),t(pp,"gaussianNoise",(()=>Iy)),t(pp,"gaussianDropout",(()=>Ay)),t(pp,"alphaDropout",(()=>$y)),t(pp,"masking",(()=>_y)),t(pp,"Layer",(()=>_p)),t(pp,"RNN",(()=>om)),t(pp,"RNNCell",(()=>lm)),t(pp,"input",(()=>af));
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let dp=0;function fp(){return dp++}const mp={};function gp(t=""){return t in mp||(mp[t]=0),mp[t]+=1,t+mp[t].toString()}function yp(t){return Array.isArray(t)&&Array.isArray(t[0])}function bp(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function wp(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new mh(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function xp(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return t[0];throw new mh(`Expected exactly 1 Shape; got ${t.length}`)}return t}function vp(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class Sp{constructor(t,e="float32",n="Variable",r=!0,s=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=fp(),n=null==n?"Variable":n,this.originalName=ac(n),this.name=ic(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(t,e=!0,n,r){return fn.makeVariable(t,e,n,r)}(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Np(t){return t.map((t=>t.read()))}function Tp(t){t.forEach((t=>{t[0].write(t[1])}))}class Ep{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class kp{constructor(t,e,n,r,s,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=fp(),null!=a&&(this.originalName=ac(a),this.name=ic(this.originalName)),this.rank=e.length}}let Ip=0;class Ap{constructor(t,e){this.callArgs=e,this.id=Ip++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let $p=0;class _p extends Fs.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$p++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=Nh(t)+"_"+gp(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new fh(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new mh(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return vh(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return vh(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new dh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new dh(`Layer ${this.name} is not connected, no input to return.`);return vh(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new dh(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new dh(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return vh(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=Sh(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=Sh(this.inputSpec);if(t.length!==e.length)throw new mh(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],s=e[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new mh(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new mh(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new mh(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new mh(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const e in s.axes){const r=Number(e),a=s.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new mh(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const e=s.shape[t],a=r.shape[t];if(null!=e&&null!=a&&e!==a)throw new mh(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=Sh(t);let r=!0;for(const t of n)if(!(t instanceof kp)){r=!1;break}let s=!0;for(const t of n)if(t instanceof kp){s=!1;break}if(r===s)throw new mh("Arguments to apply() must be all SymbolicTensors or all Tensors");return sc(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of Sh(t))e.push(n.shape);this.build(vh(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let r=this.call(t,e);const s=Sh(r),a=[];for(let t of s)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(r=vh(a),null!=this.activityRegularizer)throw new gh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=Sh(t);const e=[];for(const n of t)e.push(n.shape);return vh(e)}(t),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new kp(a,n,this,Sh(t),e,this.name,r))):new kp(a,r,this,Sh(t),e,this.name),this.addInboundNode(t,s,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new gh("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new dh(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new dh(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new fh(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return vp(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Np(t?this.trainableWeights:this.weights)}setWeights(t){Ps((()=>{const e=this.weights;if(e.length!==t.length)throw new mh(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Np(e);for(let s=0;s<r.length;++s){const a=r[s],i=e[s],o=t[s];if(!Ut.arraysEqual(a.shape,o.shape))throw new mh(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Tp(n)}))}addWeight(t,e,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(t))throw new mh(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Zc("zeros"));const l=r.apply(e,n),u=new Sp(l,n,t,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=Sh(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,s,a,i=null){const o=Sh(t);e=Sh(e),n=Sh(n),r=Sh(r),s=bp(s),a=bp(a);const l=[],u=[],h=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),h.push(t.tensorIndex);new Ap({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:h,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Cp(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=Cp(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class Rp extends _p{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:gp("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new mh("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new mh("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new mh("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new kp(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ap({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new mh(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Dp(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new mh("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new Rp({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function Op(t){if(null==t)return;const e=[],n=[],r=[];for(const s in t){const a=t[s];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(s),r.push(t)}}if(e.length>0){const s=await Promise.all(e);for(let e=0;e<s.length;++e)t[n[e]]=s[e][0];Ws(r)}}function Fp(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var Mp,Lp;Rp.className="InputLayer",Fs.registerClass(Rp),(Lp=Mp||(Mp={}))[Lp.SILENT=0]="SILENT",Lp[Lp.VERBOSE=1]="VERBOSE";class zp{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class Bp{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class Up extends zp{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const r=e[t];if("number"==typeof r)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+r*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const s=Ps((()=>Hs(this.totals[t],li(r,n))));this.totals[t]=s,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:Ps((()=>{const n=li(za(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),Vs(e[t])})))}}class Pp extends zp{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];t.push(i.data()),e.push(r),n.push(a)}}const r=await Promise.all(t);for(let t=0;t<r.length;++t){this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=r[t][0]}}}class Wp extends zp{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||jl,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ut.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e,n){let r,s=null!=n?n():Ut.now();return(...a)=>{const i=null!=n?n():Ut.now();return i-s<e||(s=i,r=t(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await Op(n),r.push(this.yield(t,e,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await Op(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await Op(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await Op(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await Op(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ut.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await Op(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await Op(t),await this.trainEnd(t))}}function Vp(t,e){if(null==t&&(t={}),t instanceof zp)return[t];if(Array.isArray(t)&&t[0]instanceof zp)return t;return Sh(t).map((t=>new Wp(t,e)))}class Gp{constructor(){}static registerCallbackConstructor(t,e){Ut.assert(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),Gp.checkForDuplicate(e),null==Gp.constructors[t]&&(Gp.constructors[t]=[]),Gp.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Gp.constructors){Gp.constructors[+e].forEach((e=>{if(e===t)throw new mh("Duplicate callback constructor.")}))}}static clear(){Gp.constructors={}}static createCallbacks(t){const e=[];for(const n in Gp.constructors){const r=+n;t>=r&&e.push(...Gp.constructors[r])}return e.map((t=>new t))}}function jp(t,e,n,r,s,a,i,o,l){const u=new Pp,h=[new Up,...Gp.createCallbacks(e)];null!=t&&h.push(...t),h.push(u);const c=new Bp(h);return c.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:c,history:u}}function qp(t,e={},n=!1){return Ah(t,Fs.SerializationMap.getMap().classNameMap,e,"layer",n)}function Hp(t,e){return Ps((()=>{"float32"!==t.dtype&&(t=hs(t,"float32"));const n=hi(Tc(t),e,!0),r=Ja(n.shape,ph()),s=xo(gi(n,r));return za(t,s)}))}function Kp(t,e){return Ps((()=>yi(Tc(ui(e,t)),-1)))}function Xp(t,e){return Ps((()=>yi(qs(ui(e,t)),-1)))}function Zp(t,e){return Ps((()=>{const n=ui(t,e),r=Na(qs(t),ph(),Number.MAX_VALUE),s=qs(za(n,r));return li(100,yi(s,-1))}))}function Jp(t,e){return Ps((()=>{const n=Na(e,ph(),Number.MAX_VALUE),r=ai(Hs(1,n)),s=Na(t,ph(),Number.MAX_VALUE),a=ai(Hs(1,s));return yi(Tc(ui(r,a)),-1)}))}function Qp(t,e,n=!1){return Ps((()=>{if(n)e=fo(e);else{const t=hi(e,e.shape.length-1,!0);e=za(e,t)}return e=Na(e,ph(),1-ph()),Ci(hi(li(hs(t,"float32"),ai(e)),e.shape.length-1))}))}function Yp(t,e,n=!1){return Ps((()=>{const r=hs(Qa(function(t){const e=[uc(t.shape)];return pa(t,e)}(t)),"int32"),s=(e=Na(e,ph(),1-ph())).shape;return Qp(pa(Di(r,s[s.length-1]),s),e,n)}))}function td(t,e){return Ps((()=>{let n;return n=Na(e,ph(),1-ph()),n=ai(za(n,ui(1,n))),yi(function(t,e){if(!Ut.arraysEqual(t.shape,e.shape))throw new mh(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Ps((()=>{const n=to(e),r=Ci(qs(e));return Hs(ui(n,li(e,t)),ii(Ha(r)))}))}(t,n),-1)}))}function ed(t,e){return Ps((()=>{const n=Na(t,ph(),1),r=Na(e,ph(),1);return hi(li(t,ai(za(n,r))),-1)}))}function nd(t,e){return Ps((()=>{const n=Hp(t,-1),r=Hp(e,-1),s=li(n,r);return Ci(hi(s,-1))}))}Gp.constructors={};const rd={meanSquaredError:Kp,meanAbsoluteError:Xp,meanAbsolutePercentageError:Zp,meanSquaredLogarithmicError:Jp,squaredHinge:function(t,e){return Ps((()=>{const n=gi(0,ui(1,li(t,e)));return yi(Tc(n),-1)}))},hinge:function(t,e){return Ps((()=>{const n=gi(0,ui(1,li(t,e)));return yi(n,-1)}))},categoricalHinge:function(t,e){return Ps((()=>{const n=hi(li(t,e),-1),r=oi(li(ui(1,t),e),-1);return gi(0,Hs(1,ui(r,n)))}))},logcosh:function(t,e){return Ps((()=>{const n=Math.log(2),r=ui(e,t),s=ui(Hs(r,mo(li(-2,r))),n);return yi(s,-1)}))},categoricalCrossentropy:Qp,sparseCategoricalCrossentropy:Yp,binaryCrossentropy:td,kullbackLeiblerDivergence:ed,poisson:function(t,e){return Ps((()=>{const n=ai(Hs(ph(),e));return yi(ui(e,li(t,n)),-1)}))},cosineProximity:nd};function sd(t){if("string"==typeof t){if(t in rd)return rd[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new mh(e)}return t}function ad(t,e){return Ps((()=>{const n=li(.5,Mi(e)),r=dc(ti(e,n),t.dtype);return yi(Va(t,r),-1)}))}function id(t,e){return Ps((()=>dc(Va(Zs(t,-1),Zs(e,-1)),"float32")))}function od(t,e){return Ps((()=>hs(hi(pi(Va(t,1),Va(e,1))),"float32")))}function ld(t,e){return Ps((()=>{const n=od(t,e),r=function(t,e){return Ps((()=>hs(hi(pi(Va(t,0),Va(e,1))),"float32")))}(t,e),s=Hs(n,r);return hs(Ga(ti(s,0),za(n,s),0),"float32")}))}function ud(t,e){return td(t,e)}function hd(t,e){return t.rank===e.rank&&(t=So(t,[t.rank-1])),(e=Zs(e,-1)).dtype!==t.dtype&&(e=hs(e,t.dtype)),hs(Va(t,e),"float32")}const cd=Qp,pd=Yp,dd={binaryAccuracy:ad,categoricalAccuracy:id,precision:ld,categoricalCrossentropy:cd,sparseCategoricalCrossentropy:pd,mse:Kp,MSE:Kp,mae:Xp,MAE:Xp,mape:Zp,MAPE:Zp,cosine:nd};function fd(t){if("string"==typeof t&&t in dd)return dd[t];if("string"!=typeof t&&null!=t)return t;throw new mh(`Unknown metric ${t}`)}function md(t){if(wh(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(rd))if(rd[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(dd))if(dd[n]===t){e=n;break}return void 0!==e?e:t.name}}function gd(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!yd(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function yd(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!yd(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!yd(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function bd(t,e,n,r=console.log){const s=function(t){let e=!0;const n=[],r=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}r.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(s?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!s){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),wd(a,n,r),r("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)s?xd(o[t],n,r):vd(o[t],n,i,r),r((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;e=null!=t.collectedTrainableWeights?vp(t.collectedTrainableWeights):vp(t.trainableWeights);return e}(t),u=vp(t.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}function wd(t,e,n=console.log){let r="";for(let n=0;n<t.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=t[n],r=r.slice(0,e[n]),r+=" ".repeat(e[n]-r.length);n(r)}function xd(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}wd([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function vd(t,e,n,r){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,r=e.nodeIndices[t],s=e.tensorIndices[t];a.push(`${n}[${r}][${s}]`)}const i=t.name,o=t.getClassName(),l=0===a.length?"":a[0];wd([`${i} (${o})`,s,t.countParams().toString(),l],e,r);for(let t=1;t<a.length;++t)wd(["","","",a[t]],e,r)}function Sd(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function Nd(t,e){if(null===t)return null;if("string"==typeof t)return Th(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Sd(e,s,r)?n.push(r):n.push(Nd(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"==typeof r)e[n]=r;else{const t=Th(n);e[t]=Nd(r,t)}}return e}}function Td(t,e){if(null==t)return null;if("string"==typeof t)return Nh(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let s=0;s<r;++s){const r=t[s];Sd(e,s,r)?n.push(r):n.push(Td(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n],s=Nh(n);e[s]="name"!==n&&"className"!==n||"string"!=typeof r?Td(r,n):r}return e}}
/** @license See the LICENSE file. */class Ed{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Ed)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new mh(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return hs(e,t.dtype)}catch(n){throw new mh(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof kp){if(null==this.id2Value[t.id])throw new mh(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new mh(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof kp){if(null==this.id2Value[t.id])throw new mh(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new mh(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Ws(this.id2Mask)}}const kd={},Id={};function Ad(t,e,n,r){const s=null!=n&&n.training,a=Array.isArray(t),i=a?t:[t],o=i.map((t=>t.name)),l=[],u=e.names();for(const t of o)-1!==u.indexOf(t)?l.push(e.getValue(t)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const h=o.join(",")+"|"+e.names().join(",");let c,p;if(null==kd[h]){const t=function(t,e){Ut.assert(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const s=_d(t[0],e);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of t){const{sorted:t,recipientMap:i}=_d(a,e);for(const e of t)s.has(e.name)||(n.push(e),s.add(e.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:$d(r)}}(i,e);c=t.sorted,p=t.recipientCounts,kd[h]=c,Id[h]=p}c=kd[h],p={},s||Object.assign(p,Id[h]);const d=new Ed(e);for(let t=0;t<c.length;++t){if(null!=r){const t=Us().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const a=c[t],i=a.sourceLayer;if(i instanceof Rp)continue;const u=[],h=[],f=[];let m=!1;for(const t of a.inputs){const n=d.getValue(t),r=d.getMask(t);u.push(n),h.push(r),null!=r&&(m=!0),s||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==o.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=h[0]);const g=Sh(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,h));const b=Cd(a),w=Array.isArray(b)?b:[b];for(let t=0;t<w.length;++t){d.hasKey(w[t])||d.add(w[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(w[t].name);-1!==e&&(l[e]=g[t])}s||Ws(f)}return d.disposeMasks(),a?l:l[0]}function $d(t){const e={};for(const n in t)e[n]=t[n].size;return e}function _d(t,e){const n=new Set,r=[],s={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==s[e.name]&&(s[e.name]=new Set),s[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:r,recipientMap:s}}function Cd(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class Rd extends _p{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=gp(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],_h(this.inputs).length!==this.inputs.length)throw new mh(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);_h(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,r=t.tensorIndex;wh(0===n,"input layer has >1 nodes"),wh(0===r,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof Rp))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},s={},a={},i=[],o=(t,e,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=t.sourceLayer,s=t.nodeIndex,l=t.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new fh(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(u))return;this.containerNodes.add(Rd.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const h=u.inboundLayers.length;for(let t=0;t<h;t++){const r=u.inputTensors[t],s=u.inboundLayers[t],a=u.nodeIndices[t],i=u.tensorIndices[t];o(r,e,n,s,a,i)}for(e.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const t of this.outputs)o(t,l,u);const h=i.slice().reverse();for(const t of h){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==r[t.outboundLayer.id]?0:r[t.outboundLayer.id];a=Math.max(a,i),r[t.outboundLayer.id]=a,s[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let r=0;r<t.inboundLayers.length;r++){const s=t.inboundLayers[r],i=t.nodeIndices[r],o=s.inboundNodes[i],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,l),n[o.id]=o}}const c={};for(const t in e){const r=e[t];r in c||(c[r]=[]),c[r].push(n[t])}const p={};for(const t in r){const e=r[t];e in p||(p[e]=[]),p[e].push(s[t])}let d=Object.keys(p).map((t=>parseInt(t,10))).sort($h);this.layers=[];for(const t of d){const e=p[t];e.sort(((t,e)=>{const n=a[t.id],r=a[e.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Rd&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(c).map((t=>parseInt(t,10))).sort($h);const f=this.inputs.slice(),m=[];for(const t of d)for(const e of c[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new fh(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=c;const g=this.layers.map((t=>t.name));for(const t of g){const e=g.filter((e=>e===t)).length;if(1!==e)throw new fh(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ap({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new mh("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new mh(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const r in t){let a=r;if(null==n[r]){const t=r.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])s.push([n[a],t[r]]);else if(e)throw new mh(`Provided weight data has no target variable: ${r}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new mh(`${t.length} of ${r} weights are not set: ${t}`)}Tp(s)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.12.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Td(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Ps((()=>{t=Sh(t);const n=new Ed;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Ad(this.outputs,n,e)}))}computeMask(t,e){return Ps((()=>{let n;return t=Sh(t),n=null==e?bh(null,t.length):Sh(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=bp(t);if(e.length!==this.inputLayers.length)throw new mh(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const r=this.inputLayers[t],s=e[t];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort($h);if(r.length>1)for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const r=[];for(let e=0;e<t.inboundLayers.length;e++){const s=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=bp(e.computeOutputShape(vh(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],r=this.outputLayersTensorIndices[t],s=`${e.name}_${n}_${r}`;a.push(s)}for(let t=0;t<a.length;t++){const e=a[t];wh(e in n),s.push(n[e])}return vh(s)}runInternalGraph(t,e){null==e&&(e=bh(null,t.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=t[r],i=e[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort($h);for(const t of r){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=Sh(e.call(t,u)),l=Sh(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((t=>t[0])),i=a.map((t=>t[1])),null==u.mask&&(u.mask=i),o=Sh(e.call(r,u)),l=Sh(e.computeMask(r,i));if(e.activityRegularizer)throw new gh("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<s.length;++t){const e=s[t],r=o[t],a=l[t];n[e.id]=[r,a]}}}}const s=[],a=[],i=[];for(const t of this.outputs){wh(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,r]=n[t.id];i.push(e.shape),s.push(e),a.push(r)}return[s,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof Rd?1:0;for(let r=0;r<t.inboundNodes.length;r++){const s=Rd.nodeKey(t,r);this.containerNodes.has(s)&&(e[s]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new mh(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new mh("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new mh(`No such layer: ${t}`)}calculateLosses(){return Ps((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=Rd.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const r=t.getClassName(),s=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const r=t.inboundNodes[n],s=Rd.nodeKey(t,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const t=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=e[Rd.nodeKey(s,a)];null==l&&(l=0),t.push([s.name,l,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],s=this.inputLayersNodeIndices[t],a=Rd.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];r.push([n.name,i,o])}t.inputLayers=r;const s=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],r=this.outputLayersNodeIndices[t],a=Rd.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];s.push([n.name,i,o])}return t.outputLayers=s,t}static fromConfig(t,e,n={},r=!1){const s={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let r;for(const a of e){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(t,e);const h=s[o];if(h.inboundNodes.length<=l)return void i(t,e);const c=h.inboundNodes[l];n.push(c.outputTensors[u])}n.length>0&&t.apply(vh(n),r)}function l(t){const n=t.name,a=qp(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new mh(`Corrupted configuration, expected array for nodeData: ${t}`);i(a,t)}))}const u=e.name,h=e.layers;for(const t of h)l(t);for(;!Ch(a);)for(const t of h){const e=s[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const c=[],p=[],d=e.inputLayers;for(const t of d){const e=t[0],n=t[1],r=t[2];wh(e in s);const a=s[e].inboundNodes[n].outputTensors;c.push(a[r])}const f=e.outputLayers;for(const t of f){const e=t[0],n=t[1],r=t[2];wh(e in s);const a=s[e].inboundNodes[n].outputTensors;p.push(a[r])}return new t({inputs:c,outputs:p,name:u})}get stateful(){if(this._stateful)throw new mh("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Ps((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function Dd(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function Od(t,e){return Dd(t,e,"classWeight")}async function Fd(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Ps((()=>{if(1===t.shape.length)return xa(t);if(2===t.shape.length){if(t.shape[1]>1){return Zs(t,1)}if(1===t.shape[1])return pa(t,[t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Ws(e);const s=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);s.push(n[t])})),Eo(s,"float32")}return null}function Md(t,e){return li(t,e)}function Ld(t,e){let n,r;const s=e;n=s.xs,r=s.ys,Ut.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const a=zd("input",t.inputNames,n),i=zd("output",t.outputNames,r),o=a[0].shape[0];Ut.assert(a.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),Ut.assert(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<a.length;e++)Ut.assert(a[e].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${a[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let e=0;e<i.length;e++)Ut.assert(i[e].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${i[e].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:a,ys:i}}function zd(t,e,n){if(n instanceof Ge)return[n];if(Array.isArray(n))return Ut.assert(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const s of e){if(null==n[s])throw new mh(`The feature data generated by the dataset lacks the required ${t} key '${s}'.`);r.push(n[s])}return r}}async function Bd(t,e,n){const r=null!=n.batchesPerEpoch;if(Ut.assert(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Ut.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Ut.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Ut.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Ut.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Ud(n.validationData))Ut.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new gh("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);a=t.xs,i=t.ys}const o=t.makeTrainFunction(),l=t.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((t=>"val_"+t))):l.slice();const h=Vp(n.callbacks,n.yieldEvery),c=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=jp(h,c,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,s,u);p.setModel(t),t.history=d,await p.onTrainBegin(),t.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await e.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let h=0,c=0;for(r||(m=await e.iterator());!r||h<n.batchesPerEpoch;){const e=await m.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:s}=Ld(t,e.value),a={};a.batch=c,a.size=r[0].shape[0],await p.onBatchBegin(c,a);const i=[];if(null!=n.classWeight){const e=Od(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await Fd(s[t],null,e[t]))}const u=r.concat(s).concat(i),d=o(u);Ws(u);for(let t=0;t<l.length;++t){const e=l[t],n=d[t];a[e]=n,Vs(n)}await p.onBatchEnd(c,a),Fp(a),c++,h++}if(r?h>=n.batchesPerEpoch:e.done){if(s){let e;e=Ud(n.validationData)?Sh(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):Sh(t.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)u[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,t.stopTraining_)break}return await p.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function Ud(t){return"function"==typeof t.iterator}function Pd(t){Ut.assert(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function Wd(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>mc(t,e,n-e))):mc(t,e,n-e)}function Vd(t,e){return Ps((()=>null==t?null:Array.isArray(t)?t.map((t=>Vd(t,e))):Nc(t,"int32"===e.dtype?e:hs(e,"int32"))))}function Gd(t,e){const n=[];let r=0,s=null;for(;r<t;)s=r+e,s>=t&&(s=t),n.push([r,s]),r=s;return n}async function jd(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,u,h;t.isTraining=!0;try{const c=null==r.batchSize?32:r.batchSize;Pd(c);const p=!1,d=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,p,c);s=d[0],a=d[1],h=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new gh("validationData including sample weights is not supported yet."):new mh(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,c);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const t=Math.floor(s[0].shape[0]*(1-r.validationSplit)),e=s[0].shape[0];l=Wd(s,t,e),s=Wd(s,0,t),u=Wd(a,t,e),a=Wd(a,0,t),f=l.concat(u)}else null!=r.validationSteps&&(m=!0);const g=s.concat(a).concat(h);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),b=t.getDedupedMetricsNames();let w,x;m?(t.makeTestFunction(),w=t.testFunction,x=b.slice().concat(b.map((t=>"val_"+t)))):(w=null,f=[],x=b.slice());const v=Vp(r.callbacks,r.yieldEvery),S=await async function(t,e,n,r,s,a,i,o,l,u,h,c,p,d,f){null==s&&(s=32),null==a&&(a=1),null==h&&(h=!0),null==p&&(p=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==d))throw new mh("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=t.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=pc(0,g)),null==i&&(i=1);const{callbackList:b,history:w}=jp(o,i,a,p,g,d,s,m,c);b.setModel(t),t.history=w,await b.onTrainBegin(),t.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};if(null!=d)throw new gh("stepsPerEpoch mode is not implemented yet.");{if("batch"===h)throw new gh("batch shuffling is not implemneted yet");h&&Ut.shuffle(y);const i=Eo(y),o=Gd(g,s);for(let h=0;h<o.length;++h){const c={};if(await b.onBatchBegin(h,c),Ps((()=>{const p=o[h][0],d=o[h][1],f=mc(i,p,d-p);c.batch=h,c.size=d-p;const g=Vd(n,f),y=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];c[e]=n,Vs(n)}if(h===o.length-1&&m){const e=t.testLoop(l,u,s);for(let t=0;t<r.length;++t){const n=r[t],s=e[t];Vs(s),a["val_"+n]=s}}})),await b.onBatchEnd(h,c),Fp(c),t.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),t.stopTraining_)break}return await b.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,b,c,r.epochs,r.verbose,v,w,f,r.shuffle,x,r.initialEpoch,null,null);return S}finally{t.isTraining=!1,Hd(s,e),Hd(a,n),Hd(l,i),Hd(u,o),null!=h&&Ws(h)}}function qd(t){const e=[];t instanceof Ge&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(fc(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Hd(t,e){if(null==t)return;const n=[];if(e instanceof Ge)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const r=e[t];n.push(r.id)}const r=[];if(t instanceof Ge)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const e in t){const s=t[e];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function Kd(t){return Array.isArray(t)}function Xd(t){return!function(t){return t instanceof Ge}(t)&&!Kd(t)}function Zd(t,e,n,r=!0,s=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Kd(t)&&t.length>0)e=!0;else if(Xd(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new mh(`Error when checking model ${s} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(Xd(t)){a=[];for(const n of e){if(null==t[n])throw new mh(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if(Kd(t)){if(t.length!==e.length)throw new mh(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(e.length>1)throw new mh(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=qd(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new mh(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${i.shape}`);for(let e=0;e<n[t].length;++e){if(0===e&&!r)continue;const a=i.shape[e],o=n[t][e];if(null!=o&&o>=0&&a!==o)throw new mh(`${s} expected a batch of elements where each example has shape [${n[t].slice(1,n[t].length)}] (i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Jd(t,e,n,r=!0,s=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new mh(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new mh(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new mh(`Error when checking ${s}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l!==o)throw new mh(`Error when checking ${s}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Qd extends Rd{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new mh("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");bd(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>Vl.adagrad(.01),Adadelta:()=>Vl.adadelta(1,.95,ph()),Adam:()=>Vl.adam(.001,.9,.999,ph()),Adamax:()=>Vl.adamax(.002,.9,.999,ph(),0),RMSProp:()=>Vl.rmsprop(.001,.9,0,ph()),SGD:()=>Vl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new mh(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Ol))throw new mh("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new mh(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>sd(t)))}else{const n=sd(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new mh(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(sd(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],sc("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),s=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};sc("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,a;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let s;1===e[e.length-1]||this.lossFunctions[t]===td?-1!==["accuracy","acc"].indexOf(i)?r=ad:-1!==["crossentropy","ce"].indexOf(i)&&(r=ud):this.lossFunctions[t]===Yp?-1!==["accuracy","acc"].indexOf(i)?r=hd:-1!==["crossentropy","ce"].indexOf(i)&&(r=pd):-1!==["accuracy","acc"].indexOf(i)?r=id:-1!==["crossentropy","ce"].indexOf(i)&&(r=cd),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const t=fd(i);a=t,n=""+md(i)}let e;sc(n,(()=>{e=a})),s(t,n,e)}})(r[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;Pd(r);const s=this.standardizeUserDataXY(t,e,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return vh(this.testLoop(i,a,r,n.verbose,n.steps))}finally{Hd(s[0],t),Hd(s[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,s=t.testFunction;let a=[];if(n.verbose>0)throw new gh("Verbose mode is not implemented yet.");Ut.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof e.next?e:await e.iterator();let o=0,l=0;for(;!r||l<n.batches;){const e=await i.next();if(a=Ps((()=>{if(e.value){const{xs:n,ys:r}=Ld(t,e.value),i=n.concat(r),u=Ps((()=>s(i)));if(Ws(i),0===l)for(let t=0;t<u.length;++t)a.push(so(0));const h=i[0].shape[0];for(let t=0;t<u.length;++t){const e=u[t],n=a[t];a[t]=Ps((()=>Hs(a[t],li(h,e)))),l>0&&Ws(n)}Ws(u),o+=h,++l}return a})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<a.length;++t){const e=a[t];a[t]=za(a[t],o),Ws(e)}return vh(a)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let s;if(null!=n){if(s=null,null!=e)throw new mh(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new mh(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return s}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new mh("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],s=this.retrieveSymbolicTensors(r),a=new Ed;if(t instanceof Ge&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new mh(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)a.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new mh(`No value is provided for the model's input ${e.name}`);a.add(e,n)}const i=Ad(s,a);return n?i:i[0]}retrieveSymbolicTensors(t){const e=bh(null,t.length);let n=t.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((t=>t.name));for(let r=0;r<t.length;++r){const i=a.indexOf(t[r]);if(-1!==i&&(e[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new mh(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return Ps((()=>{const r=this.checkNumSamples(t);if(n)throw new gh("Verbose predictLoop() is not implemented yet.");const s=Gd(r,e),a=this.outputs.map((t=>[]));for(let e=0;e<s.length;++e){Ps((()=>{const n=s[e][0],r=s[e][1],a=Wd(t,n,r),i=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)i.push({key:this.inputs[t],value:a[t]});else i.push({key:this.inputs[0],value:a});const o=new Ed(i);return Ad(this.outputs,o)})).forEach(((t,e)=>a[e].push(t)))}return vh(a.map((t=>Ta(t,0))))}))}predict(t,e={}){const n=qd(t);Jd(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return Pd(r),this.predictLoop(n,r)}finally{Hd(n,t)}}predictOnBatch(t){Jd(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new fh("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Yp?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(function(t,e,n){const r=_h(t.map((t=>t.shape[0])));r.sort();const s=_h(e.map((t=>t.shape[0])));if(s.sort(),r.length>1)throw new mh(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(s.length>1)throw new mh(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&s.length>0&&!Ut.arraysEqual(r,s))throw new mh(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(t=Zd(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Zd(e,this.feedOutputNames,s,!1,"target")),function(t,e,n){const r=[Kp,td,Qp];for(let s=0;s<t.length;++s){const a=t[s],i=e[s],o=n[s];if(null!=i){if(i===Qp&&1===a.shape[a.shape.length-1])throw new mh(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],s=e[n];if(null!=s&&r!==s)throw new mh(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!=0)throw new mh(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const t=Od(r,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await Fd(o[e],null,t[e]))}return[i,o,l]}testLoop(t,e,n,r=0,s){return Ps((()=>{const a=this.checkNumSamples(e,n,s,"steps"),i=[];if(r>0)throw new gh("Verbose mode is not implemented yet.");if(null!=s)throw new gh("steps mode in testLoop() is not implemented yet");{const r=Gd(a,n),s=Eo(pc(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=mc(s,a,o-a),u=Vd(e,l),h=t(u);if(0===n)for(let t=0;t<h.length;++t)i.push(so(0));for(let t=0;t<h.length;++t){const e=h[t];i[t]=Hs(i[t],li(o-a,e))}}for(let t=0;t<i.length;++t)i[t]=za(i[t],a)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let s=r;if(xh(t,r)>1){s+=`_${xh(t.slice(0,n),r)}`}e.push(s)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Ed(t),o=Ad(this.outputs,i,{training:!0});let l;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(r[t],o[t]);null!=s[t]&&(n=Md(n,s[t]));const a=yi(n);e.push(a),l=0===t?n:Hs(l,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],s=this.metricsTensors[t][1];n=yi(e(r[s],o[s]))}Vs(n),a.push(n)}return l=yi(l),this.calculateLosses().forEach((t=>{l=Hs(l,t)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=t=>Ps((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let t=0;t<this.inputs.length;++t)a.push({key:this.inputs[t],value:r[t]});const i=new Ed(a),o=Ad(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],a=yi(r(s[t],o[t]));n=0===t?a:Hs(n,a),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],a=yi(n(s[r],o[r]));e.push(a)}return e}))}async fit(t,e,n={}){return jd(this,t,e,n)}async fitDataset(t,e){return Bd(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const t of a){const e=await t.data();i.push(e[0])}return Ws(a),vh(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let t=0;t<r.length;++t)n&&!r[t].trainable||e.push({name:r[t].originalName,tensor:s[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Us().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Us().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Nh(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>Nh(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=Nh(n[r])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Nh(md(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>Nh(md(t))));{const t={};for(const e in this.metrics)t[e]=Nh(md(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=qp(Nd(t.optimizer_config));let n,r;if("string"==typeof t.loss)n=Th(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>Th(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=Th(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>Th(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=Th(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"==typeof t){const e=h.getSaveHandlers(t);if(0===e.length)throw new mh(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new mh(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new mh("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await h.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.12.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:s}=await h.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...s),n.data=h.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;gd(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){gd(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Qd.className="Model",Fs.registerClass(Qd);class Yd extends Qd{}async function tf(t,e){if(null==e&&(e={}),"string"==typeof t){const n=h.getLoadHandlers(t,e);if(0===n.length)n.push(h.browserHTTPRequest(t,e));else if(n.length>1)throw new mh(`Found more than one (${n.length}) load handlers for URL '${t}'`);t=n[0]}return async function(t,e,n){null==n&&(n={});if(null==t.load)throw new mh("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await t.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=qp(Nd(s),e,i),l=r.trainingConfig;null!=l&&o.loadTrainingConfig(l);null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata);if(null!=r.weightData){if(null==r.weightSpecs)throw new mh("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:t,optimizerWeights:e}=function(t,e){const n=h.decodeWeights(t,e),r={},s=[];return e.forEach((t=>{"optimizer"===t.group?s.push({name:t.name,tensor:n[t.name]}):r[t.name]=n[t.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(t,a),null!=o.optimizer&&e.length>0&&await o.optimizer.setWeights(e),Ws(t),Ws(e.map((t=>t.tensor)))}return o}(t,void 0,e)}Yd.className="Functional",Fs.registerClass(Yd);class ef extends Qd{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:gp("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new mh(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof ef||t instanceof Qd;let n;if(e){if(n=t,1!==n.outputs.length)throw new mh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new mh("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new mh("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=Dp({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new mh(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new mh("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=Cp(this.outputs[0])}this.inboundNodes=[],new Ap({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:bh(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(xp(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Qd({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new fh("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new fh("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new fh("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new fh("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let s,a={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new mh("Legacy serialization format not supported yet.");s=e}else Ut.assert(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=e.layers,delete e.layers,a=e;const i=new t(a);if(!(i instanceof ef))throw new gh(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const t of s){const e=qp(t,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(t){if(null==this.model)throw new mh("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new mh("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}function nf(t){return new Qd(t)}function rf(t){return new ef(t)}function sf(t,e){return null==e&&(e={}),tf(t,e)}function af(t){return Dp(t)}ef.className="Sequential",Fs.registerClass(ef);class of extends Fs.Serializable{getConfig(){return{}}}class lf extends of{apply(t,e=1){return function(t,e=1){if(1!==e)throw new gh(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return qa(t)}(t,e)}}lf.className="elu",Fs.registerClass(lf);class uf extends of{apply(t){return ao(t)}}uf.className="selu",Fs.registerClass(uf);class hf extends of{apply(t){return to(t)}}hf.className="relu",Fs.registerClass(hf);class cf extends of{apply(t){return Ps((()=>wi(6,to(t))))}}cf.className="relu6",Fs.registerClass(cf);class pf extends of{apply(t){return t}}pf.className="linear",Fs.registerClass(pf);class df extends of{apply(t){return oo(t)}}df.className="sigmoid",Fs.registerClass(df);class ff extends of{apply(t){return e=t,Ps((()=>{const t=Hs(.5,li(.2,e));return Na(t,0,1)}));var e}}ff.className="hardSigmoid",Fs.registerClass(ff);class mf extends of{apply(t){return mo(t)}}mf.className="softplus",Fs.registerClass(mf);class gf extends of{apply(t){return e=t,Ps((()=>za(e,Hs(qs(e),1))));var e}}gf.className="softsign",Fs.registerClass(gf);class yf extends of{apply(t){return To(t)}}yf.className="tanh",Fs.registerClass(yf);class bf extends of{apply(t,e=-1){return fo(t,e)}}bf.className="softmax",Fs.registerClass(bf);class wf extends of{apply(t,e=-1){return ci(t,e)}}wf.className="logSoftmax",Fs.registerClass(wf);class xf extends of{apply(t,e=1){return Ps((()=>li(oo(li(t,e)),t)))}}xf.className="swish",Fs.registerClass(xf);class vf extends of{apply(t){return Ps((()=>li(t,To(mo(t)))))}}function Sf(t){return t.getClassName()}function Nf(t,e={}){return Ah(t,Fs.SerializationMap.getMap().classNameMap,e,"activation")}function Tf(t){if(null==t){const t={className:"linear",config:{}};return Nf(t)}if("string"==typeof t){const e={};return e.className=t,e.config={},Nf(e)}return t instanceof of?t:Nf(t)}function Ef(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}vf.className="mish",Fs.registerClass(vf);class kf extends Fs.Serializable{}class If extends kf{constructor(t){super(),Ef(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Ps((()=>{let e=Oi([1]);return this.hasL1&&(e=Hs(e,hi(li(this.l1,qs(t))))),this.hasL2&&(e=Hs(e,hi(li(this.l2,Tc(t))))),pa(e,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}If.className="L1L2",Fs.registerClass(If);const Af={l1l2:"L1L2"};function $f(t){return kh(t)}function _f(t,e={}){return Ah(t,Fs.SerializationMap.getMap().classNameMap,e,"regularizer")}function Cf(t){if(null==t)return null;if("string"==typeof t){return _f({className:t in Af?Af[t]:t,config:{}})}return t instanceof kf?t:_f(t)}class Rf extends _p{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=wp(t);let n=to(t);return null!=this.maxValue&&(n=Na(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Rf.className="ReLU",Fs.registerClass(Rf);class Df extends _p{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=wp(t);return ri(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Df.className="LeakyReLU",Fs.registerClass(Df);class Of extends _p{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Zc(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Cf(t.alphaRegularizer),this.alphaConstraint=qh(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new mh(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=xp(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Ep({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=wp(t),Bi(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Xc(this.alphaInitializer),alphaRegularizer:$f(this.alphaRegularizer),alphaConstraint:Gh(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Of.className="PReLU",Fs.registerClass(Of);class Ff extends _p{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new gh(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=wp(t);return qa(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ff.className="ELU",Fs.registerClass(Ff);class Mf extends _p{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=wp(t);return li(n,hs(ti(n,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Mf.className="ThresholdedReLU",Fs.registerClass(Mf);class Lf extends _p{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new bf).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=wp(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function zf(t,e,n){if("number"==typeof t)return bh(t,e);if(t.length!==e)throw new mh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let s=0;s<e;++s){const a=t[s];if((r=a)!==parseInt(r.toString(),10))throw new mh(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var r}function Bf(t,e,n,r,s=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Uf(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+cc([n-e,0]);else{if("same"!==r)throw new mh(`Unsupport padding mode: ${r}.`);t*=e}return t}function Pf(t,e){return Ps((()=>(tc(e),"channelsFirst"===e?_o(t,[0,2,3,1]):t)))}function Wf(t,e){return Ps((()=>(tc(e),"channelsFirst"===e?_o(t,[0,2,3,4,1]):t)))}function Vf(t,e,n,r=1,s="valid",a,i=1){return Ps((()=>{if(null==a&&(a="channelsLast"),tc(a),3!==t.shape.length)throw new mh(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new mh(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new mh(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===a&&(t=_o(t,[0,2,1])),"causal"===s)throw new gh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=_a(t,e,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=kc(o,n)),o}))}function Gf(t,e,n,r=[1,1],s="valid",a,i,o=null){return Ps((()=>{if(null==a&&(a="channelsLast"),tc(a),3!==t.rank&&4!==t.rank)throw new mh(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new mh(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let l=Pf(t,a);if("causal"===s)throw new gh("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Mo.conv2d({x:l,filter:e,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=_o(l,[0,3,1,2])),l}))}function jf(t,e,n,r=[1,1,1],s="valid",a,i){return Ps((()=>{if(null==a&&(a="channelsLast"),tc(a),4!==t.rank&&5!==t.rank)throw new mh(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new mh(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=Wf(t,a);if("causal"===s)throw new gh("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Da(o,e,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=kc(o,n)),"channelsFirst"===a&&(o=_o(o,[0,4,1,2,3])),o}))}Lf.className="Softmax",Fs.registerClass(Lf);class qf extends _p{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",qf.verifyArgs(e),this.rank=t,Oh(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new gh(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=zf(e.kernelSize,t,"kernelSize"),this.strides=zf(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,ec(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,tc(this.dataFormat),this.activation=Tf(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Zc(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=qh(e.biasConstraint),this.biasRegularizer=Cf(e.biasRegularizer),this.activityRegularizer=Cf(e.activityRegularizer),this.dilationRate=zf(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new mh(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new mh(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new mh(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(wh("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Dh(t.kernelSize,"number",1,3))throw new mh(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Sf(this.activation),useBias:this.useBias,biasInitializer:Xc(this.biasInitializer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),biasConstraint:Gh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class Hf extends qf{constructor(t,e){super(t,e),this.kernel=null,Hf.verifyArgs(e),this.filters=e.filters,Oh(this.filters,"filters"),this.kernelInitializer=Zc(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=qh(e.kernelConstraint),this.kernelRegularizer=Cf(e.kernelRegularizer)}build(t){t=xp(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new mh(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Ps((()=>{let e;t=wp(t);const n=null==this.bias?null:this.bias.read(),r=Mh(this.activation.getClassName());if(null!=r&&2===this.rank)e=Gf(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=Vf(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=Gf(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new gh("convolutions greater than 3D are not implemented yet.");e=jf(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=xp(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const r=Bf(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(r)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Xc(this.kernelInitializer),kernelRegularizer:$f(this.kernelRegularizer),kernelConstraint:Gh(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new mh(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class Kf extends Hf{constructor(t){super(2,t),Kf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Dh(t.kernelSize,"number",1,2))throw new mh(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}Kf.className="Conv2D",Fs.registerClass(Kf);class Xf extends Hf{constructor(t){super(3,t),Xf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new mh(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}Xf.className="Conv3D",Fs.registerClass(Xf);class Zf extends Kf{constructor(t){if(super(t),this.inputSpec=[new Ep({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new mh(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=xp(t)).length)throw new mh("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new mh("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ep({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return Ps((()=>{let e=wp(t);if(4!==e.shape.length)throw new mh(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],c=this.strides[1],p=[r,Uf(i,h,l,this.padding),Uf(o,c,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=_o(e,[0,2,3,1]));let d=Ra(e,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=_o(d,[0,3,1,2])),null!=this.bias&&(d=kc(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(t){const e=(t=xp(t)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[r]=Uf(e[r],o,a,this.padding),e[s]=Uf(e[s],l,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Zf.className="Conv2DTranspose",Fs.registerClass(Zf);class Jf extends Xf{constructor(t){if(super(t),this.inputSpec=[new Ep({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new mh(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=xp(t)).length)throw new mh("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new mh("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ep({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return Ps((()=>{let e=wp(t);if(5!==e.shape.length)throw new mh(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],h=this.kernelSize[0],c=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Uf(o,d,h,this.padding),Uf(l,f,c,this.padding),Uf(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=_o(e,[0,2,3,4,1]));let y=Fa(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=_o(y,[0,4,1,2,3])),null!==this.bias&&(y=kc(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(t){const e=(t=xp(t)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],h=this.strides[1],c=this.strides[2];return e[n]=this.filters,e[r]=Uf(e[r],u,i,this.padding),e[s]=Uf(e[s],h,o,this.padding),e[a]=Uf(e[a],c,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Jf.className="Conv3DTranspose",Fs.registerClass(Jf);class Qf extends Hf{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new mh("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new mh("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new mh(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Zc(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Cf(e.depthwiseRegularizer),this.depthwiseConstraint=qh(e.depthwiseConstraint),this.pointwiseInitializer=Zc(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Cf(e.pointwiseRegularizer),this.pointwiseConstraint=qh(e.pointwiseConstraint)}build(t){if((t=xp(t)).length<this.rank+2)throw new mh(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new mh(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let t=0;t<this.rank;++t)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ep({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Ps((()=>{let e;if(t=wp(t),1===this.rank)throw new gh("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=_o(t,[0,2,3,1])),e=io(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=kc(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=_o(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Xc(this.depthwiseInitializer),t.pointwiseInitializer=Xc(this.pointwiseInitializer),t.depthwiseRegularizer=$f(this.depthwiseRegularizer),t.pointwiseRegularizer=$f(this.pointwiseRegularizer),t.depthwiseConstraint=Gh(this.depthwiseConstraint),t.pointwiseConstraint=Gh(this.pointwiseConstraint),t}}Qf.className="SeparableConv";class Yf extends Qf{constructor(t){super(2,t)}}Yf.className="SeparableConv2D",Fs.registerClass(Yf);class tm extends Hf{constructor(t){super(1,t),tm.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Dh(t.kernelSize,"number",1,1))throw new mh(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}tm.className="Conv1D",Fs.registerClass(tm);class em extends _p{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Ps((()=>{if(t=wp(t),"channelsLast"===this.dataFormat){const e=yc(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return yc(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=yc(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return yc(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}em.className="Cropping2D",Fs.registerClass(em);class nm extends _p{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tc(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Rh(Xh,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return Ps((()=>{let e=wp(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=_o(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Rl.resizeNearestNeighbor(e,[t,r]):Rl.resizeBilinear(e,[t,r]);return _o(s,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Rl.resizeNearestNeighbor(e,[t,r]):Rl.resizeBilinear(e,[t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}nm.className="UpSampling2D",Fs.registerClass(nm);class rm extends qf{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Zc(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=qh(t.depthwiseConstraint),this.depthwiseRegularizer=Cf(t.depthwiseRegularizer)}build(t){if((t=xp(t)).length<4)throw new mh(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new mh(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Ps((()=>{let e=function(t,e,n=[1,1],r="valid",s,a){return Ps((()=>{null==s&&(s="channelsLast"),tc(s);let i=Pf(t,s);if(4!==t.rank)throw new mh(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new mh(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=Ma(i,e,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=_o(i,[0,3,1,2])),i}))}(t=wp(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=kc(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=xp(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,s=Bf(e,this.kernelSize[0],this.padding,this.strides[0]),a=Bf(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,s,a]:[t[0],s,a,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Xc(this.depthwiseInitializer),t.depthwiseRegularizer=$f(this.depthwiseRegularizer),t.depthwiseConstraint=Gh(this.depthwiseRegularizer),t}}rm.className="DepthwiseConv2D",Fs.registerClass(rm);var sm={};function am(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new mh("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function s(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=s(e),constants:n=s(n)}}function im(t,e,n,r=!1,s,a,i=!1,o=!1){return Ps((()=>{const l=e.shape.length;if(l<3)throw new mh(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(pc(2,l));if(e=_o(e,u),null!=a)throw new gh("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=hs(hs(s,"bool"),"float32")).rank===l-1&&(s=Ka(s,-1)),s=_o(s,u)),r&&(e=no(e,0),null!=s&&(s=no(s,0)));const h=[];let c,p=n;const d=e.shape[0],f=Ao(e);let m,g;null!=s&&(m=Ao(s));for(let e=0;e<d;++e){const n=f[e],r=Ps((()=>t(n,p)));if(null==s)c=r[0],p=r[1];else{const t=Ps((()=>{const t=m[e],n=ui(Mi(t),t);return{output:Hs(li(r[0],t),li(p[0],n)),newStates:p.map(((e,s)=>Hs(li(r[1][s],t),li(e,n))))}}));c=t.output,p=t.newStates}o&&h.push(c)}if(o){g=No(h,1)}return[c,g,p]}))}t(sm,"ConvLSTM2DCell",(()=>wm),(t=>wm=t)),t(sm,"ConvLSTM2D",(()=>xm),(t=>xm=t));class om extends _p{constructor(t){let e;if(super(t),null==t.cell)throw new mh("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new mm({cells:t.cell}):t.cell,null==e.stateSize)throw new mh("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Ep({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return pc(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){yp(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return Ps((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new gh("Constants support is not implemented in RNN yet.");yp(t)&&(t=t[0]);const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Ep({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Ut.arraysEqual(this.stateSpec.map((t=>t.shape[t.shape.length-1])),s))throw new mh(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((t=>new Ep({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Ps((()=>{if(!this.stateful)throw new dh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new mh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Oi([n,t]))):this.states_=[Oi([n,this.cell.stateSize])];else if(null==t)Ws(this.states_),null!=this.keptStates&&(Ws(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>Oi([n,t]))):this.states_[0]=Oi([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new mh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):Ws(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,a=[n,s];if(!Ut.arraysEqual(r.shape,a))throw new mh(`State ${e} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>Vs(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=am(t,n,r,this.numConstants);t=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Ep({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof kp){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Ps((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let s=null==e?null:e.initialState;t=wp(t),null==s&&(s=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new mh(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=im(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],h=o[2];this.stateful&&this.resetStates(h,r);const c=this.returnSequences?u:l;return this.returnState?[c].concat(h):c}))}getInitialState(t){return Ps((()=>{let e=Oi(t.shape);return e=hi(e,[1,2]),e=fc(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?xc(e,[1,t]):e)):this.cell.stateSize>1?[xc(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===om.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=qp(e.cell,n);return new t(Object.assign(e,{cell:r}))}}om.className="RNN",Fs.registerClass(om);class lm extends _p{}class um extends lm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Oh(this.units,"units"),this.activation=Tf(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Zc(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zc(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zc(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cf(t.kernelRegularizer),this.recurrentRegularizer=Cf(t.recurrentRegularizer),this.biasRegularizer=Cf(t.biasRegularizer),this.kernelConstraint=qh(t.kernelConstraint),this.recurrentConstraint=qh(t.recurrentConstraint),this.biasConstraint=qh(t.biasConstraint),this.dropout=hc([1,cc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=hc([1,cc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=xp(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Ps((()=>{if(2!==t.length)throw new mh(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gm({ones:()=>Mi(t),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gm({ones:()=>Mi(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Sc(null!=a?li(t,a):t,this.kernel.read()),null!=this.bias&&(s=kc(s,this.bias.read())),null!=i&&(n=li(n,i));let o=Hs(s,Sc(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Sf(this.activation),useBias:this.useBias,kernelInitializer:Xc(this.kernelInitializer),recurrentInitializer:Xc(this.recurrentInitializer),biasInitializer:Xc(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:Gh(this.kernelConstraint),recurrentConstraint:Gh(this.recurrentConstraint),biasConstraint:Gh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}um.className="SimpleRNNCell",Fs.registerClass(um);class hm extends om{constructor(t){t.cell=new um(t),super(t)}call(t,e){return Ps((()=>{null!=this.cell.dropoutMask&&(Ws(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ws(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return new t(e)}}hm.className="SimpleRNN",Fs.registerClass(hm);class cm extends lm{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new mh("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Oh(this.units,"units"),this.activation=Tf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Tf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Zc(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zc(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zc(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Cf(t.kernelRegularizer),this.recurrentRegularizer=Cf(t.recurrentRegularizer),this.biasRegularizer=Cf(t.biasRegularizer),this.kernelConstraint=qh(t.kernelConstraint),this.recurrentConstraint=qh(t.recurrentConstraint),this.biasConstraint=qh(t.biasConstraint),this.dropout=hc([1,cc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=hc([1,cc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=xp(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Ps((()=>{if(2!==t.length)throw new mh(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gm({ones:()=>Mi(t),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gm({ones:()=>Mi(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(t=li(t,s[0]));let u=Sc(t,this.kernel.read());this.useBias&&(u=kc(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=li(r,a[0]));const h=this.recurrentKernel.read(),[c,p]=bo(h,[2*this.units,this.units],h.rank-1),d=Sc(r,c),[f,m,g]=bo(u,3,u.rank-1),[y,b]=bo(d,2,d.rank-1);i=this.recurrentActivation.apply(Hs(f,y)),o=this.recurrentActivation.apply(Hs(m,b));const w=Sc(li(o,r),p);l=this.activation.apply(Hs(g,w));const x=Hs(li(i,r),li(Hs(1,Ci(i)),l));return[x,x]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Sf(this.activation),recurrentActivation:Sf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xc(this.kernelInitializer),recurrentInitializer:Xc(this.recurrentInitializer),biasInitializer:Xc(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:Gh(this.kernelConstraint),recurrentConstraint:Gh(this.recurrentConstraint),biasConstraint:Gh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}cm.className="GRUCell",Fs.registerClass(cm);class pm extends om{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new cm(t),super(t)}call(t,e){return Ps((()=>{null!=this.cell.dropoutMask&&(Ws(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ws(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}pm.className="GRU",Fs.registerClass(pm);class dm extends lm{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Oh(this.units,"units"),this.activation=Tf(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Tf(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Zc(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Zc(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Zc(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Cf(t.kernelRegularizer),this.recurrentRegularizer=Cf(t.recurrentRegularizer),this.biasRegularizer=Cf(t.biasRegularizer),this.kernelConstraint=qh(t.kernelConstraint),this.recurrentConstraint=qh(t.recurrentConstraint),this.biasConstraint=qh(t.biasConstraint),this.dropout=hc([1,cc([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=hc([1,cc([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=xp(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends Cc{apply(e,r){const s=t.apply([n]),a=(new Dc).apply([n]),i=t.apply([2*n]);return wc(wc(s,a),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Ps((()=>{const n=null!=e.training&&e.training;if(3!==t.length)throw new mh(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const s=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gm({ones:()=>Mi(t),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gm({ones:()=>Mi(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,h;0<this.dropout&&this.dropout<1&&(t=li(t,a[0]));let c=Sc(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=li(r,i[0])),c=Hs(c,Sc(r,this.recurrentKernel.read())),this.useBias&&(c=kc(c,this.bias.read()));const[p,d,f,m]=bo(c,4,c.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=Hs(li(l,s),li(o,this.activation.apply(f))),h=this.recurrentActivation.apply(m);const g=li(h,this.activation.apply(u));return[g,g,u]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Sf(this.activation),recurrentActivation:Sf(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Xc(this.kernelInitializer),recurrentInitializer:Xc(this.recurrentInitializer),biasInitializer:Xc(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$f(this.kernelRegularizer),recurrentRegularizer:$f(this.recurrentRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:Gh(this.kernelConstraint),recurrentConstraint:Gh(this.recurrentConstraint),biasConstraint:Gh(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}dm.className="LSTMCell",Fs.registerClass(dm);class fm extends om{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new dm(t),super(t)}call(t,e){return Ps((()=>{null!=this.cell.dropoutMask&&(Ws(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ws(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}fm.className="LSTM",Fs.registerClass(fm);class mm extends lm{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Ps((()=>{let n=t.slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),s.push(a.slice(1))}n=[];for(const t of s.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;yp(t)&&(t=t[0]),this.cells.forEach(((n,r)=>{sc(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const t of e.cells)r.push(qp(t,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Np(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,s=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],s[t]])}Tp(e)}}function gm(t){const{ones:e,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=t,i=()=>null!=a?a(e(),n):Ic(e(),n),o=()=>Ac(i,e,r);if(!s||s<=1)return Vs(o().clone());return Array(s).fill(void 0).map(o).map((t=>Vs(t.clone())))}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */mm.className="StackedRNNCells",Fs.registerClass(mm);var ym=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n};class bm extends om{constructor(t){if(t.unroll)throw new gh("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new gh("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Ep({ndim:5})]}call(t,e){return Ps((()=>{if(null!=this.cell.dropoutMask&&(Ws(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Ws(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new mh("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,s=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:s})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return Ps((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),s=Oi([r[0],...r.slice(2)]);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){Ps((()=>{if(!this.stateful)throw new dh("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new mh("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Oi(s))):this.states_=[Oi(s)];else if(null==t)Ws(this.states_),null!=this.keptStates&&(Ws(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Oi(s))):this.states_[0]=Oi(s);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new mh(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):Ws(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=s;if(!Ut.arraysEqual(n.shape,r))throw new mh(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>Vs(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],h=Bf(l,r[0],s,a[0],i[0]),c=Bf(u,r[1],s,a[1],i[1]);return[...t.slice(0,2),...o?[n,h,c]:[h,c,n]]}}bm.className="ConvRNN2D";class wm extends dm{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,Oh(this.filters,"filters"),this.kernelSize=zf(n,2,"kernelSize"),this.kernelSize.forEach((t=>Oh(t,"kernelSize"))),this.strides=zf(r||1,2,"strides"),this.strides.forEach((t=>Oh(t,"strides"))),this.padding=s||"valid",ec(this.padding),this.dataFormat=a||"channelsLast",tc(this.dataFormat),this.dilationRate=zf(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>Oh(t,"dilationRate")))}build(t){var e;t=xp(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new mh(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends Cc{apply(t,e){return bc([n.apply([r]),Fi([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return Ps((()=>{if(3!==t.length)throw new mh(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],s=t[1],a=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=gm({ones:()=>Mi(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?li(e[n],t):t;let l=o(r,i,0),u=o(r,i,1),h=o(r,i,2),c=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=gm({ones:()=>Mi(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,w,x]=bo(this.kernel.read(),4,3),[v,S,N,T]=this.useBias?bo(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,S,this.padding),h=this.inputConv(h,w,N,this.padding),c=this.inputConv(c,x,T,this.padding);const[E,k,I,A]=bo(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,E),f=this.recurrentConv(f,k),m=this.recurrentConv(m,I),g=this.recurrentConv(g,A);const $=this.recurrentActivation.apply(Hs(l,d)),_=this.recurrentActivation.apply(Hs(u,f)),C=Hs(li(_,a),li($,this.activation.apply(Hs(h,m)))),R=li(this.recurrentActivation.apply(Hs(c,g)),this.activation.apply(C));return[R,R,C]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=ym(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const s=$a(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?kc(s,n,this.dataFormat):s}recurrentConv(t,e){return $a(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}wm.className="ConvLSTM2DCell",Fs.registerClass(wm);class xm extends bm{constructor(t){const e=new wm(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}xm.className="ConvLSTM2D",Fs.registerClass(xm);class vm extends _p{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);const n=wp(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return Ac((()=>Ic(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}vm.className="Dropout",Fs.registerClass(vm);class Sm extends vm{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Sm.className="SpatialDropout1D",Fs.registerClass(Sm);class Nm extends _p{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Oh(this.units,"units"),this.activation=Tf(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Zc(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Zc(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=qh(t.kernelConstraint),this.biasConstraint=qh(t.biasConstraint),this.kernelRegularizer=Cf(t.kernelRegularizer),this.biasRegularizer=Cf(t.biasRegularizer),this.activityRegularizer=Cf(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=xp(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=xp(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);const n=wp(t),r=Mh(this.activation.getClassName());let s;return null!=r?s=Sc(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Sc(n,this.kernel.read()),null!=this.bias&&(s=kc(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const t={units:this.units,activation:Sf(this.activation),useBias:this.useBias,kernelInitializer:Xc(this.kernelInitializer),biasInitializer:Xc(this.biasInitializer),kernelRegularizer:$f(this.kernelRegularizer),biasRegularizer:$f(this.biasRegularizer),activityRegularizer:$f(this.activityRegularizer),kernelConstraint:Gh(this.kernelConstraint),biasConstraint:Gh(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Nm.className="Dense",Fs.registerClass(Nm);class Tm extends _p{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=xp(t);for(const e of t.slice(1))if(null==e)throw new mh(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],uc(t,1)]}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);let n=wp(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=_o(n,t)}return function(t){if(t.rank<=1)throw new mh(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],uc(t.shape,1)];return pa(t,e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Tm.className="Flatten",Fs.registerClass(Tm);class Em extends _p{constructor(t){super(t),this.supportsMasking=!0,this.activation=Tf(t.activation)}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);const n=wp(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Sf(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Em.className="Activation",Fs.registerClass(Em);class km extends _p{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Ps((()=>{return t=wp(t),e=t,n=this.n,Ps((()=>{if(2!==e.shape.length)throw new mh(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return xc(fc(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}km.className="RepeatVector",Fs.registerClass(km);class Im extends _p{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let s=1,a=null;for(let t=0;t<r.length;++t){const e=r[t];if(this.isUnknown(e)){if(null!==a)throw new mh("Can only specifiy one unknown dimension.");a=t}else s*=e}const i=uc(t);if(null!==a){if(0===s||i%s!=0)throw new mh(n);r[a]=i/s}else if(i!==s)throw new mh(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);const n=wp(t),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return pa(n,s)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Im.className="Reshape",Fs.registerClass(Im);class Am extends _p{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=pc(1,t.dims.length+1);if(!Ut.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ep({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=xp(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return _o(wp(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Am.className="Permute",Fs.registerClass(Am);class $m extends _p{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=wp(t);return Xs(Ri(n,this.maskValue),-1)}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);const n=wp(t),r=Xs(Ri(n,this.maskValue),-1,!0);return li(n,hs(r,n.dtype))}))}}$m.className="Masking",Fs.registerClass($m);class _m extends _p{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Sh(t.inputLength))}this.inputDim=t.inputDim,Oh(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Oh(this.outputDim,"outputDim"),this.embeddingsInitializer=Zc(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Cf(t.embeddingsRegularizer),this.activityRegularizer=Cf(t.activityRegularizer),this.embeddingsConstraint=qh(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Ps((()=>this.maskZero?(t=wp(t),Ri(t,ja(t))):null))}computeOutputShape(t){if(t=xp(t),null==this.inputLength)return[...t,this.outputDim];const e=Sh(this.inputLength);if(e.length!==t.length-1)throw new mh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const s=e[r],a=t[r+1];if(null!=s&&null!=a&&s!==a)throw new mh(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==s&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);let n=wp(t);"int32"!==n.dtype&&(n=dc(n,"int32"));const r=Nc(this.embeddings.read(),pa(n,[n.size]));return pa(r,xp(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Xc(this.embeddingsInitializer),embeddingsRegularizer:$f(this.embeddingsRegularizer),activityRegularizer:$f(this.activityRegularizer),embeddingsConstraint:Gh(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}_m.className="Embedding",Fs.registerClass(_m);class Cm extends _p{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new gh}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const s=t[t.length-e.length+r],a=e[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new mh("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[xp(t)]),t.length<2)throw new mh(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=_h(e),e.length>1)throw new mh(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===_h(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Ps((()=>{if(this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=cc(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=fc(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const r of t){const t=r.rank;if(null==t){const t=r.shape,s=t[0],a=t.slice(1).concat([s]);let i=pa(r,[s].concat(uc(t.slice(1))));i=_o(i,[1,0]),i=pa(i,a),e.push(i),n=!0}else if(t>1){const s=pc(1,t).concat([0]);e.push(_o(r,s)),n=!0}else e.push(r)}let r=this.mergeFunction(e);const s=r.rank;if(n)if(null==s){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=pa(_o(pa(r,[-1,e]),[1,0]),n)}else if(s>1){const t=[s-1].concat(pc(0,s-1));r=_o(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const r=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=_h(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return Ps((()=>{if(null==e)return null;if(!Array.isArray(e))throw new mh("`mask` should be an Array");if(!Array.isArray(t))throw new mh("`inputs` should be an Array");if(e.length!==t.length)throw new mh(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:Ka(t,0))))[0];for(let t=1;t<e.length-1;++t)n=pi(n,e[t]);return n}))}}class Rm extends Cm{constructor(t){super(t)}mergeFunction(t){return Ps((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Hs(e,t[n]);return e}))}}Rm.className="Add",Fs.registerClass(Rm);class Dm extends Cm{constructor(t){super(t)}mergeFunction(t){return Ps((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=li(e,t[n]);return e}))}}Dm.className="Multiply",Fs.registerClass(Dm);class Om extends Cm{constructor(t){super(t)}mergeFunction(t){return Ps((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=Hs(e,t[n]);return li(1/t.length,e)}))}}Om.className="Average",Fs.registerClass(Om);class Fm extends Cm{constructor(t){super(t)}mergeFunction(t){return Ps((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=gi(e,t[n]);return e}))}}Fm.className="Maximum",Fs.registerClass(Fm);class Mm extends Cm{constructor(t){super(t)}mergeFunction(t){return Ps((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=wi(e,t[n]);return e}))}}Mm.className="Minimum",Fs.registerClass(Mm);class Lm extends Cm{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new mh("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const r=t[e].slice();r.splice(this.axis,1);let s=!1;for(const t of n)if(Ut.arraysEqual(t,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new mh("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Ps((()=>bc(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new mh("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[r]||null==t[r]){n[r]=null;break}n[r]+=t[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new mh("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new mh("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new mh(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return Ps((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let n=0;n<t.length;++n)null==e[n]?r.push(hs(Mi(t[n]),"bool")):e[n].rank<t[n].rank?r.push(Ka(e[n],-1)):r.push(e[n]);const s=Ta(r,this.axis);return Ks(s,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function zm(t,e){for(;t<0;)t+=e;return t}Lm.className="Concatenate",Fs.registerClass(Lm);class Bm extends Cm{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){Ut.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new gh("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new mh(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new mh(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>zm(e,t[n].shape.length))):[zm(this.axes,n.shape.length),zm(this.axes,r.shape.length)],this.normalize&&(n=Hp(n,e[0]),r=Hp(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new gh("batchDot is not implemented for tensors of 4D or higher rank yet");if(Ut.assert(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),Ut.assert(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new gh("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,s=e.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Ps((()=>{let n,i;if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=pa(e,e.shape.concat(t))}else if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=pa(t,t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=a[0]===a[1]?hi(li(t,e),a[0]):hi(li(_o(t,[1,0]),e),a[1]);else{const n=a[0]!==t.shape.length-1,r=a[1]===e.shape.length-1;i=di(t,e,n,r)}if(n>0){let t;t=r>s?r+s-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=So(i,e)}return 1===i.shape.length&&(i=Ka(i,1)),i}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[zm(this.axes,t.length),zm(this.axes,e.length)],n}computeOutputShape(t){Ut.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new gh("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=e.concat(n);return 1===s.length&&s.push(1),s}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Bm.className="Dot",Fs.registerClass(Bm);class Um extends _p{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);const n=wp(t);return Ac((()=>Hs(vc(n.shape,0,this.stddev),n)),(()=>n),e.training||!1)}))}}Um.className="GaussianNoise",Fs.registerClass(Um);class Pm extends _p{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Ps((()=>{this.invokeCallHook(t,e);const n=wp(t);if(this.rate>0&&this.rate<1){return Ac((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return li(n,vc(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}Pm.className="GaussianDropout",Fs.registerClass(Pm);class Wm extends _p{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||wp(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Ps((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return Ac((()=>{const e=wp(t),r=-1.7580993408473766;let s=ei(Ji(n),this.rate);s=dc(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=Hs(li(e,s),li(Hs(s,-1),r));return Hs(li(o,a),i)}),(()=>wp(t)),e.training||!1)}return t}))}}function Vm(t,e,n,r,s,a=.001){let i;if(2===t.rank)i=ga(t,e,n,r,s,a);else if(3===t.rank)i=ya(t,e,n,r,s,a);else{if(4!==t.rank)throw new gh(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=ba(t,e,n,r,s,a)}return i}function Gm(t,e,n,r,s=.001){return Ut.arraysEqual(r.slice().sort(),pc(0,t.rank-1))?function(t,e,n,r,s=.001){return Ps((()=>{const a=_i(t,r),i=a.mean,o=a.variance;return[Vm(t,i,o,n,e,s),i,o]}))}(t,e,n,r,s):function(t,e,n,r,s=.001){return Ps((()=>{const a=_i(t,r),i=a.mean,o=a.variance,l=[];for(const e of pc(0,t.rank))-1!==r.indexOf(e)?l.push(1):l.push(t.shape[e]);const u=pa(i,l),h=pa(o,l),c=null==e?null:pa(e,l),p=null==n?null:pa(n,l);return[Vm(t,u,h,p,c,s),i,o]}))}(t,e,n,r,s)}Wm.className="AlphaDropout",Fs.registerClass(Wm);class jm extends _p{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Zc(t.betaInitializer||"zeros"),this.gammaInitializer=Zc(t.gammaInitializer||"ones"),this.movingMeanInitializer=Zc(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Zc(t.movingVarianceInitializer||"ones"),this.betaConstraint=qh(t.betaConstraint),this.gammaConstraint=qh(t.gammaConstraint),this.betaRegularizer=Cf(t.betaRegularizer),this.gammaRegularizer=Cf(t.gammaRegularizer)}build(t){t=xp(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new mh(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Ep({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Ps((()=>{const n=null!=e.training&&e.training,r=wp(t),s=r.shape,a=s.length,i=pc(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=bh(1,a);l[o]=s[o];const u=i.slice();u.sort();const h=!Ut.arraysEqual(u,pc(0,a).slice(0,a-1));if(!n)return(()=>{if(h){const t=pa(this.movingMean.read(),l),e=pa(this.movingVariance.read(),l),n=this.center?pa(this.beta.read(),l):null,s=this.scale?pa(this.gamma.read(),l):null;return Vm(r,t,e,n,s,this.epsilon)}return Vm(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[c,p,d]=Gm(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(t,e,n)=>{Ps((()=>{const r=1-n,s=t.read(),a=li(ui(s,e),r);t.write(ui(s,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),c}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xc(this.betaInitializer),gammaInitializer:Xc(this.gammaInitializer),movingMeanInitializer:Xc(this.movingMeanInitializer),movingVarianceInitializer:Xc(this.movingVarianceInitializer),betaRegularizer:$f(this.betaRegularizer),gammaRegularizer:$f(this.gammaRegularizer),betaConstraint:Gh(this.betaConstraint),gammaConstraint:Gh(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}jm.className="BatchNormalization",Fs.registerClass(jm);class qm extends _p{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Zc(t.betaInitializer||"zeros"),this.gammaInitializer=Zc(t.gammaInitializer||"ones"),this.betaRegularizer=Cf(t.betaRegularizer),this.gammaRegularizer=Cf(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=xp(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==_h(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=wp(t),r=n.shape,s=r.length;return Ps((()=>{let{mean:t,variance:e}=_i(n,this.axis,!0);const a=bh(1,s);for(const t of this.axis)a[t]=r[t];const i=t=>null!=t&&t.shape.length!==s?pa(t,a):t;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],h=[];for(let t=0;t<s;++t)-1!==this.axis.indexOf(t)?(u.push(r[t]),h.push(1)):(u.push(1),h.push(r[t]));return t=Xa(t,u),e=Xa(e,u),o=Xa(o,h),l=Xa(l,h),Vm(n,t,e,l,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Xc(this.betaInitializer),gammaInitializer:Xc(this.gammaInitializer),betaRegularizer:$f(this.betaRegularizer),gammaRegularizer:$f(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}qm.className="LayerNormalization",Fs.registerClass(qm);class Hm extends _p{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new mh(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new mh(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new mh(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Ep({ndim:4})]}computeOutputShape(t){let e,n;return t=xp(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Ps((()=>{return e=wp(t),n=this.padding,r=this.dataFormat,Ps((()=>{if(4!==e.rank)throw new mh(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new mh("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new mh(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Li(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Km(t,e,n,r,s,a){return Ps((()=>{let i;tc(s),nc(a),ec(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=Pf(t,s);const o="same"===r?"same":"valid";return i="max"===a?fi(t,e,n,o):da(t,e,n,o),"channelsFirst"===s&&(i=_o(i,[0,3,1,2])),i}))}function Xm(t,e,n,r,s,a){return Ps((()=>{let i;tc(s),nc(a),ec(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),t=Wf(t,s);const o="same"===r?"same":"valid";return i="max"===a?mi(t,e,n,o):fa(t,e,n,o),"channelsFirst"===s&&(i=_o(i,[0,4,1,2,3])),i}))}Hm.className="ZeroPadding2D",Fs.registerClass(Hm);class Zm extends _p{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new mh(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Oh(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new mh(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Oh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,ec(this.padding),this.inputSpec=[new Ep({ndim:3})]}computeOutputShape(t){const e=Bf((t=xp(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Ps((()=>{this.invokeCallHook(t,e),t=fc(wp(t),2);const n=this.poolingFunction(wp(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return So(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class Jm extends Zm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return tc(s),ec(r),Km(t,e,n,r,s,"max")}}Jm.className="MaxPooling1D",Fs.registerClass(Jm);class Qm extends Zm{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return tc(s),ec(r),Km(t,e,n,r,s,"avg")}}Qm.className="AveragePooling1D",Fs.registerClass(Qm);class Ym extends _p{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new mh(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Oh(this.poolSize,"poolSize"),Oh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tc(this.dataFormat),ec(this.padding),this.inputSpec=[new Ep({ndim:4})]}computeOutputShape(t){t=xp(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Bf(e,this.poolSize[0],this.padding,this.strides[0]),n=Bf(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Ps((()=>(this.invokeCallHook(t,e),this.poolingFunction(wp(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class tg extends Ym{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return tc(s),ec(r),Km(t,e,n,r,s,"max")}}tg.className="MaxPooling2D",Fs.registerClass(tg);class eg extends Ym{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return tc(s),ec(r),Km(t,e,n,r,s,"avg")}}eg.className="AveragePooling2D",Fs.registerClass(eg);class ng extends _p{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new mh(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Oh(this.poolSize,"poolSize"),Oh(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tc(this.dataFormat),ec(this.padding),this.inputSpec=[new Ep({ndim:5})]}computeOutputShape(t){t=xp(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Bf(e,this.poolSize[0],this.padding,this.strides[0]),n=Bf(n,this.poolSize[1],this.padding,this.strides[1]),r=Bf(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Ps((()=>(this.invokeCallHook(t,e),this.poolingFunction(wp(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class rg extends ng{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return tc(s),ec(r),Xm(t,e,n,r,s,"max")}}rg.className="MaxPooling3D",Fs.registerClass(rg);class sg extends ng{constructor(t){super(t)}poolingFunction(t,e,n,r,s){return tc(s),ec(r),Xm(t,e,n,r,s,"avg")}}sg.className="AveragePooling3D",Fs.registerClass(sg);class ag extends _p{constructor(t){super(t),this.inputSpec=[new Ep({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new gh}}class ig extends ag{constructor(t){super(t||{})}call(t,e){return Ps((()=>{const e=wp(t);return yi(e,1)}))}}ig.className="GlobalAveragePooling1D",Fs.registerClass(ig);class og extends ag{constructor(t){super(t||{})}call(t,e){return Ps((()=>{const e=wp(t);return oi(e,1)}))}}og.className="GlobalMaxPooling1D",Fs.registerClass(og);class lg extends _p{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,tc(this.dataFormat),this.inputSpec=[new Ep({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new gh}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class ug extends lg{call(t,e){return Ps((()=>{const e=wp(t);return"channelsLast"===this.dataFormat?yi(e,[1,2]):yi(e,[2,3])}))}}ug.className="GlobalAveragePooling2D",Fs.registerClass(ug);class hg extends lg{call(t,e){return Ps((()=>{const e=wp(t);return"channelsLast"===this.dataFormat?oi(e,[1,2]):oi(e,[2,3])}))}}hg.className="GlobalMaxPooling2D",Fs.registerClass(hg);class cg extends _p{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=qp(e.layer,n);delete e.layer;const s={layer:r};return Object.assign(s,e),new t(s)}}class pg extends cg{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=xp(t)).length<3)throw new mh(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=xp(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Ps((()=>im(((t,n)=>[wp(this.layer.call(t,e)),[]]),t=wp(t),[],!1,null,null,!1,!0)[1]))}}pg.className="TimeDistributed",Fs.registerClass(pg);class dg extends cg{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=qp(n),e.goBackwards=!0!==e.goBackwards;const r={};var s;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=qp(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,s=this.mergeMode,Rh(Qh,"BidirectionalMergeMode",s),t.weights)throw new gh("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,s=this.forwardLayer.computeOutputShape(t);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),e=s[0]):e=s[0],"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):vh(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const s=am(t,n,r,this.numConstants);if(t=s.inputs,n=s.initialState,r=s.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new mh("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const r=n.map((t=>new Ep({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new gh("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof kp;for(const t of a)if(t instanceof kp!==o)throw new mh("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=s,o}return super.apply(t,e)}call(t,e){return Ps((()=>{const n=e.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(t,e),s=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),s=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=no(s,1)),"concat"===this.mergeMode?i=bc([r,s]):"sum"===this.mergeMode?i=Hs(r,s):"ave"===this.mergeMode?i=li(.5,Hs(r,s)):"mul"===this.mergeMode?i=li(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){sc(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),sc(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=qp(e.layer);if(delete e.layer,null!=e.numConstants)throw new gh("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}function fg(t){return new Rp(t)}function mg(t){return new Ff(t)}function gg(t){return new Rf(t)}function yg(t){return new Df(t)}function bg(t){return new Of(t)}function wg(t){return new Lf(t)}function xg(t){return new Mf(t)}function vg(t){return new tm(t)}function Sg(t){return new Kf(t)}function Ng(t){return new Zf(t)}function Tg(t){return new Xf(t)}function Eg(t){return new Jf(t)}function kg(t){return new Yf(t)}function Ig(t){return new em(t)}function Ag(t){return new nm(t)}function $g(t){return new rm(t)}function _g(t){return new Em(t)}function Cg(t){return new Nm(t)}function Rg(t){return new vm(t)}function Dg(t){return new Sm(t)}function Og(t){return new Tm(t)}function Fg(t){return new km(t)}function Mg(t){return new Im(t)}function Lg(t){return new Am(t)}function zg(t){return new _m(t)}function Bg(t){return new Rm(t)}function Ug(t){return new Om(t)}function Pg(t){return new Lm(t)}function Wg(t){return new Fm(t)}function Vg(t){return new Mm(t)}function Gg(t){return new Dm(t)}function jg(t){return new Bm(t)}function qg(t){return new jm(t)}function Hg(t){return new qm(t)}function Kg(t){return new Hm(t)}function Xg(t){return new Qm(t)}function Zg(t){return Xg(t)}function Jg(t){return Xg(t)}function Qg(t){return new eg(t)}function Yg(t){return Qg(t)}function ty(t){return Qg(t)}function ey(t){return new sg(t)}function ny(t){return ey(t)}function ry(t){return ey(t)}function sy(t){return new ig(t)}function ay(t){return new ug(t)}function iy(t){return new og(t)}function oy(t){return new hg(t)}function ly(t){return new Jm(t)}function uy(t){return new tg(t)}function hy(t){return new rg(t)}function cy(t){return new pm(t)}function py(t){return new cm(t)}function dy(t){return new fm(t)}function fy(t){return new dm(t)}function my(t){return new hm(t)}function gy(t){return new um(t)}function yy(t){return new sm.ConvLSTM2D(t)}function by(t){return new sm.ConvLSTM2DCell(t)}function wy(t){return new om(t)}function xy(t){return new mm(t)}function vy(t){return new dg(t)}function Sy(t){return new pg(t)}dg.className="Bidirectional",Fs.registerClass(dg);const Ny=iy,Ty=oy,Ey=ly,ky=uy;function Iy(t){return new Um(t)}function Ay(t){return new Pm(t)}function $y(t){return new Wm(t)}function _y(t){return new $m(t)}var Cy,Ry,Dy;lt().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),(Ry=Cy||(Cy={}))[Ry.DT_INVALID=0]="DT_INVALID",Ry[Ry.DT_FLOAT=1]="DT_FLOAT",Ry[Ry.DT_DOUBLE=2]="DT_DOUBLE",Ry[Ry.DT_INT32=3]="DT_INT32",Ry[Ry.DT_UINT8=4]="DT_UINT8",Ry[Ry.DT_INT16=5]="DT_INT16",Ry[Ry.DT_INT8=6]="DT_INT8",Ry[Ry.DT_STRING=7]="DT_STRING",Ry[Ry.DT_COMPLEX64=8]="DT_COMPLEX64",Ry[Ry.DT_INT64=9]="DT_INT64",Ry[Ry.DT_BOOL=10]="DT_BOOL",Ry[Ry.DT_QINT8=11]="DT_QINT8",Ry[Ry.DT_QUINT8=12]="DT_QUINT8",Ry[Ry.DT_QINT32=13]="DT_QINT32",Ry[Ry.DT_BFLOAT16=14]="DT_BFLOAT16",Ry[Ry.DT_QINT16=15]="DT_QINT16",Ry[Ry.DT_QUINT16=16]="DT_QUINT16",Ry[Ry.DT_UINT16=17]="DT_UINT16",Ry[Ry.DT_COMPLEX128=18]="DT_COMPLEX128",Ry[Ry.DT_HALF=19]="DT_HALF",Ry[Ry.DT_RESOURCE=20]="DT_RESOURCE",Ry[Ry.DT_VARIANT=21]="DT_VARIANT",Ry[Ry.DT_UINT32=22]="DT_UINT32",Ry[Ry.DT_UINT64=23]="DT_UINT64",Ry[Ry.DT_FLOAT_REF=101]="DT_FLOAT_REF",Ry[Ry.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",Ry[Ry.DT_INT32_REF=103]="DT_INT32_REF",Ry[Ry.DT_UINT8_REF=104]="DT_UINT8_REF",Ry[Ry.DT_INT16_REF=105]="DT_INT16_REF",Ry[Ry.DT_INT8_REF=106]="DT_INT8_REF",Ry[Ry.DT_STRING_REF=107]="DT_STRING_REF",Ry[Ry.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",Ry[Ry.DT_INT64_REF=109]="DT_INT64_REF",Ry[Ry.DT_BOOL_REF=110]="DT_BOOL_REF",Ry[Ry.DT_QINT8_REF=111]="DT_QINT8_REF",Ry[Ry.DT_QUINT8_REF=112]="DT_QUINT8_REF",Ry[Ry.DT_QINT32_REF=113]="DT_QINT32_REF",Ry[Ry.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",Ry[Ry.DT_QINT16_REF=115]="DT_QINT16_REF",Ry[Ry.DT_QUINT16_REF=116]="DT_QUINT16_REF",Ry[Ry.DT_UINT16_REF=117]="DT_UINT16_REF",Ry[Ry.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",Ry[Ry.DT_HALF_REF=119]="DT_HALF_REF",Ry[Ry.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",Ry[Ry.DT_VARIANT_REF=121]="DT_VARIANT_REF",Ry[Ry.DT_UINT32_REF=122]="DT_UINT32_REF",Ry[Ry.DT_UINT64_REF=123]="DT_UINT64_REF",function(t){let e;var n;(n=e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(Dy||(Dy={}));var Oy={};t(Oy,"json",(()=>Fy));const Fy=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var My={};t(My,"json",(()=>Ly));const Ly=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var zy={};t(zy,"json",(()=>By));const By=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}];var Uy={};t(Uy,"json",(()=>Py));const Py=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var Wy={};t(Wy,"json",(()=>Vy));const Vy=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var Gy={};t(Gy,"json",(()=>jy));const jy=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var qy={};t(qy,"json",(()=>Hy));const Hy=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var Ky={};t(Ky,"json",(()=>Xy));const Xy=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var Zy={};t(Zy,"json",(()=>Jy));const Jy=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}];var Qy={};t(Qy,"json",(()=>Yy));const Yy=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}];var tb={};t(tb,"json",(()=>eb));const eb=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var nb={};t(nb,"json",(()=>rb));const rb=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}];var sb={};t(sb,"json",(()=>ab));const ab=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}];var ib={};t(ib,"json",(()=>ob));const ob=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var lb={};t(lb,"json",(()=>ub));const ub=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}];var hb={};t(hb,"json",(()=>cb));const cb=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var pb={};t(pb,"json",(()=>db));const db=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var fb={};t(fb,"json",(()=>mb));const mb=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var gb={};t(gb,"json",(()=>yb));const yb=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var bb,wb,xb={};function vb(t,e,n=new Map,r=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(kb(t)){const s=Array.isArray(t)?[]:{};r.add(t);for(const a in t){const i=vb(t[a],e,n,r);s[a]=i}return r.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,s.value),s.value}function Sb(t,e=Tb){return Nb(t,e)}function Nb(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=e(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(kb(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Nb(t.map((t=>t[a])),e,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Tb(t){return null===t?null:kb(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function Eb(t,e){const n=new Map;vb(t,e,n);for(const t of Array.from(n.keys())){const e=n.get(t);if(Ut.isPromise(e)){const r=await e;n.set(t,r)}}return vb(t,e,n)}function kb(t){let e=!1;if(lt().get("IS_BROWSER"))e=t instanceof TextDecoder;else{const{StringDecoder:n}=a("iCyng");e=t instanceof n}return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof Ge)&&!(t instanceof Promise)&&!e)}function Ib(t){return vb(t,Ab)}function Ab(t){return t instanceof Ge?{value:t.clone(),recurse:!1}:kb(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}t(xb,"array",(()=>Yb)),t(xb,"Dataset",(()=>Jb)),t(xb,"zip",(()=>tw)),t(xb,"CSVDataset",(()=>lw)),t(xb,"TextLineDataset",(()=>nw)),t(xb,"csv",(()=>Tw)),t(xb,"func",(()=>Ew)),t(xb,"generator",(()=>kw)),t(xb,"microphone",(()=>Aw)),t(xb,"webcam",(()=>Iw)),t(xb,"FileDataSource",(()=>Sw)),t(xb,"URLDataSource",(()=>Nw)),t(xb,"version_data",(()=>$w));class $b{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class _b extends $b{constructor(){super(_b.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Cb(t){return new Fb(t)}function Rb(t){return new Mb(t)}function Db(t,e){return new Hb(t,e)}_b.INITIAL_CAPACITY=32;class Ob{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Vb(this,t)}filter(t){return new Pb(this,t)}map(t){return new Wb(this,t)}mapAsync(t){return new Gb(this,t)}serialMapAsync(t){return new Gb(this,t).serial()}flatmap(t){return new qb(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Ub(this,t,e)}columnMajorBatch(t,e=!0,n=Tb){return this.rowMajorBatch(t,e).map((t=>Sb(t,n)))}concatenate(t,e){return new Hb(Cb([this,t]),e)}take(t){return t<0||null==t?this:new Bb(this,t)}skip(t){return t<0||null==t?this:new zb(this,t)}prefetch(t){return new Xb(this,t)}shuffle(t,e){return new Zb(this,t,e)}serial(){return new Lb(this)}}class Fb extends Ob{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Ib(t),done:!1}}}class Mb extends Ob{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Lb extends Ob{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class zb extends Ob{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;Ws(t.value)}return this.upstream.next()}}class Bb extends Ob{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Ub extends Ob{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Pb extends Ob{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;Ws(t.value)}}}class Wb extends Ob{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=nn.getTensorsInContainer(t.value),n=this.transform(t.value),r=nn.getTensorsInContainer(n);for(const t of e)nn.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class Vb extends Ob{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Gb extends Ob{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=nn.getTensorsInContainer(t.value),n=await this.transform(t.value),r=nn.getTensorsInContainer(n);for(const t of e)nn.isTensorInList(t,r)||t.dispose();return{value:n,done:!1}}}class jb extends Ob{constructor(){super(),this.outputQueue=new _b,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class qb extends jb{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=nn.getTensorsInContainer(t.value),n=this.transform(t.value),r=nn.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const t of e)nn.isTensorInList(t,r)||t.dispose();return!0}}class Hb extends Ob{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(wb=bb||(bb={}))[wb.FAIL=0]="FAIL",wb[wb.SHORTEST=1]="SHORTEST",wb[wb.LONGEST=2]="LONGEST";class Kb extends Ob{constructor(t,e=bb.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const r=await Eb(this.iterators,(function(t){if(t instanceof Ob){return{value:t.next().then((t=>(e++,t.done&&n++,t.value))),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case bb.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case bb.SHORTEST:return{value:null,done:!0};case bb.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Xb extends Ob{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new $b(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Zb extends Xb{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=Ui.alea(n||Ut.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Jb{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return Ut.assert(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Qb((async()=>(await n.iterator()).columnMajorBatch(t,e,ew)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Qb((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Qb((async()=>(await e.iterator()).filter((e=>Ps((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Qb((async()=>(await e.iterator()).map((e=>Ps((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Qb((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Qb((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Qb((async()=>Db(Rb((async()=>({value:await e.iterator(),done:!1}))).take(t))),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Qb((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Ui.alea(e||Ut.now().toString());return Qb((async()=>{let e=s.int32();return n&&(e+=s.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Qb((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Qb(t,e=null){return new class extends Jb{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Yb(t){return Qb((async()=>Cb(t)),t.length)}function tw(t){if(!kb(t))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(t))for(let n=0;n<t.length;n++)e=null==e?t[n].size:Math.min(e,t[n].size);else if(t instanceof Object)for(const n in t)e=null==e?t[n].size:Math.min(e,t[n].size);return Qb((async()=>function(t,e=bb.FAIL){return new Kb(t,e)}(await Eb(t,(t=>{if(t instanceof Jb)return{value:t.iterator(),recurse:!1};if(kb(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),bb.SHORTEST)),e)}function ew(t){if(null===t)return null;const e=t[0];if(null==(n=e)||null===(r=n)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(n)||"object"==typeof n&&n instanceof Ge||Ut.isTypedArray(n)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof Ge?No(t):Tn(t)}(t),recurse:!1}}var n,r;return{value:null,recurse:!0}}Jb.MAX_BUFFER_SIZE=1e4;class nw extends Jb{constructor(t){super(),this.input=t}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((t=>(t.endsWith("\r")&&(t=t.slice(0,-1)),t)))}}const rw=Symbol("out"),sw=Symbol("field"),aw=Symbol("quote"),iw=Symbol("quoteafterquote"),ow=Symbol("quoteinquote");class lw extends Jb{constructor(t,e){super(),this.input=t,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new nw(t),e||(e={}),this.hasHeader=!1!==e.hasHeader,this.fullColumnNames=e.columnNames,this.columnConfigs=e.columnConfigs,this.configuredColumnsOnly=e.configuredColumnsOnly,e.delimWhitespace?(Ut.assert(null==e.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=e.delimiter?e.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const t=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!t)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&t&&Ut.assert(t.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+t.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=t);const e=this.fullColumnNames.reduce(((t,e)=>(t[e]=t[e]+1||1,t)),{}),n=Object.keys(e).filter((t=>e[t]>1));if(Ut.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const t of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(t))throw new Error('The key "'+t+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator(),e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");const n=e.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let t=await this.base.iterator();return this.hasHeader&&(t=t.skip(1)),t.map((t=>this.makeDataElement(t)))}makeDataElement(t){const e=this.parseRow(t),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=e[s];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${t}`);l=void 0}else{const t=Number(o);if(isNaN(t))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=t;break;case"int32":l=Math.floor(t);break;case"bool":l=this.getBoolean(o)}else l=t}i&&i.isLabel?r[a]=l:n[a]=l}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(t){return"1"===t||"true"===t.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;const s=t.length;let a=rw;for(let e=0;e<s;e++)switch(a){case rw:switch(t.charAt(e)){case'"':r=e+1,a=aw;break;case this.delimiter:if(r=e+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=rw;break;default:a=sw,r=e}break;case sw:if(t.charAt(e)===this.delimiter)n.push(t.substring(r,e)),a=rw,r=e+1;break;case aw:if('"'===t.charAt(e))a=iw;break;case iw:switch(t.charAt(e)){case this.delimiter:n.push(t.substring(r,e-1)),a=rw,r=e+1;break;case'"':a=aw;break;default:a=ow}break;case ow:if('"'===t.charAt(e))a=aw}if(a===iw?n.push(t.substring(r,s-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class uw extends Ob{constructor(t){super(),this.microphoneConfig=t,this.isClosed=!1,this.fftSize=t.fftSize||1024;const e=Math.log2(this.fftSize);if(this.fftSize<0||e<4||e>14||!Number.isInteger(e))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=t.numFramesPerSpectrogram||43,this.sampleRateHz=t.sampleRateHz,this.columnTruncateLength=t.columnTruncateLength||this.fftSize,this.audioTrackConstraints=t.audioTrackConstraints,this.smoothingTimeConstant=t.smoothingTimeConstant||0,this.includeSpectrogram=!1!==t.includeSpectrogram,this.includeWaveform=!0===t.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(t={}){if(lt().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const e=new uw(t);return await e.start(),e}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(t){throw new Error(`Error thrown while initializing video stream: ${t.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const t=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new t,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const e=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,e.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let t,e;const n=await this.getAudioData();if(this.includeSpectrogram){const e=this.flattenQueue(n.freqDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const t=this.flattenQueue(n.timeDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:t,waveform:e},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const t=[],e=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:t,timeDataQueue:e}),t.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),e.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:t,timeDataQueue:e}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(t){const e=t[0].length,n=new Float32Array(t.length*e);return t.forEach(((t,r)=>n.set(t,r*e))),n}getTensorFromAudioDataArray(t,e){const n=new Float32Array(Ut.sizeFromShape(e));return n.set(t,n.length-t.length),Tn(n,e)}}class hw extends Ob{constructor(t,e){if(super(),this.webcamVideoElement=t,this.webcamConfig=e,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Eo([0],"int32"),this.webcamConfig.centerCrop){const t=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,e=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-t)/2,r=(1-e)/2,s=n+t,a=e+r;this.cropBox=ko([r,n,a,s],[1,4])}else this.cropBox=ko([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(t,e={}){if(lt().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!t){if(t=document.createElement("video"),!e.resizeWidth||!e.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");t.width=e.resizeWidth,t.height=e.resizeHeight}const n=new hw(t,e);return await n.start(),n}async start(){this.webcamConfig.facingMode&&Ut.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(t){throw t.message=`Error thrown while initializing video stream: ${t.message}`,t}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((t=>{this.webcamVideoElement.onloadedmetadata=()=>{t()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let t;try{t=us.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:t,done:!1};try{return{value:this.cropAndResizeFrame(t),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{t.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(t){return Ps((()=>{const e=Ka(hs(t,"float32"),0);let n;n=Rl.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return pa(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((t=>t.stop()));try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class cw{}class pw extends Ob{split(t){return new dw(this,t)}}class dw extends pw{constructor(t,e){super(),this.upstream=t,this.impl=new fw(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class fw extends jb{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const t of e.slice(0,-1))this.outputQueue.push(t);return this.carryover=e[e.length-1],!0}}var mw=kn;class gw extends Ob{decodeUTF8(){return new yw(this)}}class yw extends pw{constructor(t){super(),this.upstream=t,this.impl=new bw(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class bw extends jb{constructor(t){if(super(),this.upstream=t,lt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=a("iCyng");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let e,n;return!t.done&&(e=t.value,n=lt().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(mw.from(e.buffer)),this.outputQueue.push(n),!0)}}class ww extends gw{constructor(t,e={}){super(),this.file=t,this.options=e,Ut.assert(t instanceof Uint8Array||!!lt().get("IS_BROWSER")&&(t instanceof File||t instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=e.offset||0,this.chunkSize=e.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const t=new Promise(((t,e)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return e(new TypeError("FileReader returned unknown type."));t(s)},r.onabort=t=>e(new Error("Aborted")),r.onerror=t=>e(new Error(t.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await t,done:!1}}}const xw=t=>({method:t.method,headers:t.headers,body:t.body,mode:t.mode,credentials:t.credentials,cache:t.cache,redirect:t.redirect,referrer:t.referrer,integrity:t.integrity});function vw(t){return"string"==typeof t&&"file://"===t.substr(0,7)}class Sw extends cw{constructor(t,e={}){super(),this.input=t,this.options=e}async iterator(){if(vw(this.input)&&lt().get("IS_NODE")){const t=a("iCyng");this.input=t.readFileSync(this.input.substr(7))}return new ww(this.input,this.options)}}class Nw extends cw{constructor(t,e={}){super(),this.url=t,this.fileOptions=e}async iterator(){return vw(this.url)?new Sw(this.url,this.fileOptions).iterator():async function(t,e={},n){let r,s;"string"==typeof t?r=t:(r=t.url,s=xw(t));const a=await(n||Ut.fetch)(r,s);if(a.ok){const t=new Uint8Array(await a.arrayBuffer());return new ww(t,e)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function Tw(t,e={}){return new lw(new Nw(t),e)}function Ew(t){const e=Rb(t);return Qb((async()=>e))}function kw(t){return Qb((async()=>{const e=await t();return Rb((()=>e.next()))}))}async function Iw(t,e){return hw.create(t,e)}async function Aw(t){return uw.create(t)}
/** @license See the LICENSE file. */const $w="3.12.0";function _w(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&Ut.assert("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}const Cw=hh.whereImpl;class Rw extends ct{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new ht(this,Bs())}nextDataId(){return Rw.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,lt().get("IS_NODE")&&ql.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&Ut.isString(n[0])){const s=n.map((t=>Ut.encodeString(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r,s){this.data.set(t,{values:e,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return ql.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Ut.decodeString(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Sa(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Bs().makeTensorFromDataId(r,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=Ut.now();t();return{kernelMs:Ut.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){_w([t],"where");const e=this.readSync(t.dataId);return Cw(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Rw.nextDataId=0;
/** @license See the LICENSE file. */
const Dw={},Ow={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fw(t){if(!(t in Dw)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete Dw[t]}),!1),1===t?e.getContext("webgl",Ow)||e.getContext("experimental-webgl",Ow):e.getContext("webgl2",Ow)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;Dw[t]=e}const e=Dw[t];return null==e||e.isContextLost()?(delete Dw[t],Fw(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Dw[t])}function Mw(){let t,e,n,r,s,a,i,o,l,u;return 2===lt().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Lw(t,e,n="index"){const r=Ut.computeStrides(e);return r.map(((e,s)=>`${`int ${t[s]} = ${n} / ${e}`}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${e}`:`index -= ${t[s]} * ${e}`};`)).join("")}function zw(t,e,n="index"){const r=Ut.computeStrides(e);return r.map(((e,s)=>`${`int ${t[s]} = ${n} / outShapeStrides[${s}]`}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * outShapeStrides[${s}]`:`index -= ${t[s]} * outShapeStrides[${s}]`};`)).join("")}function Bw(t,e,n="index"){const r=function(t,e){const n=t.length,r=t.map((t=>`${e}[${t}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let t=n-3;t>=0;--t)s[t]=`(${s[t+1]} * ${r[t+1]})`;return s}(t.map(((t,e)=>e)),e);return r.map(((e,s)=>`${`int ${t[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${t[s+1]} = ${n} - ${t[s]} * ${r[s]}`:`index -= ${t[s]} * ${r[s]}`};`)).join("")}function Uw(t){const e=Ut.computeStrides(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const Pw="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Ww}=ql;function Vw(t,e,n){const r=[];if(t.forEach((t=>{const e=Ut.sizeFromShape(t.shapeInfo.logicalShape);if(t.shapeInfo.isUniform?r.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(r.push(`uniform sampler2D ${t.name};`),r.push(`uniform int offset${t.name};`)),n.enableShapeUniforms){const{uniformShape:e}=tx(n.packedInputs,t.shapeInfo.logicalShape,t.shapeInfo.texShape);switch(e.length){case 1:r.push(`uniform int ${t.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${t.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${t.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${t.name}Shape;`)}r.push(`uniform ivec2 ${t.name}TexShape;`)}})),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((t=>{r.push(`uniform ${t.type} ${t.name}${t.arrayIndex?`[${t.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=t.map((t=>function(t,e,n=!1,r){let s="";s+=n?jw(t,r):Gw(t,r);const a=t.shapeInfo.logicalShape,i=e.logicalShape;a.length<=i.length&&(s+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=Ww(t.shapeInfo.logicalShape,e.logicalShape),l=Yw(i),u=i-a;let h;const c=["x","y","z","w","u","v"];h=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${c[t+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${c[e+u]}`)).join(", ");let d="return outputValue;";const f=1===Ut.sizeFromShape(t.shapeInfo.logicalShape),m=1===Ut.sizeFromShape(e.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=a-2,e=a-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?d="return vec4(outputValue.x);":o.indexOf(t)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===l&&null==t.shapeInfo.flatOffset&&Ut.arraysEqual(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=Yw(l),h=Ww(t.shapeInfo.logicalShape,e.logicalShape),c=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((t=>`coords.${d[t+c]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+c]}`)).join(", ");return`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(t,e));return s}(t,e,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=e.texShape,o=Mw(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,h,c=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${qw}\n    ${Hw}\n    ${Kw}\n  `}(o);e.isPacked?(u=function(t,e,n){switch(t.length){case 0:return Zw();case 1:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;return n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,e,n);case 2:return function(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ut.arraysEqual(t,e))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),a=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e,n);default:return function(t,e,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),a=s*Math.ceil(t[t.length-2]/2);let i=a,o="",l="b, r, c";for(let e=2;e<t.length-1;e++)i*=t[t.length-e-1],o=`\n      int b${e} = index / ${i};\n      index -= b${e} * ${i};\n    `+o,l=`b${e}, `+l;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${l});\n    }\n  `}(t,e,n)}}(e.logicalShape,i,n.enableShapeUniforms),h=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(o)):(u=function(t,e,n){switch(t.length){case 0:return Zw();case 1:return function(t,e,n){if(1===e[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e,n);case 2:return function(t,e,n){if(Ut.arraysEqual(t,e))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e,n);case 3:return function(t,e,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${zw(["r","c","d"],t)}\n    return ivec3(r, c, d);\n  }\n`}const r=Lw(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(t,e,n);case 4:return function(t,e,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${zw(["r","c","d","d2"],t)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=Lw(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e,n);case 5:return function(t,e){const n=Lw(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Lw(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,i,n.enableShapeUniforms),h=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(c+=Xw);return[c,l,h,s,u,a,n.userCode].join("\n")}function Gw(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=t.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Jw(n);if(e)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=t.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Qw(t)}\n      }\n    `;const s=t.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Jw(n);if(1===i)return e?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return e?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;return e?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape;if(null!=a&&Ut.arraysEqual(n,a)){if(e)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const t=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${t}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=Ut.squeezeShape(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${Gw(ex(t,l),e)}\n      float ${s}(int row, int col) {\n        return ${s}(${nx(n,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Qw(t)}\n      }\n    `;const u=a[0],h=a[1],c=Jw(r);if(1===h)return e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===u)return e?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${c}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${c}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;return e?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${c};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${c};\n    vec2 uv = uvFromFlat(${u}, ${h}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=Ut.squeezeShape(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${Gw(ex(t,u),e)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${nx(n,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${Qw(t)}\n      }\n    `;const h=t.shapeInfo.texShape,c=h[0],p=h[1],d=t.shapeInfo.flatOffset;if(p===a&&null==d)return e?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${c}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return e?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=Jw(r);return e?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${c}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(t,e);case 4:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=Ut.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Gw(ex(t,l),e)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${nx(n,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${Qw(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,p=c[0],d=c[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==h)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==h)return e?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=Jw(r);return e?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(t,e);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],a=e[3]*s,i=e[2]*a,o=e[1]*i,{newShape:l,keptDims:u}=Ut.squeezeShape(e);if(l.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Gw(ex(t,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${nx(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${Qw(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,p=c[0],d=c[1];if(d===o&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Jw(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=Ut.squeezeShape(e);if(s.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Gw(ex(t,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${nx(e,a)});\n      }\n    `}const i=e[5],o=e[4]*i,l=e[3]*o,u=e[2]*l,h=e[1]*u;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Qw(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===h&&null==c)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==c)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Jw(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function jw(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Mw();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,a=Mw();if(e)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(t,e);case 2:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=a[0],o=a[1],l=Mw();if(null!=a&&Ut.arraysEqual(n,a))return e?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(e)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],h=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${h}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(t,e);case 3:return function(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${jw(ex(t,n.slice(1)),e)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${nx(a,r)});\n        }\n      `}const o=Mw();if(e)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],h=Math.ceil(n[2]/2),c=h*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c}, ${h}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(t,e);default:return function(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=Mw();if(e)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=t.shapeInfo.logicalShape,i=a.length,o=t.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],h=l[1],c=Math.ceil(a[i-1]/2);let p=c*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${c} + (col / 2)`;for(let t=2;t<i-1;t++)d=`int b${t}, `+d,p*=a[i-t-1],f=`b${t} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${h};\n      int texC = index - texR * ${h};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(t,e)}}const qw="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Hw="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Kw="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Xw="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Zw(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Jw(t){return`offset${t}`}function Qw(t){const e=t.name,n=Ut.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Yw(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function tx(t,e,n){const{newShape:r,keptDims:s}=Ut.squeezeShape(e),a=e.length,i=t&&3===a&&1===e[0],o=i?e.slice(1):r,l=!t&&a>1&&!Ut.arraysEqual(e,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:s}}function ex(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function nx(t,e){return e.map((e=>t[e])).join(", ")}var rx,sx,ax,ix,ox,lx;function ux(t,e){return[e,t]}function hx(t){const e=Ut.sizeFromShape(t),n=Math.ceil(e/4);return Ut.sizeToSquarishShape(n)}function cx(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function px(t,e){const n=t;let r,s,a,i,o,l,u,h,c,p;return 2===lt().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,h=1,c=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=t.RGBA,s=t.RGBA,a=t.RGBA,i=n.RGBA,o=t.RGBA,u=4,h=4,c=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT,l=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:h,textureTypeHalfFloat:c,textureTypeFloat:p}}function dx(t,e){const n=e();return lt().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}(sx=rx||(rx={}))[sx.DENSE=0]="DENSE",sx[sx.SHARED_BATCH=1]="SHARED_BATCH",(ix=ax||(ax={}))[ix.RENDER=0]="RENDER",ix[ix.UPLOAD=1]="UPLOAD",ix[ix.PIXELS=2]="PIXELS",ix[ix.DOWNLOAD=3]="DOWNLOAD",(lx=ox||(ox={}))[lx.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",lx[lx.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",lx[lx.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",lx[lx.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",lx[lx.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function fx(t){return!!(lt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function mx(t,e){return Tx(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}function gx(t,e){const n=Tx(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(dx(t,(()=>t.shaderSource(n,e))),dx(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=yx.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],s=t.split("\n"),a=s.length.toString().length+2,i=s.map(((t,e)=>Ut.rightPad((e+1).toString(),a)+t));let o=0;for(let t=0;t<i.length;t++)o=Math.max(i[t].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),h=i.slice(r);console.log(l.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${Ut.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const yx=/ERROR: [0-9]+:([0-9]+):/g;function bx(t,e){if(dx(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function wx(t,e,n,r,s,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(dx(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),dx(t,(()=>t.vertexAttribPointer(o,s,t.FLOAT,!1,a,i))),dx(t,(()=>t.enableVertexAttribArray(o))),!0)}function xx(t,e,n,r){dx(t,(()=>function(t,e,n){Ex(t,n),dx(t,(()=>t.activeTexture(t.TEXTURE0+n))),dx(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),dx(t,(()=>t.uniform1i(n,r)))}function vx(t,e,n){dx(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),dx(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function Sx(t,e){dx(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),dx(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function Nx(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function Tx(t,e,n){const r=dx(t,(()=>e()));if(null==r)throw new Error(n);return r}function Ex(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function kx(t,e=2){return Ut.sizeFromShape(t.slice(0,t.length-e))}function Ix(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ax(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[kx(t),...Ix(t)]),e}function $x(t){return t%2==0}function _x(t,e){return null!=t.getExtension(e)}function Cx(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,s=e[n],a=s.shape;if(!Ut.arraysEqual(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&s.isUniform)return;const i=t.texShape,o=s.isUniform?null:s.texData.texShape;if(!Ut.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function Rx(t){return lt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}class Dx{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=rx.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Mw();this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?zw(["r","c","d"],t):Lw(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class Ox{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=rx.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Mw();this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?zw(["r","c","d"],t):Lw(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class Fx{constructor(t){this.variableNames=["A"],this.outTexUsage=ax.DOWNLOAD;const e=Mw();this.outputShape=t,this.userCode=`\n      ${Pw}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class Mx{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ax.DOWNLOAD;const e=Mw();this.outputShape=t,this.userCode=`\n      ${Pw}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class Lx{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Mw();this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Uw(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class zx{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Mw();this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length);let r="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let s=0;s<=1;s++){const a=2*e+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${e} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${e};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Uw(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function Bx(t){const e=Mw();return function(t,e){const n=Tx(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(dx(t,(()=>t.shaderSource(n,e))),dx(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Ux(t){return function(t,e){const n=Tx(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return dx(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),dx(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Px(t){return function(t,e){const n=Tx(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return dx(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),dx(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function Wx(t,e,n,r,s,a){!function(t,e){const n=lt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return Tx(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return dx(t,(()=>t.bindTexture(o,i))),dx(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),dx(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),dx(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),dx(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),1===lt().getNumber("WEBGL_VERSION")?dx(t,(()=>t.texImage2D(o,0,r,e,n,0,s,a,null))):dx(t,(()=>t.texStorage2D(o,1,r,e,n))),dx(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function Vx(t){return t.internalFormatFloat}function Gx(t){return t.internalFormatHalfFloat}function jx(t){return t.downloadTextureFormat}function qx(t){return t.internalFormatPackedFloat}function Hx(t){return t.internalFormatPackedHalfFloat}function Kx(t,e,n,r,s,a,i,o){const l=t,u=new Float32Array(function(t,e){const[n,r]=cx(t,e);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}class Xx{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=lt().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Dw[t]=e}(e,t)):this.gl=Fw(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===lt().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=mx(this.gl,t),_x(this.gl,e))this.textureHalfFloatExtension=mx(this.gl,e);else if(lt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),_x(this.gl,r))this.colorBufferHalfFloatExtension=mx(this.gl,r);else if(lt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",_x(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!_x(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Ux(this.gl),this.indexBuffer=Px(this.gl),this.framebuffer=function(t){return Tx(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=px(this.gl,this.textureHalfFloatExtension)}get debug(){return lt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;dx(t,(()=>t.finish())),dx(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),dx(t,(()=>t.deleteFramebuffer(this.framebuffer))),dx(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),dx(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),dx(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=ux(e,n);return Wx(t,s,a,Vx(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=ux(e,n);return Wx(t,s,a,Gx(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=ux(e,n);return Wx(t,s,a,jx(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){dx(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?2===lt().getNumber("WEBGL_VERSION")?(dx(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data))),t.flush()):dx(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):2===lt().getNumber("WEBGL_VERSION")?(dx(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n))),t.flush()):dx(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),dx(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,s,a){let i,o,l;dx(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===lt().getNumber("WEBGL_VERSION")?dx(t,(()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,o,i))):dx(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,r,0,t.RGBA,o,i))),dx(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=cx(e,n);return Wx(t,s,a,Hx(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[s,a]=cx(e,n);return Wx(t,s,a,qx(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Sx(this.gl,this.framebuffer),this.outputTexture=null),dx(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[s,a]=ux(e,n),i=new Uint8Array(e*n*4);return dx(t,(()=>t.readPixels(0,0,s,a,r.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,s,a){return Kx(this.gl,t,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const s=t.createBuffer();dx(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s)));const a=16*e*n;return dx(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),dx(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),dx(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),s}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(lt().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(s,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=s}else lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return dx(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=Bx(e));const n=function(t){return Tx(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return dx(e,(()=>e.attachShader(n,this.vertexShader))),dx(e,(()=>e.attachShader(n,t))),function(t,e){if(dx(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,n),this.debug&&bx(e,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(t,e,n){return dx(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),wx(t,e,"clipSpacePos",n,3,20,0)&&wx(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),n}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&dx(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&bx(this.gl,this.program),dx(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Tx(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),dx(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),xx(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,s]=cx(e,n);this.setOutputMatrixTextureDriver(t,r,s)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&bx(this.gl,this.program),Nx(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),dx(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),dx(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=mx(this.gl,2===lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Ut.repeatedTry((()=>this.disposed||this.isQueryAvailable(t,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||Ut.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),vx(this.gl,t,this.framebuffer),this.debug&&Nx(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(vx(this.gl,this.outputTexture,this.framebuffer),this.debug&&Nx(this.gl)):Sx(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;vx(r,t,this.framebuffer),this.debug&&Nx(r),this.outputTexture=t,dx(r,(()=>r.viewport(0,0,e,n))),dx(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),dx(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var Zx={};function Jx(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}t(Zx,"simpleAbsImpl",(()=>Jx)),t(Zx,"addImpl",(()=>iv)),t(Zx,"bincountImpl",(()=>lv)),t(Zx,"bincountReduceImpl",(()=>uv)),t(Zx,"ceilImpl",(()=>dv)),t(Zx,"concatImpl",(()=>fv)),t(Zx,"equalImpl",(()=>mv)),t(Zx,"expImpl",(()=>gv)),t(Zx,"expm1Impl",(()=>yv)),t(Zx,"floorImpl",(()=>bv)),t(Zx,"gatherNdImpl",(()=>wv)),t(Zx,"gatherV2Impl",(()=>xv)),t(Zx,"greaterImpl",(()=>vv)),t(Zx,"greaterEqualImpl",(()=>Sv)),t(Zx,"lessImpl",(()=>Nv)),t(Zx,"lessEqualImpl",(()=>Tv)),t(Zx,"linSpaceImpl",(()=>Ev)),t(Zx,"logImpl",(()=>kv)),t(Zx,"maxImpl",(()=>Iv)),t(Zx,"maximumImpl",(()=>Av)),t(Zx,"minimumImpl",(()=>$v)),t(Zx,"multiplyImpl",(()=>_v)),t(Zx,"negImpl",(()=>Rv)),t(Zx,"notEqualImpl",(()=>Dv)),t(Zx,"prodImpl",(()=>Fv)),t(Zx,"rangeImpl",(()=>Mv)),t(Zx,"rsqrtImpl",(()=>Lv)),t(Zx,"sigmoidImpl",(()=>zv)),t(Zx,"sliceImpl",(()=>Bv)),t(Zx,"sparseFillEmptyRowsImpl",(()=>Uv)),t(Zx,"sparseReshapeImpl",(()=>Pv)),t(Zx,"sparseSegmentReductionImpl",(()=>Wv)),t(Zx,"sqrtImpl",(()=>Vv)),t(Zx,"squaredDifferenceImpl",(()=>Gv)),t(Zx,"stridedSliceImpl",(()=>jv)),t(Zx,"stringNGramsImpl",(()=>Hv)),t(Zx,"stringSplitImpl",(()=>Xv)),t(Zx,"stringToHashBucketFastImpl",(()=>Zv)),t(Zx,"subImpl",(()=>Jv)),t(Zx,"tileImpl",(()=>Yv)),t(Zx,"topKImpl",(()=>nS)),t(Zx,"transposeImpl",(()=>Ov)),t(Zx,"uniqueImpl",(()=>rS));function Qx(t){return(e,n,r,s,a)=>{const i=ql.assertAndGetBroadcastShape(e,n),o=i.length,l=Ut.computeStrides(i),u=Ut.sizeFromShape(i),h=Ut.getTypedArrayFromDType(a,u),c=e.length,p=n.length,d=Ut.computeStrides(e),f=Ut.computeStrides(n),m=ql.getBroadcastDims(e,i),g=ql.getBroadcastDims(n,i);if(m.length+g.length===0)for(let e=0;e<h.length;++e)h[e]=t(r[e%r.length],s[e%s.length]);else for(let e=0;e<h.length;++e){const n=Ut.indexToLoc(e,o,l),a=n.slice(-c);m.forEach((t=>a[t]=0));const i=Ut.locToIndex(a,c,d),u=n.slice(-p);g.forEach((t=>u[t]=0));const y=Ut.locToIndex(u,p,f);h[e]=t(r[i],s[y])}return[h,i]}}function Yx(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}function tv(t,e,n="float32"){if("complex64"===n){return Yx({inputs:{real:tv(t,e,"float32"),imag:tv(t,e,"float32")},backend:t})}const r=Ut.makeZerosTypedArray(Ut.sizeFromShape(e),n);return t.makeTensorInfo(e,n,r)}function ev(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function nv(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}function rv(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return ev({inputs:{x:s},backend:n});const t=tv(n,s.shape,s.dtype),e=rv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=Yx({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===s.dtype){const t=nv({inputs:{input:s},backend:n}),e=rv({inputs:{x:t},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(t),e}if(!Ut.hasEncodingLoss(s.dtype,a)){const t=ev({inputs:{x:s},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a){const t=n.data.get(s.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(s.shape,"int32",e)}if("bool"===a){const t=n.data.get(s.dataId).values,e=Ut.toTypedArray([0],s.dtype),[r,a]=Qx(((t,e)=>t!==e?1:0))(s.shape,[],t,e,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}function sv(t,e,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,o=s;_w([a,i],t);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,h="string"===a.dtype?ql.fromUint8ToStringArray(l):l,c="string"===a.dtype?ql.fromUint8ToStringArray(u):u,p=r||a.dtype,[d,f]=e(a.shape,i.shape,h,c,p);return o.makeTensorInfo(f,p,d)}:({inputs:t,backend:s})=>{const{a:a,b:i}=t,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const t=rv({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,s=e.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,h=rv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),c=o.data.get(h.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),w=o.makeTensorInfo(b,"float32",g),x=o.makeTensorInfo(b,"float32",y),v=Yx({inputs:{real:w,imag:x},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(x),v}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=e(a.shape,i.shape,t,n,s);return o.makeTensorInfo(u,s,l)}}}function av(t){return(e,n,r,s,a,i)=>{const o=ql.assertAndGetBroadcastShape(e,n),l=Ut.sizeFromShape(o),u=o.length,h=Ut.computeStrides(o),c=Ut.getTypedArrayFromDType("float32",l),p=Ut.getTypedArrayFromDType("float32",l),d=ql.getBroadcastDims(e,o),f=ql.getBroadcastDims(n,o),m=ql.mergeRealAndImagArrays(r,s),g=ql.mergeRealAndImagArrays(a,i),y=e.length,b=Ut.computeStrides(e),w=n.length,x=Ut.computeStrides(n);if(d.length+f.length===0)for(let e=0;e<c.length;e++){const n=e%m.length,r=e%g.length,s=t(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);c[e]=s.real,p[e]=s.imag}else for(let e=0;e<c.length;e++){const n=Ut.indexToLoc(e,u,h),r=n.slice(-y);d.forEach((t=>r[t]=0));const s=Ut.locToIndex(r,y,b),a=n.slice(-w);f.forEach((t=>a[t]=0));const i=Ut.locToIndex(a,w,x),o=t(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);c[e]=o.real,p[e]=o.imag}return[c,p,o]}}const iv=Qx(((t,e)=>t+e)),ov=av(((t,e,n,r)=>({real:t+n,imag:e+r})));sv("Add",iv,ov);function lv(t,e,n,r,s){const a=Ut.sizeFromShape(r),i=Ut.makeZerosTypedArray(s,n);for(let n=0;n<t.length;n++){const r=t[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?e[n]:1)}return i}function uv(t,e,n,r=!1){const s=t.shape[0],a=t.shape[1],i=Sa([s,n],e.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=t.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):e.size>0?i.set(i.get(o,a)+e.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}function hv(t){return(e,n,r)=>{const s=Ut.getTypedArrayFromDType(n,e.length);for(let n=0;n<e.length;++n)s[n]=t(e[n],r);return s}}function cv(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(_w(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=Ut.sizeFromShape(i.shape),h=n||i.dtype,c=Ut.getArrayFromDType(h,u);for(let t=0;t<u;++t)c[t]=e(l[t],s);return o.makeTensorInfo(i.shape,h,c)}}function pv(t,e,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(_w(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,h=e(l,u,s);return o.makeTensorInfo(i.shape,u,h)}}const dv=hv((t=>Math.ceil(t)));pv("Ceil",dv);function fv(t,e,n,r){const s=Ut.getArrayFromDType(n,Ut.sizeFromShape(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=Ut.sizeFromShape(t.shape);s.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const a="string"===n?ql.fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)s[o+e]=a[i++]}r+=t.shape[1]}))}return s}const mv=Qx(((t,e)=>t===e?1:0)),gv=(sv("Equal",mv,null,"bool"),hv((t=>Math.exp(t)))),yv=(pv("Exp",gv,"float32"),hv((t=>Math.expm1(t)))),bv=(pv("Expm1",yv),hv((t=>Math.floor(t))));pv("Floor",bv);function wv(t,e,n,r,s,a,i,o,l){const u=Sa([r,a],n);for(let n=0;n<r;n++){const r=[];let h=0;for(let e=0;e<s;e++){const a=t[n*s+e];h+=a*i[e],r.push(a)}if(h<0||h>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let t=0;t<a;t++)u.values[n*a+t]=e.get(...e.indexToLoc(h*a+t))}return u}function xv(t,e,n){const r=Sa(n,t.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=e.locToIndex([a,i]);s[2]=e.values[o];const l=t.locToIndex(s);r.values[n]=t.values[l]}return r}const vv=Qx(((t,e)=>t>e?1:0)),Sv=(sv("Greater",vv,null,"bool"),Qx(((t,e)=>t>=e?1:0))),Nv=(sv("GreaterEqual",Sv,null,"bool"),Qx(((t,e)=>t<e?1:0))),Tv=(sv("Less",Nv,null,"bool"),Qx(((t,e)=>t<=e?1:0)));sv("LessEqual",Tv,null,"bool");function Ev(t,e,n){const r=(e-t)/(n-1),s=Ut.makeZerosTypedArray(n,"float32");s[0]=t;for(let t=1;t<s.length;t++)s[t]=s[t-1]+r;return s}const kv=hv((t=>Math.log(t)));pv("Log",kv);function Iv(t,e,n,r){const s=Ut.getTypedArrayFromDType(r,Ut.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*e;let a=t[r];for(let n=0;n<e;++n){const e=t[r+n];(Number.isNaN(e)||e>a)&&(a=e)}s[n]=a}return s}const Av=Qx(((t,e)=>Math.max(t,e))),$v=(sv("Maximum",Av),Qx(((t,e)=>Math.min(t,e)))),_v=(sv("Minimum",$v),Qx(((t,e)=>t*e))),Cv=av(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})));sv("Multiply",_v,Cv);function Rv(t,e,n){const r=Ut.createScalarValue(-1,n);return _v([],e,r,t,n)}const Dv=Qx(((t,e)=>t!==e?1:0));sv("NotEqual",Dv,null,"bool");function Ov(t,e,n,r,s){const a=e.length,i=Ut.sizeFromShape(e),o=Ut.computeStrides(e),l=Ut.computeStrides(s),u=Ut.getTypedArrayFromDType(n,Ut.sizeFromShape(s));for(let e=0;e<i;++e){const n=Ut.indexToLoc(e,a,o),s=new Array(n.length);for(let t=0;t<s.length;t++)s[t]=n[r[t]];u[Ut.locToIndex(s,a,l)]=t[e]}return u}function Fv(t,e,n,r){const[s,a]=ql.computeOutAndReduceShapes(t,r),i=sn(e,"int32"),o=Ut.makeZerosTypedArray(Ut.sizeFromShape(s),i),l=Ut.sizeFromShape(a);for(let t=0;t<o.length;++t){const e=t*l;let r=1;for(let t=0;t<l;++t)r*=n[e+t];o[t]=r}return{outVals:o,outShape:s,outDtype:i}}function Mv(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return Ut.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((e-t)/n)),a=Ut.makeZerosTypedArray(s,r);e<t&&1===n&&(n=-1),a[0]=t;for(let t=1;t<a.length;t++)a[t]=a[t-1]+n;return a}const Lv=hv((t=>1/Math.sqrt(t))),zv=(pv("Rsqrt",Lv),hv((t=>1/(1+Math.exp(-t)))));cv("Sigmoid",(t=>1/(1+Math.exp(-t))));function Bv(t,e,n,r,s){const a=ys.isSliceContinous(r,e,n),i=Ut.sizeFromShape(n),o=Ut.computeStrides(r);if(a){const n=ys.computeFlatOffset(e,o);return"string"===s?t.slice(n,n+i):t.subarray(n,n+i)}const l=Sa(r,s,"string"===s?ql.fromUint8ToStringArray(t):t),u=Sa(n,s);for(let t=0;t<u.size;++t){const n=u.indexToLoc(t),r=n.map(((t,n)=>t+e[n]));u.set(l.get(...r),...n)}return"string"===s?ql.fromStringArrayToUint8(u.values):u.values}function Uv(t,e,n,r,s,a,i){const o=e[0],l=a[0],u=new Array(l),h=new Array(o),c=e[1];if(0===l){if(0!==o)throw new Error(ql.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[Ut.getArrayFromDType(n,0),[0,c],Ut.getArrayFromDType(s,0),u,h]}let p=!0,d=0;const f=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*c];if(n<0)throw new Error(ql.getSparseFillEmptyRowsNegativeIndexErrorMessage(e,n));if(n>=l)throw new Error(ql.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(e,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let t=0;t<l;++t){const e=0===f[t];u[t]=e,m=m&&!e,f[t]=Math.max(f[t],1),t>0&&(f[t]+=f[t-1])}if(m&&p){const e=t,n=r;for(let t=0;t<o;++t)h[t]=t;return[e,[o,c],n,u,h]}{const e=f[l-1],a=Ut.getArrayFromDType(n,e*c),p=Ut.getArrayFromDType(s,e),d=new Array(l).fill(0);for(let e=0;e<o;++e){const n=t[e*c],s=d[n],i=(0===n?0:f[n-1])+s;d[n]++;for(let n=0;n<c;++n)a[i*c+n]=t[e*c+n];p[i]=r[e],h[e]=i}for(let t=0;t<l;++t){if(0===d[t]){const e=0===t?0:f[t-1];a[e*c+0]=t;for(let t=1;t<c;++t)a[e*c+t]=0;p[e]=i}}return[a,[e,c],p,u,h]}}function Pv(t,e,n,r,s){const a=Ut.sizeFromShape(r),i=e[0],o=s.length,l=[];let u=1,h=-1;for(let t=0;t<o;++t){const e=s[t];if(-1===e){if(-1!==h)throw new Error(ql.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,t));h=t,l.push(1)}else{if(e<0)throw new Error(ql.getSparseReshapeNegativeOutputDimErrorMessage(t,e));u*=e,l.push(e)}}if(-1!==h){if(u<=0)throw new Error(ql.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const t=Math.trunc(a/u);if(u*t!==a)throw new Error(ql.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[h]=t}if(Ut.sizeFromShape(l)!==a)throw new Error(ql.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const c=r.length,p=[];if(c>0){p[c-1]=1;for(let t=c-2;t>=0;--t)p[t]=p[t+1]*r[t+1]}const d=[];if(o>0){d[o-1]=1;for(let t=o-2;t>=0;--t)d[t]=d[t+1]*l[t+1]}const f=Ut.getArrayFromDType(n,i*o);for(let e=0;e<i;++e){let n=0;for(let r=0;r<c;++r)n+=t[e*c+r]*p[r];for(let t=0;t<o;++t)f[e*o+t]=Math.trunc(n/d[t]),n%=d[t]}return[f,[i,o],l]}function Wv(t,e,n,r,s,a=!1,i=0){const o=r.length,l=[e[0],t.length/e[0]],u=l[1],h=o>0?s[o-1]+1:0;if(h<0)throw new Error(ql.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const c=e.slice();c[0]=h;const p=c.reduce(((t,e)=>t*e),1),d=Ut.getArrayFromDType(n,p);if(0===o)return h>0&&d.fill(i),[d,c];if(h<=0)throw new Error(ql.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=s[f];for(;;){let e=0;if(m<o){if(e=s[m],y===e){++m;continue}if(y>=e)throw new Error(ql.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw new Error(ql.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>g&&d.fill(i,g*u,y*u);for(let e=f;e<m;++e){const n=r[e];if(n<0||n>=l[0])throw new Error(ql.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(e,r[e],l[0]));for(let e=0;e<u;e++)d[y*u+e]+=t[n*u+e]}if(a)for(let t=0;t<u;t++)d[y*u+t]/=m-f;if(f=m,++m,g=y+1,y=e,m>o)break}return g<h&&d.fill(i,g*u,h*u),[d,c]}const Vv=hv((t=>Math.sqrt(t))),Gv=(cv("Sqrt",(t=>Math.sqrt(t))),Qx(((t,e)=>{const n=t-e;return n*n})));sv("SquaredDifference",Gv);function jv(t,e,n,r){const s=Sa(t,e.dtype);for(let t=0;t<s.size;t++){const a=s.indexToLoc(t),i=new Array(a.length);for(let t=0;t<i.length;t++)i[t]=a[t]*n[t]+r[t];s.set(e.get(...i),...a)}return s}class qv{constructor(t,e,n,r,s,a){this.separator=Ut.encodeString(t),this.nGramWidths=e,this.leftPad=Ut.encodeString(n),this.rightPad=Ut.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),h=a-(l+u),c=e+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let e=0;e<h;++e)p+=t[c+e].length;p+=u*this.rightPad.length;p+=(l+u+h-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=t=>t.forEach((t=>d[f++]=t));for(let t=0;t<l;++t)m(this.leftPad),m(this.separator);for(let e=0;e<h-1;++e)m(t[c+e]),m(this.separator);if(h>0){m(t[c+h-1]);for(let t=0;t<u;++t)m(this.separator),m(this.rightPad)}else{for(let t=0;t<u-1;++t)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(t,e){const n=t.length,r=e.length;if(r>0){let t=e[0];if(0!==t)throw new Error(`First split value must be 0, got ${t}`);for(let s=1;s<r;++s){let r=e[s]>=t;if(r=r&&e[s]<=n,!r)throw new Error(`Invalid split value ${e[s]}, must be in [${t}, ${n}]`);t=e[s]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${t}`)}const s=r-1,a=Ut.getArrayFromDType("int32",r);if(0===n||0===r){const t=new Array(n);for(let t=0;t<=s;++t)a[t]=0;return[t,a]}a[0]=0;for(let t=1;t<=s;++t){const n=e[t]-e[t-1];let r=0;this.nGramWidths.forEach((t=>{r+=this.getNumNGrams(n,t)})),this.preserveShort&&n>0&&0===r&&(r=1),a[t]=a[t-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=e[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=e[n+1]-e[n],l=this.getNumNGrams(o,a);this.createNGrams(t,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=e[n+1]-e[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(t,r,i,s,l,o)}}return[i,a]}}function Hv(t,e,n,r,s,a,i,o){return new qv(n,r,s,a,i,o).compute(t,e)}function Kv(t,e,n,r){if(!t.length)return;if(0===e.length){for(let e=0;e<t.length;++e)r.push(t.subarray(e,e+1));return}if(1===e.length){const s=e[0];let a=t.indexOf(s);for(;-1!==a;){const e=t.subarray(0,a);n&&0===e.length||r.push(e),a=(t=t.subarray(a+1)).indexOf(s)}return void(n&&0===t.length||r.push(t))}let s=0;for(let a=0;a<t.length+1;a++)if(a===t.length||-1!==e.indexOf(t[a])){const e=t.subarray(s,a);n&&0===e.length||r.push(e),s=a+1}}function Xv(t,e,n){const r=t.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;Kv(t[l],e,n,s);const u=s.length-r;o[l]=u,a+=u,i=Math.max(i,u)}const l=Ut.getArrayFromDType("int32",2*a),u=new Array(a),h=[r,i];let c=0;for(let t=0;t<r;++t)for(let e=0;e<o[t];++e)l[2*c]=t,l[2*c+1]=e,u[c]=s[c],++c;return[l,u,h]}function Zv(t,e){const n=Ut.getArrayFromDType("int32",t.length);for(let r=0;r<t.length;++r)n[r]=Ut.fingerPrint64(t[r]).modulo(e).getLowBitsUnsigned();return n}const Jv=Qx(((t,e)=>t-e)),Qv=av(((t,e,n,r)=>({real:t-n,imag:e-r})));sv("Sub",Jv,Qv);function Yv(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=Sa(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),s=new Array(t.rank);for(let e=0;e<s.length;e++)s[e]=n[e]%t.shape[e];const a=t.locToIndex(s);r.values[e]=t.values[a]}return r}const tS=(t,e)=>{const n=e.value-t.value;return 0===n?t.index-e.index:n};function eS(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=e-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);eS(t,e,Math.max(n,Math.floor(e-a*o/s+l)),Math.min(r,Math.floor(e+(s-a)*o/s+l)))}const s=t[e];let a=n,i=r;for(Ut.swap(t,n,e),tS(t[r],s)>0&&Ut.swap(t,n,r);a<i;){for(Ut.swap(t,a,i),a++,i--;tS(t[a],s)<0;)a+=1;for(;tS(t[i],s)>0;)i-=1}0===tS(t[n],s)?Ut.swap(t,n,i):(i+=1,Ut.swap(t,i,r)),i<=e&&(n=i+1),e<=i&&(r=i-1)}}function nS(t,e,n,r,s){const a=e[e.length-1],[i,o]=[t.length/a,a],l=Ut.getTypedArrayFromDType(n,i*r),u=Ut.getTypedArrayFromDType("int32",i*r);for(let e=0;e<i;e++){const n=e*o,a=t.subarray(n,n+o);let i=new Array(a.length);a.forEach(((t,e)=>i[e]={value:t,index:e})),r<i.length&&(eS(i,r),i=i.slice(0,r)),s&&i.sort(tS);const h=e*r,c=l.subarray(h,h+r),p=u.subarray(h,h+r);for(let t=0;t<r;t++)c[t]=i[t].value,p[t]=i[t].index}const h=e.slice();return h[h.length-1]=r,[Sa(h,n,l),Sa(h,"int32",u)]}function rS(t,e,n,r){const s=Ut.parseAxisParam(e,n)[0],a=[1,n[0],1];for(let t=0;t<s;t++)a[0]*=n[t];a[1]=n[s];for(let t=s+1;t<n.length;t++)a[2]*=n[t];const i={},o=new Int32Array(n[s]),l=new Ue(a,r,t),u=[],h=1===a[0]&&1===a[2];for(let e=0;e<n[s];e++){let n;if(h)n=t[e].toString();else{const t=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)t.push(l.get(n,e,r));n=t.join(",")}if(void 0!==i[n])o[e]=i[n];else{const t=Object.keys(i).length;i[n]=t,o[e]=t,u.push(e)}}const c=a.slice();c[1]=Object.keys(i).length;const p=new Ue(c,r);u.forEach(((t,e)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,t,r),n,e,r)}));const d=n.slice();return d[s]=c[1],{outputValues:p.values,outputShape:d,indices:o}}const{addImpl:sS,bincountImpl:aS,bincountReduceImpl:iS,ceilImpl:oS,concatImpl:lS,equalImpl:uS,expImpl:hS,expm1Impl:cS,floorImpl:pS,gatherNdImpl:dS,gatherV2Impl:fS,greaterImpl:mS,greaterEqualImpl:gS,lessImpl:yS,lessEqualImpl:bS,linSpaceImpl:wS,logImpl:xS,maxImpl:vS,maximumImpl:SS,minimumImpl:NS,multiplyImpl:TS,negImpl:ES,notEqualImpl:kS,prodImpl:IS,rangeImpl:AS,rsqrtImpl:$S,sigmoidImpl:_S,simpleAbsImpl:CS,sliceImpl:RS,sparseFillEmptyRowsImpl:DS,sparseReshapeImpl:OS,sparseSegmentReductionImpl:FS,sqrtImpl:MS,stridedSliceImpl:LS,stringNGramsImpl:zS,stringSplitImpl:BS,stringToHashBucketFastImpl:US,subImpl:PS,tileImpl:WS,topKImpl:VS,transposeImpl:GS,uniqueImpl:jS}=Zx;function qS(t,e){return 1===e?[t]:function(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}(t,e)}class HS{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Rx(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const t=qS("rc",this.rank),e=Yw(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`\n        void main() {\n          ${e} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let e=2;e<this.rank;e++)s=`${t[t.length-1-e]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc),\n              rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1),\n              0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class KS{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length);let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=e,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?Bw(["r","c","d"],"inputShape"):Lw(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Uw(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class XS{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=JS(e,n),s=QS(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=ZS(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[s].shift();return this.usedTextures[s].push(t),t}let i;return r===ox.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===ox.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===ox.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===ox.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===ox.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const s=JS(n,r),a=QS(e,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=ZS(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=lt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[a].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(t);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ZS(t,e,n,r,s){const a=function(t,e){switch(t){case ox.PACKED_2X2_FLOAT32:return qx(e);case ox.PACKED_2X2_FLOAT16:return Hx(e);case ox.UNPACKED_FLOAT32:return Vx(e);case ox.UNPACKED_FLOAT16:return Gx(e);case ox.PACKED_4X1_UNSIGNED_BYTE:return jx(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let i;if(s){const[e,n]=cx(t[0],t[1]);i=e*n}else{const[e,n]=ux(t[0],t[1]);i=e*n}const o=function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}(n,a);return i*o}function JS(t,e){if(t===ax.UPLOAD)return ox.PACKED_2X2_FLOAT32;if(t===ax.RENDER||null==t)return function(t){return lt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?ox.PACKED_2X2_FLOAT32:ox.UNPACKED_FLOAT32:t?ox.PACKED_2X2_FLOAT16:ox.UNPACKED_FLOAT16}(e);if(t===ax.DOWNLOAD||t===ax.PIXELS)return ox.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function QS(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class YS{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class tN{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class eN{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Rx(this.outputShape.length);const e=t.length,n=qS("rc",e),r=Yw(e),s=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const nN=hh.whereImpl,rN={};const sN=lt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class aN extends ct{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!lt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Fw(lt().getNumber("WEBGL_VERSION"));this.binaryCache=((e=lt().getNumber("WEBGL_VERSION"))in rN||(rN[e]={}),rN[e]),this.gpgpu=new Xx(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new XS(this.gpgpu),this.numMBBeforeWarning=null==lt().global.screen?1024:lt().global.screen.height*lt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new ht(this,Bs())}nextDataId(){return aN.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((lt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||lt().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:ax.UPLOAD,refCount:1}),r}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,r,s){if(lt().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:ax.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=e;if(null!=a){let e;e=o?new tN(i,"return x;"):new YS(i,"return x;");const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const l=null!=this.activeTimers;let u,h;if(l&&(u=Ut.now()),"complex64"===r){const t=this.readSync(s.real.dataId),e=this.readSync(s.imag.dataId);h=ql.mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return l&&(this.downloadWaitMs+=Ut.now()-u),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=e;if(null!=s){let e;e=o?new tN(r,"return x;"):new YS(r,"return x;");const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(t);if(lt().getBool("DEBUG")&&!lt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===lt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,h=null;if("complex64"!==a&&lt().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);const e=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(e.texture,...hx(r))}if(this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];u=ql.mergeRealAndImagArrays(e,n)}else if(null==h)u=this.getValuesFromTexture(t);else{const t=Ut.sizeFromShape(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=h){const t=this.gpgpu.gl;dx(t,(()=>t.deleteBuffer(h)))}const c=this.convertAndCacheOnCPU(t,u),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(c))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Bs().removeDataId(t,this),this.pendingDeletes--),c}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>Ut.decodeString(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return Sa(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!fx(n)){if(lt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),s=Ut.sizeFromShape(e);if(lt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...hx(e)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=lt().getBool("WEBGL_PACK")&&!0===r,i=a?Ax(e):e,o=a?new Mx(i):new Fx(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),u=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const s=Ut.flatten(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),a=Ut.flatten(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(s);i.kernelMs=Ut.sum(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:a[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ut.now(),endMs:null}}endTimer(t){return lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=Ut.now(),t)}async getQueryTime(t){if(lt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,s,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=sN){return lt().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&Ut.sizeFromShape(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){ql.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return nN(t.shape,e)}packedUnaryOp(t,e,n){const r=new tN(t.shape,e),s=this.compileAndRun(r,[t],n);return Bs().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=CS(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(lt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"return abs(x);",t.dtype);const e=new YS(t.shape,"return abs(x);"),n=this.compileAndRun(e,[t]);return Bs().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&Ut.isString(n[0])){const s=n.map((t=>Ut.encodeString(t)));r=this.write(s,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Bs().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new eN(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new HS(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[kx(t.shape),...Ix(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[kx(e),...Ix(e)],a=new KS(s,n),i=[n],o=this.runWebGLProgram(a,[r],t.dtype,i,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:s}=e,a=Ax(r);let i;const o=hx(a);i=n?new Ox(a):new Dx(a);const l=[o];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:t}],s,l,!0).dataId}}runWebGLProgram(t,e,n,r,s=!1){const a=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(a.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===rx.DENSE){const e=hx(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===Ut.sizeFromShape(a.shape))return i.values=Ut.getTypedArrayFromDType(a.dtype,0),a;const o=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&Ut.sizeFromShape(e.shape)<=lt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!function(t,e){if(t=t.slice(-2),e=e.slice(-2),Ut.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if($x(n)&&$x(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&$x(t[0])&&$x(e[0])}(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const u={shape:a.shape,texData:i,isUniform:!1},h=function(t,e,n){let r="";e.concat(n).forEach((e=>{const s=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!e.isUniform){const a=e.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=tx(t.packedInputs,e.shape,a);let u="",h="",c="";if(1===o.length&&t.packedInputs){const t=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${t[0]>1}_${t[1]>1}`}else if(2!==o.length||t.packedInputs){if(o.length>2&&!t.packedInputs){const t=Ut.computeStrides(o);c=`${t[0]===a[1]}_${t[t.length-1]===a[1]}`}}else h=`${o[0]>1}_${o[1]>1}`;const p=e.shape.length,d=2===o.length&&Ut.arraysEqual(e.shape,a),f=1===Ut.sizeFromShape(e.shape),m=ql.getBroadcastDims(e.shape,n.shape),g=!t.packedInputs&&p===n.shape.length&&Ut.arraysEqual(a,n.texData.texShape),y=t.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${h}_${c}_${y}_${s}`}else{const t=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${t}_${s}`}}));const s=t.userCode;let a=t.constructor.name;return a+="_"+r+"_"+s+`${lt().getNumber("WEBGL_VERSION")}`,a}(t,l,u),c=this.getAndSaveBinary(h,(()=>function(t,e,n,r){const s=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),a=s.map((t=>t.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=Vw(s,i,e),l=gx(t.gl,o),u=t.createProgram(l);let h=null;const c=t.getUniformLocation(u,"NAN",!1);1===lt().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(u,"INFINITY",!1));const p=!1,d={},f={},m={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n];d[r]=t.getUniformLocation(u,r,p),d[`offset${r}`]=t.getUniformLocation(u,`offset${r}`,p),e.enableShapeUniforms&&(f[`${r}Shape`]=t.getUniformLocation(u,`${r}Shape`,p),m[`${r}TexShape`]=t.getUniformLocation(u,`${r}TexShape`,p))}let g,y,b;e.enableShapeUniforms&&(g=t.getUniformLocation(u,"outShape",p),b=t.getUniformLocation(u,"outShapeStrides",p),y=t.getUniformLocation(u,"outTexShape",p));const w=[];return e.customUniforms&&e.customUniforms.forEach(((e,n)=>{w[n]=t.getUniformLocation(u,e.name,p)})),{program:e,fragmentShader:l,source:o,webGLProgram:u,uniformLocations:d,customUniformLocations:w,inShapeInfos:a,outShapeInfo:i,infLoc:h,nanLoc:c,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,t,l,u))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(t,e,n,r,s){e.program.enableShapeUniforms||(Cx(e.inShapeInfos,n),Cx([e.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===lt().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const s=e.program.variableNames[r],a=e.uniformLocations[s],i=e.uniformLocations[`offset${s}`],o=e.inShapesLocations[`${s}Shape`],l=e.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=tx(e.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:t.gl.uniform1iv(o,new Int32Array(r));break;case 2:t.gl.uniform2iv(o,new Int32Array(r));break;case 3:t.gl.uniform3iv(o,new Int32Array(r));break;case 4:t.gl.uniform4iv(o,new Int32Array(r))}}if(l&&t.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(Ut.sizeFromShape(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(a,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)}));const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:t.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(o,new Int32Array(r.shape))}if(e.outShapeStridesLocation){const n=Ut.computeStrides(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(n));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(n));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(n))}}e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach(((n,r)=>{const a=e.customUniformLocations[r],i=s[r];if("float"===n.type)t.gl.uniform1fv(a,i);else if("vec2"===n.type)t.gl.uniform2fv(a,i);else if("vec3"===n.type)t.gl.uniform3fv(a,i);else if("vec4"===n.type)t.gl.uniform4fv(a,i);else if("int"===n.type)t.gl.uniform1iv(a,i);else if("ivec2"===n.type)t.gl.uniform2iv(a,i);else if("ivec3"===n.type)t.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);t.gl.uniform4iv(a,i)}})),t.executeProgram()}(this.gpgpu,c,l,u,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(d=this.endTimer(d),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(d)}));const f=lt().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const t=Ut.now();t-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!lt().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===s){const t=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),t}return a}compileAndRun(t,e,n,r,s=!1){n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,r,s)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!lt().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ps((()=>{if(!lt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=lt().getBool("DEBUG");lt().set("DEBUG",!1);const e=this.abs(so(1e-8)).dataSync()[0];if(lt().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=e;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Ut.now());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=lt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?Ut.nearestLargerEven(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=Ut.squeezeShape(t);t=e.newShape}let r=Ut.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=kx(t);let n=2,s=2;return t.length&&([n,s]=Ix(t)),r=e*(n/2)*(s/2),Ut.sizeToSquarishShape(r).map((t=>2*t))}return Ut.sizeToSquarishShape(r)}(n,o),e.texShape=h),null!=s){const t=Ax(n);let a,i=h[1],c=h[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&p||([i,c]=cx(h[0],h[1])),a=o?new zx(t,p):new Lx(t,p);const d=p?[c,i]:h,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?ax.PIXELS:ax.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,c,s);const g=[[c,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),w=this.texData.get(b.dataId);e.texture=w.texture,e.texShape=w.texShape,e.isPacked=w.isPacked,e.usage=w.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,l&&(this.uploadWaitMs+=Ut.now()-u)}else{const t=this.acquireTexture(h,i,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}
/** @license See the LICENSE file. */(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*Ut.bytesPerElement(e)}}aN.nextDataId=0;var iN={};function oN(t,e,n){var r=Math.min(t.shape[0],t.shape[1]),s=t.shape[0]/2-r/2,a=t.shape[1]/2-r/2;if(e&&!n){var i=t.slice([s,a,0],[r,r,3]);i=i.reshape([r*r,1,3]);return i=(i=li(i,[.2989,.587,.114])).reshape([r,r,3]),i=hi(i,-1),i=Ka(i,-1)}return t.slice([s,a,0],[r,r,3])}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object.defineProperty(iN,"__esModule",{value:!0}),iN.cropTensor=iN.capture=void 0,iN.capture=function(t,e){return Ps((function(){return oN(us.fromPixels(t),e).expandDims(0).toFloat().div(so(127)).sub(so(1))}))},iN.cropTensor=oN;var lN={};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object.defineProperty(lN,"__esModule",{value:!0}),lN.cropTo=lN.resizeMinTo=lN.resizeMaxTo=lN.resize=void 0;var uN=function(){return document.createElement("canvas")};function hN(t,e,n){return void 0===n&&(n=uN()),n.width=t.width*e,n.height=t.height*e,n.getContext("2d").drawImage(t,0,0,n.width,n.height),n}lN.resize=hN,lN.resizeMaxTo=function(t,e,n){return void 0===n&&(n=uN()),hN(t,e/Math.max(t.width,t.height),n)},lN.resizeMinTo=function(t,e,n){return void 0===n&&(n=uN()),hN(t,e/Math.min(t.width,t.height),n)},lN.cropTo=function(t,e,n,r){void 0===n&&(n=!1),void 0===r&&(r=uN());var s=t.width,a=t.height;t instanceof HTMLVideoElement&&(s=t.videoWidth,a=t.videoHeight);var i=e/Math.min(s,a),o=Math.ceil(s*i),l=Math.ceil(a*i),u=o-e,h=l-e;r.width=r.height=e;var c=r.getContext("2d");return c.drawImage(t,-1*~~(u/2),-1*~~(h/2),o,l),n&&(c.scale(-1,1),c.drawImage(r,-1*e,0)),r};var cN={};
/** @license See the LICENSE file. */Object.defineProperty(cN,"__esModule",{value:!0}),cN.version=void 0;cN.version="0.8.4-alpha2";o.IMAGE_SIZE=224;var pN=function(t){return t.packageVersion=t.packageVersion||cN.version,t.packageName=t.packageName||"@teachablemachine/image",t.timeStamp=t.timeStamp||(new Date).toISOString(),t.userMetadata=t.userMetadata||{},t.modelName=t.modelName||"untitled",t.labels=t.labels||[],t.imageSize=t.imageSize||o.IMAGE_SIZE,t},dN=function(t,e){if(1===t){if(.25!==e&&.5!==e&&.75!==e&&1!==e)return console.warn("Invalid alpha. Options are: 0.25, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",.25.toFixed(2)),.25}else if(.35!==e&&.5!==e&&.75!==e&&1!==e)return console.warn("Invalid alpha. Options are: 0.35, 0.50, 0.75 or 1.00."),console.log("Loading model with alpha: ",.35.toFixed(2)),.35;return e},fN=function(t){return l(void 0,void 0,void 0,(function(){var e;return u(this,(function(n){switch(n.label){case 0:return"string"!=typeof t?[3,3]:[4,fetch(t)];case 1:return[4,n.sent().json()];case 2:return e=n.sent(),[3,4];case 3:if(!(r=t)||!Array.isArray(r.labels))throw new Error("Invalid Metadata provided");e=t,n.label=4;case 4:return[2,pN(e)]}var r}))}))};function mN(t,e,n){return void 0===n&&(n=3),l(this,void 0,void 0,(function(){var r;return u(this,(function(s){switch(s.label){case 0:return[4,e.data()];case 1:return r=s.sent(),[2,Ps((function(){n=Math.min(n,r.length);for(var e=[],s=0;s<r.length;s++)e.push({value:r[s],index:s});e.sort((function(t,e){return e.value-t.value}));var a=new Float32Array(n),i=new Int32Array(n);for(s=0;s<n;s++)a[s]=e[s].value,i[s]=e[s].index;var o=[];for(s=0;s<i.length;s++)o.push({className:t[i[s]],probability:a[s]});return o}))]}}))}))}o.getTopKClasses=mN;var gN=function(){function t(t,e){this.model=t,this._metadata=pN(e)}return Object.defineProperty(t,"EXPECTED_IMAGE_SIZE",{get:function(){return o.IMAGE_SIZE},enumerable:!1,configurable:!0}),t.prototype.getMetadata=function(){return this._metadata},t.prototype.getTotalClasses=function(){return this.model.output.shape[1]},t.prototype.getClassLabels=function(){return this._metadata.labels},t.prototype.predictTopK=function(t,e,n){return void 0===e&&(e=10),void 0===n&&(n=!1),l(this,void 0,void 0,(function(){var r,s,a,i=this;return u(this,(function(o){switch(o.label){case 0:return r=lN.cropTo(t,this._metadata.imageSize,n),s=Ps((function(){var t=iN.capture(r,i._metadata.grayscale);return i.model.predict(t)})),[4,mN(this._metadata.labels,s,e)];case 1:return a=o.sent(),Ws(s),[2,a]}}))}))},t.prototype.predict=function(t,e){return void 0===e&&(e=!1),l(this,void 0,void 0,(function(){var n,r,s,a,i,o=this;return u(this,(function(l){switch(l.label){case 0:return n=lN.cropTo(t,this._metadata.imageSize,e),[4,(r=Ps((function(){var t=iN.capture(n,o._metadata.grayscale);return o.model.predict(t)}))).data()];case 1:for(s=l.sent(),a=[],i=0;i<s.length;i++)a.push({className:this._metadata.labels[i],probability:s[i]});return Ws(r),[2,a]}}))}))},t.prototype.dispose=function(){this.truncatedModel.dispose()},t}();o.CustomMobileNet=gN,o.loadTruncatedMobileNet=function(t){return l(this,void 0,void 0,(function(){var e,n,r,s,a,i,l;return u(this,(function(u){switch(u.label){case 0:return e=function(t){if((t=t||{}).checkpointUrl&&t.trainingLayer)return(t.alpha||t.version)&&console.warn("Checkpoint URL passed to modelOptions, alpha options are ignored"),[t.checkpointUrl,t.trainingLayer];if(t.version=t.version||1,1===t.version){t.alpha=t.alpha||.25,t.alpha=dN(t.version,t.alpha),console.log("Loading mobilenet "+t.version+" and alpha "+t.alpha);var e=t.alpha.toFixed(2);return"1.00"===e&&(e="1.0"),["https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_"+e+"_"+o.IMAGE_SIZE+"/model.json","conv_pw_13_relu"]}if(2===t.version)return t.alpha=t.alpha||.35,t.alpha=dN(t.version,t.alpha),console.log("Loading mobilenet "+t.version+" and alpha "+t.alpha),["https://storage.googleapis.com/teachable-machine-models/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_"+t.alpha.toFixed(2)+"_"+o.IMAGE_SIZE+"_no_top/model.json","out_relu"];throw new Error("MobileNet V"+t.version+" doesn't exist")}(t),n=e[0],r=e[1],[4,sf(n)];case 1:return s=u.sent(),t&&1===t.version?(a=s.getLayer(r),i=nf({inputs:s.inputs,outputs:a.output}),(l=rf()).add(i),l.add(pp.flatten()),[2,l]):(a=s.getLayer(r),i=nf({inputs:s.inputs,outputs:a.output}),(l=rf()).add(i),l.add(pp.globalAveragePooling2d({})),[2,l])}}))}))},o.load=function(t,e){return l(this,void 0,void 0,(function(){var n,r;return u(this,(function(s){switch(s.label){case 0:return[4,sf(t)];case 1:return n=s.sent(),e?[4,fN(e)]:[3,3];case 2:return r=s.sent(),[3,4];case 3:r=null,s.label=4;case 4:return[2,new gN(n,r)]}}))}))},o.loadFromFiles=function(t,e,n){return l(this,void 0,void 0,(function(){var r,s,a;return u(this,(function(i){switch(i.label){case 0:return[4,sf(h.browserFiles([t,e]))];case 1:return r=i.sent(),[4,new Response(n).json()];case 2:return s=i.sent(),n?[4,fN(s)]:[3,4];case 3:return a=i.sent(),[3,5];case 4:a=null,i.label=5;case 5:return[2,new gN(r,a)]}}))}))},Object.defineProperty(i,"IMAGE_SIZE",{enumerable:!0,get:function(){return o.IMAGE_SIZE}}),Object.defineProperty(i,"CustomMobileNet",{enumerable:!0,get:function(){return o.CustomMobileNet}}),Object.defineProperty(i,"load",{enumerable:!0,get:function(){return o.load}}),Object.defineProperty(i,"loadFromFiles",{enumerable:!0,get:function(){return o.loadFromFiles}}),Object.defineProperty(i,"loadTruncatedMobileNet",{enumerable:!0,get:function(){return o.loadTruncatedMobileNet}});var yN,bN={},wN=bN&&bN.__extends||(yN=function(t,e){return(yN=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}yN(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),xN=bN&&bN.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,a){function i(t){try{l(r.next(t))}catch(t){a(t)}}function o(t){try{l(r.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}l((r=r.apply(t,e||[])).next())}))},vN=bN&&bN.__generator||function(t,e){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(s=i.trys,(s=s.length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a};Object.defineProperty(bN,"__esModule",{value:!0}),bN.createTeachable=bN.TeachableMobileNet=void 0;var SN={};a.register("dZKr3",(function(t,e){!function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function s(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.alea=a}(0,t,"function"==typeof define&&define)}));var NN=a("dZKr3");a.register("3dshr",(function(t,e){!function(t,e,n){function r(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor128=a}(0,t,"function"==typeof define&&define)}));var TN=a("3dshr");a.register("8mvBS",(function(t,e){!function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function s(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorwow=a}(0,t,"function"==typeof define&&define)}));var EN=a("8mvBS");a.register("fZ5iK",(function(t,e){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,s=e.i;return t=r[s],n=(t^=t>>>7)^t<<24,n^=(t=r[s+1&7])^t>>>10,n^=(t=r[s+3&7])^t>>>3,n^=(t=r[s+4&7])^t<<7,t=r[s+7&7],n^=(t^=t<<13)^t<<9,r[s]=n,e.i=s+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function s(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xorshift7=a}(0,t,"function"==typeof define&&define)}));var kN=a("fZ5iK");a.register("kw80n",(function(t,e){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,s=e.X,a=e.i;return e.w=r=r+1640531527|0,n=s[a+34&127],t=s[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=s[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,s,a,i,o=[],l=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,l=Math.max(l,e.length)),s=0,a=-32;a<l;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(e&&e.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;t.w=i,t.X=o,t.i=s}(e,t)}function s(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.xor4096=a}(0,t,"function"==typeof define&&define)}));var IN=a("kw80n");a.register("jmq4L",(function(t,e){!function(t,e,n){function r(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,s=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^s,e.a=s-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function s(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===t);return t},i.int32=n.next,i.quick=i,a&&("object"==typeof a&&s(a,n),i.state=function(){return s(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n((function(){return a})):this.tychei=a}(0,t,"function"==typeof define&&define)}));var AN=a("jmq4L"),$N={};!function(t,e){var n,r=(0,eval)("this"),s=256,i=e.pow(s,6),o=e.pow(2,52),l=2*o,u=255;function h(a,u,h){var g=[],y=f(d((u=1==u?{entropy:!0}:u||{}).entropy?[a,m(t)]:null==a?function(){try{var e;return n&&(e=n.randomBytes)?e=e(s):(e=new Uint8Array(s),(r.crypto||r.msCrypto).getRandomValues(e)),m(e)}catch(e){var a=r.navigator,i=a&&a.plugins;return[+new Date,r,i,r.screen,m(t)]}}():a,3),g),b=new c(g),w=function(){for(var t=b.g(6),e=i,n=0;t<o;)t=(t+n)*s,e*=s,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return w.int32=function(){return 0|b.g(4)},w.quick=function(){return b.g(4)/4294967296},w.double=w,f(m(b.S),t),(u.pass||h||function(t,n,r,s){return s&&(s.S&&p(s,b),t.state=function(){return p(b,{})}),r?(e.random=t,n):t})(w,y,"global"in u?u.global:this==e,u.state)}function c(t){var e,n=t.length,r=this,a=0,i=r.i=r.j=0,o=r.S=[];for(n||(t=[n++]);a<s;)o[a]=a++;for(a=0;a<s;a++)o[a]=o[i=u&i+t[a%n]+(e=o[a])],o[i]=e;(r.g=function(t){for(var e,n=0,a=r.i,i=r.j,o=r.S;t--;)e=o[a=u&a+1],n=n*s+o[u&(o[a]=o[i=u&i+e])+(o[i]=e)];return r.i=a,r.j=i,n})(s)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function d(t,e){var n,r=[],s=typeof t;if(e&&"object"==s)for(n in t)try{r.push(d(t[n],e-1))}catch(t){}return r.length?r:"string"==s?t:t+"\0"}function f(t,e){for(var n,r=t+"",s=0;s<r.length;)e[u&s]=u&(n^=19*e[u&s])+r.charCodeAt(s++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(e.seedrandom=h,f(e.random(),t),$N){$N=h;try{n=a("iCyng")}catch(t){}}else"function"==typeof define&&define.amd&&define((function(){return h}))}([],Math),$N.alea=NN,$N.xor128=TN,$N.xorwow=EN,$N.xorshift7=kN,$N.xor4096=IN,$N.tychei=AN,SN=$N;function _N(t,e){for(var n,r=t.length,s=t.slice(),a=r-1;a>0;a-=1){var i=void 0;n=[s[i=e?Math.floor(e()*(a+1)):Math.floor(Math.random()*(a+1))],s[a]],s[a]=n[0],s[i]=n[1]}return s}var CN=function(t){function e(e,n){var r=t.call(this,rf(),n)||this;return r.totalSamples=0,r.examples=[],r.truncatedModel=e,r}return wN(e,t),Object.defineProperty(e.prototype,"asSequentialModel",{get:function(){return this.model},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isTrained",{get:function(){return!!this.model&&this.model.layers&&this.model.layers.length>2},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isPrepared",{get:function(){return!!this.trainDataset},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"numClasses",{get:function(){return this._metadata.labels.length},enumerable:!1,configurable:!0}),e.prototype.addExample=function(t,e){return xN(this,void 0,void 0,(function(){var n,r,s;return vN(this,(function(a){var i;return n="object"==typeof(i=e).dataId&&"object"==typeof i.shape?e:iN.capture(e,this._metadata.grayscale),r=this.truncatedModel.predict(n),s=r.dataSync(),n.dispose(),r.dispose(),this.examples[t].push(s),this.totalSamples++,[2]}))}))},e.prototype.predict=function(e,n){return void 0===n&&(n=!1),xN(this,void 0,void 0,(function(){return vN(this,(function(r){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,t.prototype.predict.call(this,e,n)]}))}))},e.prototype.predictTopK=function(e,n,r){return void 0===n&&(n=10),void 0===r&&(r=!1),xN(this,void 0,void 0,(function(){return vN(this,(function(s){if(!this.model)throw new Error("Model has not been trained yet, called train() first");return[2,t.prototype.predictTopK.call(this,e,n,r)]}))}))},e.prototype.prepare=function(){for(var t in this.examples)if(0===t.length)throw new Error("Add some examples before training");var e=this.convertToTfDataset();this.trainDataset=e.trainDataset,this.validationDataset=e.validationDataset},e.prototype.convertToTfDataset=function(){for(var t=0;t<this.examples.length;t++)this.examples[t]=_N(this.examples[t],this.seed);var e=[],n=[],r=function(t){var r,a,i,o=(r=t,a=s.numClasses,(i=new Array(a).fill(0))[r]=1,i),l=s.examples[t].length,u=l-Math.ceil(.15*l),h=s.examples[t].slice(0,u).map((function(t){return{data:t,label:o}})),c=s.examples[t].slice(u).map((function(t){return{data:t,label:o}}));e=e.concat(h),n=n.concat(c)},s=this;for(t=0;t<this.examples.length;t++)r(t);e=_N(e,this.seed),n=_N(n,this.seed);var a=xb.array(e.map((function(t){return t.data}))),i=xb.array(n.map((function(t){return t.data}))),o=xb.array(e.map((function(t){return t.label}))),l=xb.array(n.map((function(t){return t.label})));return{trainDataset:xb.zip({xs:a,ys:o}),validationDataset:xb.zip({xs:i,ys:l})}},e.prototype.save=function(t,e){return xN(this,void 0,void 0,(function(){return vN(this,(function(n){return[2,this.model.save(t,e)]}))}))},e.prototype.train=function(t,e){return void 0===e&&(e={}),xN(this,void 0,void 0,(function(){var n,r,s,a,i,o,l,u,h,c=this;return vN(this,(function(p){switch(p.label){case 0:if(n=e.onTrainEnd||function(){},e.onTrainEnd=function(t){c.__stopTrainingResolve&&(c.__stopTrainingResolve(),c.__stopTrainingResolve=null),n(t)},this.isPrepared||this.prepare(),r=this.getLabels().length,Ut.assert(r===this.numClasses,(function(){return"Can not train, has "+r+" labels and "+c.numClasses+" classes"})),s=this.truncatedModel.outputs[0].shape.slice(1),a=Ut.sizeFromShape(s),i=this.seed?Hh.varianceScaling({seed:3.14}):Hh.varianceScaling({}),this.trainingModel=rf({layers:[pp.dense({inputShape:[a],units:t.denseUnits,activation:"relu",kernelInitializer:i,useBias:!0}),pp.dense({kernelInitializer:i,useBias:!1,activation:"softmax",units:this.numClasses})]}),o=Vl.adam(t.learningRate),this.trainingModel.compile({optimizer:o,loss:"categoricalCrossentropy",metrics:["accuracy"]}),!(t.batchSize>0))throw new Error("Batch size is 0 or NaN. Please choose a non-zero fraction");return l=this.trainDataset.batch(t.batchSize),u=this.validationDataset.batch(t.batchSize),[4,this.trainingModel.fitDataset(l,{epochs:t.epochs,validationData:u,callbacks:e})];case 1:return p.sent(),(h=rf()).add(this.truncatedModel),h.add(this.trainingModel),this.model=h,o.dispose(),[2,this.model]}}))}))},e.prototype.prepareDataset=function(){for(var t=0;t<this.numClasses;t++)this.examples[t]=[]},e.prototype.setLabel=function(t,e){this._metadata.labels[t]=e},e.prototype.setLabels=function(t){this._metadata.labels=t,this.prepareDataset()},e.prototype.getLabel=function(t){return this._metadata.labels[t]},e.prototype.getLabels=function(){return this._metadata.labels},e.prototype.setName=function(t){this._metadata.modelName=t},e.prototype.getName=function(){return this._metadata.modelName},e.prototype.stopTraining=function(){var t=this;return new Promise((function(e,n){t.trainingModel.stopTraining=!0,t.__stopTrainingResolve=e}))},e.prototype.dispose=function(){this.trainingModel.dispose(),t.prototype.dispose.call(this)},e.prototype.calculateAccuracyPerClass=function(){return xN(this,void 0,void 0,(function(){var t,e,n,r,s,a,i,o,l,u,h,c,p,d,f,m,g,y,b=this;return vN(this,(function(w){switch(w.label){case 0:return t=this.validationDataset.mapAsync((function(t){return xN(b,void 0,void 0,(function(){return vN(this,(function(e){return[2,t.xs]}))}))})),e=this.validationDataset.mapAsync((function(t){return xN(b,void 0,void 0,(function(){return vN(this,(function(e){return[2,t.ys]}))}))})),n=Math.min(e.size,32),r=Math.ceil(e.size/n),s=t.batch(n),a=e.batch(n),[4,s.iterator()];case 1:return i=w.sent(),[4,a.iterator()];case 2:o=w.sent(),l=[],u=[],y=0,w.label=3;case 3:return y<r?[4,i.next()]:[3,7];case 4:return h=w.sent(),c=this.trainingModel.predict(h.value),p=c.argMax(1),l.push(p),[4,o.next()];case 5:d=w.sent(),f=d.value.argMax(1),u.push(f),h.value.dispose(),c.dispose(),d.value.dispose(),w.label=6;case 6:return y++,[3,3];case 7:if(m=Ta(u),g=Ta(l),1!==r)for(y=0;y<l.length;y++)l[y].dispose(),u[y].dispose();return[2,{reference:m,predictions:g}]}}))}))},e.prototype.setSeed=function(t){this.seed=SN(t)},e}(o.CustomMobileNet);bN.TeachableMobileNet=CN,bN.createTeachable=function(t,e){return xN(this,void 0,void 0,(function(){var n;return vN(this,(function(r){switch(r.label){case 0:return[4,o.loadTruncatedMobileNet(e)];case 1:return n=r.sent(),[2,new CN(n,t)]}}))}))},Object.defineProperty(i,"TeachableMobileNet",{enumerable:!0,get:function(){return bN.TeachableMobileNet}}),Object.defineProperty(i,"createTeachable",{enumerable:!0,get:function(){return bN.createTeachable}});var RN={},DN=RN&&RN.__decorate||function(t,e,n,r){var s,a=arguments.length,i=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(t,e,n,r);else for(var o=t.length-1;o>=0;o--)(s=t[o])&&(i=(a<3?s(i):a>3?s(e,n,i):s(e,n))||i);return a>3&&i&&Object.defineProperty(e,n,i),i},ON=RN&&RN.__awaiter||function(t,e,n,r){return new(n||(n=Promise))((function(s,a){function i(t){try{l(r.next(t))}catch(t){a(t)}}function o(t){try{l(r.throw(t))}catch(t){a(t)}}function l(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,o)}l((r=r.apply(t,e||[])).next())}))},FN=RN&&RN.__generator||function(t,e){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(s=i.trys,(s=s.length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a};function MN(t){return(MN="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function LN(t,e,n){var r=n.value;if("function"!=typeof r)throw new TypeError("@boundMethod decorator can only be applied to methods not: ".concat(MN(r)));var s=!1;return{configurable:!0,get:function(){if(s||this===t.prototype||this.hasOwnProperty(e)||"function"!=typeof r)return r;var n=r.bind(this);return s=!0,Object.defineProperty(this,e,{configurable:!0,get:function(){return n},set:function(t){r=t,delete this[e]}}),s=!1,n},set:function(t){r=t}}}function zN(t){var e;return"undefined"!=typeof Reflect&&"function"==typeof Reflect.ownKeys?e=Reflect.ownKeys(t.prototype):(e=Object.getOwnPropertyNames(t.prototype),"function"==typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(t.prototype)))),e.forEach((function(e){if("constructor"!==e){var n=Object.getOwnPropertyDescriptor(t.prototype,e);"function"==typeof n.value&&Object.defineProperty(t.prototype,e,LN(t,e,n))}})),t}function BN(){return 1===arguments.length?zN.apply(void 0,arguments):LN.apply(void 0,arguments)}Object.defineProperty(RN,"__esModule",{value:!0}),RN.Webcam=void 0;var UN={facingMode:"user",frameRate:24},PN=function(){function t(t,e,n){void 0===t&&(t=400),void 0===e&&(e=400),void 0===n&&(n=!1),this.width=t,this.height=e,this.flip=n}return t.prototype.getWebcam=function(t){if(void 0===t&&(t={}),!window.navigator.mediaDevices||!window.navigator.mediaDevices.getUserMedia)return Promise.reject("Your browser does not support WebRTC. Please try another one.");t.width=640;var e=function(t){return t.facingMode=t.facingMode||UN.facingMode,t.frameRate=t.frameRate||UN.frameRate,t.aspectRatio=t.aspectRatio||UN.aspectRatio,t}(t),n=document.createElement("video");return window.navigator.mediaDevices.getUserMedia({video:e}).then((function(t){return n.srcObject=t,n.addEventListener("loadedmetadata",(function(t){var e=n.videoWidth,r=n.videoHeight;n.width=e,n.height=r})),n}),(function(){return Promise.reject("Could not open your camera. You may have denied access.")}))},t.prototype.setup=function(t){return void 0===t&&(t={}),ON(this,void 0,void 0,(function(){var e;return FN(this,(function(n){switch(n.label){case 0:return this.webcam?[3,2]:(e=this,[4,this.getWebcam(t)]);case 1:e.webcam=n.sent(),this.canvas||(this.canvas=document.createElement("canvas"),this.canvas.width=this.width,this.canvas.height=this.height),n.label=2;case 2:return[2]}}))}))},t.prototype.play=function(){return this.webcam.play()},t.prototype.pause=function(){this.webcam.pause()},t.prototype.stop=function(){this.stopStreamedVideo(this.webcam)},t.prototype.update=function(){this.renderCameraToCanvas()},t.prototype.stopStreamedVideo=function(t){t.srcObject.getTracks().forEach((function(t){t.stop()})),t.srcObject=null},t.prototype.renderCameraToCanvas=function(){if(this.canvas&&this.webcam){var t=this.canvas.getContext("2d");if(0!==this.webcam.videoWidth){var e=lN.cropTo(this.webcam,this.width,this.flip);t.drawImage(e,0,0)}}},DN([BN],t.prototype,"getWebcam",null),DN([BN],t.prototype,"setup",null),DN([BN],t.prototype,"play",null),DN([BN],t.prototype,"pause",null),DN([BN],t.prototype,"stop",null),DN([BN],t.prototype,"update",null),DN([BN],t.prototype,"stopStreamedVideo",null),DN([BN],t.prototype,"renderCameraToCanvas",null),t}();RN.Webcam=PN,Object.defineProperty(i,"Webcam",{enumerable:!0,get:function(){return RN.Webcam}}),Object.defineProperty(i,"version",{enumerable:!0,get:function(){return cN.version}});var WN=async t=>{alert(t)};var VN=async(t,e)=>{const n=document.createElement("canvas");n.width=e.width,n.height=e.height;const r=n.getContext("2d");r.drawImage(e,0,0);const s=r.getImageData(0,0,Math.floor(n.width/2),n.height),a=r.getImageData(Math.floor(n.width/2),0,Math.floor(n.width/2),n.height),i=await t.predict(await createImageBitmap(s)),o=await t.predict(await createImageBitmap(a));let l,u,h=0;i.forEach((t=>{t.probability>h&&(l=t.className,h=t.probability)}));let c=0;o.forEach((t=>{t.probability>c&&(u=t.className,c=t.probability)})),n.remove(),h>=.95&&c>=.95&&(async t=>{const e=[t.left,t.right],n=["left","right"];e.includes("rock")&&e.includes("paper")&&WN(n[e.indexOf("paper")]),e.includes("rock")&&e.includes("scissors")&&WN(n[e.indexOf("rock")]),e.includes("paper")&&e.includes("scissors")&&WN(n[e.indexOf("scissors")])})({left:l,right:u})};window.onload=async()=>{const t=await(async()=>{const t=await navigator.mediaDevices.getUserMedia({audio:!1,video:{width:1920,height:1080,frameRate:60}}),e=document.getElementById("video");return e.width=t.getVideoTracks()[0].getSettings().width,e.height=t.getVideoTracks()[0].getSettings().height,e.srcObject=t,e})(),e=await i.load("./model/model.json","./model/metadata.json");setInterval((()=>{VN(e,t)}),250)};
//# sourceMappingURL=index.896a3b1e.js.map
